SONEIUM_WANTED_TX_COUNT = [45, 50]      # необходимое количество транзакций
SONEIUM_WANT_BALANCE = [0.005, 0.006]   # сумма MON на балансе в Monad, при не хватке, софт запустит процесс вывода + рефьюла в сеть

SONEIUM_MIN_USDC_COLLETCOR = 0.1        # минимальное кол-во USDC для сбора в ETH
SONEIUM_MIN_WETH_COLLETCOR = 0.0001     # минимальное кол-во WETH для сбора в ETH
SONEIUM_MIN_SAKE_COLLETCOR = 0.0001     # минимальное кол-во LP токенов для сбора в ETH
SONEIUM_MIN_IONIC_COLLETCOR = 0.0001    # минимальное кол-во LP токенов для сбора в ETH

SONEIUM_ETH_WRAP_AMOUNT = ['80', '90']  # сумма для врапа, применяется для ETH, обратно 100%
SONEIUM_ETH_SWAP_AMOUNT = ['1', '5']    # сумма для свапа, применяется для ETH, обратно 100%

SONEIUM_CREDENTIAL_TO_SKIP = [
    514433168942563328,  # https://app.galxe.com/quest/credential/514433168942563328
    513985145116557312,  # https://app.galxe.com/quest/credential/514433168942563328
]

# Нужно ли выполнять задание минтом Somnia - RubyScore ID (0.0015 ETH в Base)
SONEIUM_RUBYSCORE_ENABLED = true

# Попробовать автоматически докинуть газ через smart refuel, если его не хватает в Base (true — да, false — просто выдать ошибку)
# Если true, то обязательно настрой:
# - BRIDGE_L2_NETWORKS — список сетей, откуда брать газ (например: ["Arbitrum", "Optimism"])
# - BRIDGE_AMOUNT — примерный объём газа, который нужно перекинуть ~ 0.0015 ETH
# - REFUEL_DAPP — 1 (GasZip. MeMeBridge не поддерживается для этого роута)
# - CEX_USING — ID биржи, если будет задействован вывод, при недостаточном балансе

SONEIUM_RUBYSCORE_SMART_REFUEL = true