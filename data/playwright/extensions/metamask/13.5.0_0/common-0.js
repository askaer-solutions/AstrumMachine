LavaPack.loadBundle([[1,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){t.exports={CSS_loadingTakingTooLongActionText:{message:"Relaunch MetaMask if the problem persists.",description:"Second line of the message that is shown when the initial loading of the MetaMask UI takes a very long time."},CSS_loadingTakingTooLongMessageText:{message:"Loading is taking longer than usual.",description:"First line of the message that is shown when the initial loading of the MetaMask UI takes a very long time."},QRHardwareInvalidTransactionTitle:{message:"Error"},QRHardwareMismatchedSignId:{message:"Incongruent transaction data. Please check the transaction details."},QRHardwarePubkeyAccountOutOfRange:{message:"No more accounts. If you would like to access another account unlisted below, please reconnect your hardware wallet and select it."},QRHardwareScanInstructions:{message:"Place the QR code in front of your camera. The screen is blurred, but it will not affect the reading."},QRHardwareSignRequestCancel:{message:"Reject"},QRHardwareSignRequestDescription:{message:"After you’ve signed with your wallet, click on 'Get Signature' to receive the signature"},QRHardwareSignRequestGetSignature:{message:"Get signature"},QRHardwareSignRequestSubtitle:{message:"Scan the QR code with your wallet"},QRHardwareSignRequestTitle:{message:"Request signature"},QRHardwareUnknownQRCodeTitle:{message:"Error"},QRHardwareUnknownWalletQRCode:{message:"Invalid QR code. Please scan the sync QR code of the hardware wallet."},QRHardwareWalletImporterTitle:{message:"Scan QR code"},QRHardwareWalletSteps1Description:{message:"You can choose from a list of official QR-code supporting partners below."},QRHardwareWalletSteps1Title:{message:"Connect your QR hardware wallet"},QRHardwareWalletSteps2Description:{message:"Ngrave Zero"},SrpListHideAccounts:{message:"Hide $1 accounts",description:"$1 is the number of accounts"},SrpListHideSingleAccount:{message:"Hide 1 account"},SrpListShowAccounts:{message:"Show $1 accounts",description:"$1 is the number of accounts"},SrpListShowSingleAccount:{message:"Show 1 account"},about:{message:"About"},accept:{message:"Accept"},acceptTermsOfUse:{message:"I have read and agree to the $1",description:"$1 is the `terms` message"},accessingYourCamera:{message:"Accessing your camera..."},account:{message:"Account"},accountActivity:{message:"Account activity"},accountActivityText:{message:"Select the accounts you want to be notified about:"},accountAlreadyExistsLogin:{message:"Log in"},accountAlreadyExistsLoginDescription:{message:"A wallet using “$1” already exists. Do you want to try logging in instead?",description:"$1 is the account email"},accountAlreadyExistsTitle:{message:"Wallet already exists"},accountDetails:{message:"Account details"},accountDetailsSrpBackUpMessage:{message:"Back up",description:"Text used to describe action for SRP backup. Used on multichain account details."},accountIdenticon:{message:"Account icon"},accountIdenticonDescription:{message:"Choose from three different styles of unique icons that can help you identify accounts at a glance."},accountIsntConnectedToastText:{message:"$1 isn't connected to $2"},accountName:{message:"Account name"},accountNameAlreadyInUse:{message:"This name is already in use.",description:"Error help text used under the input field for renaming multichain account when user tries to use existing name."},accountNameDuplicate:{message:"This account name already exists",description:"This is an error message shown when the user enters a new account name that matches an existing account name"},accountNameReserved:{message:"This account name is reserved",description:"This is an error message shown when the user enters a new account name that is reserved for future use"},accountNotFoundCreateOne:{message:"Yes, create a new wallet"},accountNotFoundDescription:{message:"We couldn’t find a wallet for “$1”. Do you want to create a new one with this login?",description:"$1 is the account email"},accountNotFoundTitle:{message:"Wallet not found"},accountOptions:{message:"Account options"},accountPermissionToast:{message:"Account permissions updated"},accountSelectionRequired:{message:"You need to select an account!"},accountSmallCase:{message:"account"},accountTypeNotSupported:{message:"Account type not supported"},accounts:{message:"Accounts"},accountsConnected:{message:"Accounts connected"},accountsPermissionsTitle:{message:"See your accounts and suggest transactions"},accountsSmallCase:{message:"accounts"},active:{message:"Active"},activity:{message:"Activity"},activityEmptyDescription:{message:"Nothing to see yet. Swap your first token today."},activityLog:{message:"Activity log"},add:{message:"Add"},addACustomNetwork:{message:"Add a custom network"},addAHardwareWallet:{message:"Add a hardware wallet"},addANetwork:{message:"Add a network"},addANickname:{message:"Add a nickname"},addAUrl:{message:"Add a URL"},addAccount:{message:"Add account"},addAccountFromNetwork:{message:"Add $1 account",description:"$1 is the network name, e.g. Bitcoin or Solana"},addAccountOrWallet:{message:"Add account or wallet"},addAccountToMetaMask:{message:"Add account to MetaMask"},addAcquiredTokens:{message:"Add the tokens you've acquired using MetaMask"},addAlias:{message:"Add alias"},addBitcoinAccountLabel:{message:"Bitcoin account"},addBlockExplorer:{message:"Add a block explorer"},addBlockExplorerUrl:{message:"Add a block explorer URL"},addContact:{message:"Add contact"},addCustomNetwork:{message:"Add custom network"},addEthereumChainWarningModalHeader:{message:"Only add this RPC provider if you’re sure you can trust it. $1",description:"$1 is addEthereumChainWarningModalHeaderPartTwo passed separately so that it can be bolded"},addEthereumChainWarningModalHeaderPartTwo:{message:"Malicious providers may lie about the state of the blockchain and record your network activity."},addEthereumChainWarningModalListHeader:{message:"It's important that your provider is reliable, as it has the power to:"},addEthereumChainWarningModalListPointOne:{message:"See your accounts and IP address, and associate them together"},addEthereumChainWarningModalListPointThree:{message:"Show account balances and other on-chain states"},addEthereumChainWarningModalListPointTwo:{message:"Broadcast your transactions"},addEthereumChainWarningModalTitle:{message:"You are adding a new RPC provider for Ethereum Mainnet"},addEthereumWatchOnlyAccount:{message:"Watch an Ethereum account (Beta)"},addFriendsAndAddresses:{message:"Add friends and addresses you trust"},addHardwareWalletLabel:{message:"Hardware wallet"},addIPFSGateway:{message:"Add your preferred IPFS gateway"},addImportAccount:{message:"Add account or hardware wallet"},addMemo:{message:"Add memo"},addNetwork:{message:"Add network"},addNetworkConfirmationTitle:{message:"Add $1",description:"$1 represents network name"},addNewAccount:{message:"Add a new Ethereum account"},addNewEthereumAccountLabel:{message:"Ethereum account"},addNewSolanaAccountLabel:{message:"Solana account"},addNft:{message:"Add NFT"},addNfts:{message:"Add NFTs"},addNonEvmAccount:{message:"Add $1 account",description:"$1 is the non EVM network where the account is going to be created, e.g. Bitcoin or Solana"},addNonEvmAccountFromNetworkPicker:{message:"To enable the $1 network, you need to create a $2 account.",description:"$1 is the non EVM network where the account is going to be created, e.g. Solana Mainnet or Solana Devnet. $2 is the account type, e.g. Bitcoin or Solana"},addRpcUrl:{message:"Add RPC URL"},addSnapAccountToggle:{message:'Enable "Add account Snap (Beta)"'},addSnapAccountsDescription:{message:"Turning on this feature will give you the option to add the new Beta account Snaps right from your account list. If you install an account Snap, remember that it is a third-party service."},addSuggestedNFTs:{message:"Add suggested NFTs"},addSuggestedTokens:{message:"Add suggested tokens"},addToken:{message:"Add token"},addTokenByContractAddress:{message:"Can’t find a token? You can manually add any token by pasting its address. Token contract addresses can be found on $1",description:"$1 is a blockchain explorer for a specific network, e.g. Etherscan for Ethereum"},addUrl:{message:"Add URL"},addWallet:{message:"Add wallet"},addingAccount:{message:"Adding account"},additionalNetworks:{message:"Additional networks"},address:{message:"Address"},addressCopied:{message:"Address copied"},addressLabel:{message:"address",description:"Label for address count (single address). Used on multichain account details page."},addressMismatch:{message:"Site address mismatch"},addressMismatchOriginal:{message:"Current URL: $1",description:"$1 replaced by origin URL in confirmation request"},addressMismatchPunycode:{message:"Punycode version: $1",description:"$1 replaced by punycode version of the URL in confirmation request"},addressQrCodeModalDescription:{message:"Use this address to receive tokens and collectibles on $1",description:"$1 is the network name"},addressQrCodeModalHeading:{message:"$1 Address",description:"$1 is the network name"},addressQrCodeModalTitle:{message:"$1 / $2",description:"$1 is account name, $2 is network name"},addresses:{message:"Addresses",description:"Multichain account menu item for linking to addresses page"},addressesLabel:{message:"addresses",description:"Label for address count (multiple addresses). Used on multichain account details page."},advanced:{message:"Advanced"},advancedBaseGasFeeToolTip:{message:"When your transaction gets included in the block, any difference between your max base fee and the actual base fee will be refunded. Total amount is calculated as max base fee (in GWEI) * gas limit."},advancedDetailsDataDesc:{message:"Data"},advancedDetailsHexDesc:{message:"Hex"},advancedDetailsNonceDesc:{message:"Nonce"},advancedDetailsNonceTooltip:{message:"This is the transaction number of an account. Nonce for the first transaction is 0 and it increases in sequential order."},advancedGasFeeDefaultOptIn:{message:"Save these values as my default for the $1 network.",description:"$1 is the current network name."},advancedGasFeeModalTitle:{message:"Advanced gas fee"},advancedGasPriceTitle:{message:"Gas price"},advancedPriorityFeeToolTip:{message:"Priority fee (aka “miner tip”) goes directly to miners and incentivizes them to prioritize your transaction."},airDropPatternDescription:{message:"The token's on-chain history reveals prior instances of suspicious airdrop activities."},airDropPatternTitle:{message:"Airdrop Pattern"},airgapVault:{message:"AirGap Vault"},alert:{message:"Alert"},alertAccountTypeUpgradeMessage:{message:"You're updating your account to a smart account. You'll keep the same account address while unlocking faster transactions and lower network fees. $1."},alertAccountTypeUpgradeTitle:{message:"Account type"},alertActionBuyWithNativeCurrency:{message:"Buy $1"},alertActionUpdateGas:{message:"Update gas limit"},alertActionUpdateGasFee:{message:"Update fee"},alertActionUpdateGasFeeLevel:{message:"Update gas options"},alertContentMultipleApprovals:{message:"You're giving someone else permission to withdraw your tokens, even though it's not necessary for this transaction."},alertDisableTooltip:{message:'This can be changed in "Settings > Alerts"'},alertMessageAddressMismatchWarning:{message:"Attackers sometimes mimic sites by making small changes to the site address. Make sure you're interacting with the intended site before you continue."},alertMessageAddressTrustSignal:{message:"We can't verify this address. It may be new or unverified. Only continue if you trust the source."},alertMessageAddressTrustSignalMalicious:{message:"If you confirm this request, you will probably lose your assets to a scammer."},alertMessageChangeInSimulationResults:{message:"Estimated changes for this transaction have been updated. Review them closely before proceeding."},alertMessageFirstTimeInteraction:{message:"You're interacting with this address for the first time. Make sure that it's correct before you continue."},alertMessageGasEstimateFailed:{message:"We’re unable to provide an accurate fee and this estimate might be high. We suggest you to input a custom gas limit, but there’s a risk the transaction will still fail."},alertMessageGasFeeLow:{message:"When choosing a low fee, expect slower transactions and longer wait times. For faster transactions, choose Market or Aggressive fee options."},alertMessageGasTooLow:{message:"To continue with this transaction, you’ll need to increase the gas limit to 21000 or higher."},alertMessageInsufficientBalanceWithNativeCurrency:{message:"You do not have enough $1 in your account to pay for network fees."},alertMessageNoGasPrice:{message:"We can’t move forward with this transaction until you manually update the fee."},alertMessageOriginTrustSignalMalicious:{message:"This has been identified as malicious. We recommend not interacting with this site."},alertMessageOriginTrustSignalWarning:{message:"This has been identified as suspicious. We recommend not interacting with this site."},alertMessageSignInDomainMismatch:{message:"The site making the request is not the site you’re signing into. This could be an attempt to steal your login credentials."},alertMessageSignInWrongAccount:{message:"This site is asking you to sign in using the wrong account."},alertMessageTokenTrustSignalMalicious:{message:"This token has been identified as malicious. Interacting with this token may result in a loss of funds."},alertMessageTokenTrustSignalWarning:{message:"This token shows strong signs of malicious behavior. Continuing may result in loss of funds."},alertModalAcknowledge:{message:"I have acknowledged the risk and still want to proceed"},alertModalDetails:{message:"Alert Details"},alertModalReviewAllAlerts:{message:"Review all alerts"},alertReasonChangeInSimulationResults:{message:"Results have changed"},alertReasonFirstTimeInteraction:{message:"1st interaction"},alertReasonGasEstimateFailed:{message:"Inaccurate fee"},alertReasonGasFeeLow:{message:"Slow speed"},alertReasonGasTooLow:{message:"Low gas limit"},alertReasonInsufficientBalance:{message:"Insufficient funds"},alertReasonMultipleApprovals:{message:"Unnecessary permission"},alertReasonNoGasPrice:{message:"Fee estimate unavailable"},alertReasonOriginTrustSignalMalicious:{message:"Malicious site"},alertReasonOriginTrustSignalVerified:{message:"Verified site"},alertReasonOriginTrustSignalWarning:{message:"Suspicious site"},alertReasonPendingTransactions:{message:"Pending transaction"},alertReasonSignIn:{message:"Suspicious sign-in request"},alertReasonTokenTrustSignalMalicious:{message:"Malicious token"},alertReasonTokenTrustSignalWarning:{message:"Suspicious token"},alertReasonWrongAccount:{message:"Wrong account"},alertSelectedAccountWarning:{message:"This request is for a different account than the one selected in your wallet. To use another account, connect it to the site."},alerts:{message:"Alerts"},all:{message:"All"},allNetworks:{message:"All networks"},allPermissions:{message:"All permissions"},allPopularNetworks:{message:"All popular networks"},allTimeHigh:{message:"All time high"},allTimeLow:{message:"All time low"},allowNotifications:{message:"Allow notifications"},allowWithdrawAndSpend:{message:"Allow $1 to withdraw and spend up to the following amount:",description:"The url of the site that requested permission to 'withdraw and spend'"},amount:{message:"Amount"},amountReceived:{message:"Amount Received"},amountSent:{message:"Amount Sent"},andForListItems:{message:"$1, and $2",description:"$1 is the first item, $2 is the last item in a list of items. Used in Snap Install Warning modal."},andForTwoItems:{message:"$1 and $2",description:"$1 is the first item, $2 is the second item. Used in Snap Install Warning modal."},appDescription:{message:"The world's most trusted crypto wallet",description:"The description of the application"},appName:{message:"MetaMask",description:"The name of the application"},appNameBeta:{message:"MetaMask Beta",description:"The name of the application (Beta)"},appNameFlask:{message:"MetaMask Flask",description:"The name of the application (Flask)"},apply:{message:"Apply"},approve:{message:"Approve spend limit"},approveButtonText:{message:"Approve"},approveIncreaseAllowance:{message:"Increase $1 spending cap",description:"The token symbol that is being approved"},approveSpendingCap:{message:"Approve $1 spending cap",description:"The token symbol that is being approved"},approved:{message:"Approved"},approvedOn:{message:"Approved on $1",description:"$1 is the approval date for a permission"},approvedOnForAccounts:{message:"Approved on $1 for $2",description:"$1 is the approval date for a permission. $2 is the AvatarGroup component displaying account images."},areYouSure:{message:"Are you sure?"},asset:{message:"Asset"},assetChartNoHistoricalPrices:{message:"We could not fetch any historical data"},assetMultipleNFTsBalance:{message:"$1 NFTs"},assetOptions:{message:"Asset options"},assetSingleNFTBalance:{message:"$1 NFT"},assets:{message:"Assets"},assetsDescription:{message:"Autodetect tokens in your wallet, display NFTs, and get batched account balance updates"},attemptToCancelSwapForFree:{message:"Attempt to cancel swap for free"},attributes:{message:"Attributes"},attributions:{message:"Attributions"},auroraRpcDeprecationMessage:{message:"The Infura RPC URL is no longer supporting Aurora."},authorizedPermissions:{message:"You have authorized the following permissions"},autoDetectTokens:{message:"Autodetect tokens"},autoDetectTokensDescription:{message:"We use third-party APIs to detect and display new tokens sent to your wallet. Turn off if you don’t want the app to automatically pull data from those services. $1",description:"$1 is a link to a support article"},autoLockTimeLimit:{message:"Auto-lock timer (minutes)"},autoLockTimeLimitDescription:{message:"Set the idle time in minutes before MetaMask will become locked."},available:{message:"available"},average:{message:"Average"},back:{message:"Back"},backup:{message:"Backup"},backupAndSync:{message:"Backup and sync"},backupAndSyncBasicFunctionalityNameMention:{message:"basic functionality"},backupAndSyncEnable:{message:"Turn on backup and sync"},backupAndSyncEnableConfirmation:{message:"When you turn on backup and sync, you’re also turning on $1. Do you want to continue?",description:"$1 is backupAndSyncBasicFunctionalityNameMention in bold."},backupAndSyncEnableDescription:{message:"Backup and sync lets us store encrypted data for your custom settings and features. This keeps your MetaMask experience the same across devices and restores settings and features if you ever need to reinstall MetaMask. This doesn’t back up your Secret Recovery Phrase. $1.",description:"$1 is link to the backup and sync privacy policy."},backupAndSyncEnableDescriptionUpdatePreferences:{message:"You can update your preferences at any time in $1",description:"$1 is a bolded text that highlights the path to the settings page."},backupAndSyncEnableDescriptionUpdatePreferencesPath:{message:"Settings > Backup and sync."},backupAndSyncFeatureAccounts:{message:"Accounts"},backupAndSyncFeatureContacts:{message:"Contacts"},backupAndSyncManageWhatYouSync:{message:"Manage what you sync"},backupAndSyncManageWhatYouSyncDescription:{message:"Turn on what’s synced between your devices."},backupAndSyncPrivacyLink:{message:"Learn how we protect your privacy"},backupApprovalInfo:{message:"This secret code is required to recover your wallet in case you lose your device, forget your password, have to re-install MetaMask, or want to access your wallet on another device."},backupApprovalNotice:{message:"Back up your Secret Recovery Phrase to keep your wallet and funds secure."},backupKeyringSnapReminder:{message:"Be sure you can access any accounts created by this Snap on your own before removing it"},backupNow:{message:"Back up now"},balance:{message:"Balance"},balanceOutdated:{message:"Balance may be outdated"},baseFee:{message:"Base fee"},basic:{message:"Basic"},basicConfigurationDescription:{message:"MetaMask offers basic features like token details and gas settings through internet services. When you use internet services, your IP address is shared, in this case with MetaMask. This is just like when you visit any website. MetaMask uses this data temporarily and never sells your data. You can use a VPN or turn off these services, but it may affect your MetaMask experience. To learn more read our $1.",description:"$1 is to be replaced by the message for privacyMsg, and will link to https://consensys.io/privacy-policy"},basicConfigurationLabel:{message:"Basic functionality"},basicConfigurationModalCheckbox:{message:"I understand and want to continue"},basicConfigurationModalDisclaimerOff:{message:"This means you won't fully optimize your time on MetaMask. Basic features (like token details, optimal gas settings, and others) won't be available to you."},basicConfigurationModalDisclaimerOffAdditionalText:{message:"Turning this off also disables all features within $1, and $2.",description:"$1 and $2 are bold text for basicConfigurationModalDisclaimerOffAdditionalTextFeaturesFirst and basicConfigurationModalDisclaimerOffAdditionalTextFeaturesLast respectively"},basicConfigurationModalDisclaimerOffAdditionalTextFeaturesFirst:{message:"security and privacy, backup and sync"},basicConfigurationModalDisclaimerOffAdditionalTextFeaturesLast:{message:"notifications"},basicConfigurationModalDisclaimerOn:{message:"To optimize your time on MetaMask, you’ll need to turn on this feature. Basic functions (like token details, optimal gas settings, and others) are important to the web3 experience."},basicConfigurationModalHeadingOff:{message:"Turn off basic functionality"},basicConfigurationModalHeadingOn:{message:"Turn on basic functionality"},beta:{message:"Beta"},betaMetamaskVersion:{message:"MetaMask Beta Version"},betaTerms:{message:"Beta Terms of use"},blockExplorerAccountAction:{message:"Account",description:"This is used with viewOnEtherscan and viewInExplorer e.g View Account in Explorer"},blockExplorerAssetAction:{message:"Asset",description:"This is used with viewOnEtherscan and viewInExplorer e.g View Asset in Explorer"},blockExplorerSwapAction:{message:"Swap",description:"This is used with viewOnEtherscan e.g View Swap on Etherscan"},blockExplorerUrl:{message:"Block explorer URL"},blockExplorerUrlDefinition:{message:"The URL used as the block explorer for this network."},blockExplorerView:{message:"View account at $1",description:"$1 replaced by URL for custom block explorer"},blockaid:{message:"Blockaid"},blockaidAlertDescriptionBlur:{message:"If you continue, all the assets you’ve listed on Blur could be at risk."},blockaidAlertDescriptionMalicious:{message:"You’re interacting with a malicious site. If you continue, you will lose your assets."},blockaidAlertDescriptionOpenSea:{message:"If you continue, all the assets you’ve listed on OpenSea could be at risk."},blockaidAlertDescriptionOthers:{message:"If you confirm this request, you could lose your assets. We recommend that you cancel this request."},blockaidAlertDescriptionTokenTransfer:{message:"You’re sending your assets to a scammer. If you continue, you’ll lose those assets."},blockaidAlertDescriptionWithdraw:{message:"If you confirm this request, you’re allowing a scammer to withdraw and spend your assets. You won’t get them back."},blockaidDescriptionApproveFarming:{message:"If you approve this request, a third party known for scams might take all your assets."},blockaidDescriptionBlurFarming:{message:"If you approve this request, someone can steal your assets listed on Blur."},blockaidDescriptionErrored:{message:"Because of an error, we couldn't check for security alerts. Only continue if you trust every address involved."},blockaidDescriptionMaliciousDomain:{message:"You're interacting with a malicious domain. If you approve this request, you might lose your assets."},blockaidDescriptionMightLoseAssets:{message:"If you approve this request, you might lose your assets."},blockaidDescriptionSeaportFarming:{message:"If you approve this request, someone can steal your assets listed on OpenSea."},blockaidDescriptionTransferFarming:{message:"If you approve this request, a third party known for scams will take all your assets."},blockaidMessage:{message:"Privacy preserving - no data is shared with third parties. Available on Arbitrum, Avalanche, BNB chain, Ethereum Mainnet, Linea, Optimism, Polygon, Base and Sepolia."},blockaidTitleDeceptive:{message:"This is a deceptive request"},blockaidTitleMayNotBeSafe:{message:"Be careful"},blockaidTitleSuspicious:{message:"This is a suspicious request"},blockies:{message:"Blockies"},borrowed:{message:"Borrowed"},boughtFor:{message:"Bought for"},bridge:{message:"Bridge"},bridgeAllowSwappingOf:{message:"Allow exact access to $1 $2 on $3 for bridging",description:"Shows a user that they need to allow a token for swapping on their hardware wallet"},bridgeApproval:{message:"Approve $1 for bridge",description:"Used in the transaction display list to describe a transaction that is an approve call on a token that is to be bridged. $1 is the symbol of a token that has been approved."},bridgeApprovalWarning:{message:"You're allowing access to $1 $2. The contract won't access any additional funds."},bridgeApprovalWarningForHardware:{message:"You'll need to allow access to $1 $2 for bridging, and then approve bridging to $2. This will require two separate confirmations."},bridgeBlockExplorerLinkCopied:{message:"Block explorer link copied!"},bridgeCalculatingAmount:{message:"Calculating..."},bridgeConfirmTwoTransactions:{message:"You'll need to confirm 2 transactions on your hardware wallet:"},bridgeCreateSolanaAccount:{message:"Create Solana account"},bridgeCreateSolanaAccountDescription:{message:"To swap to the Solana network, you need an account and receiving address."},bridgeCreateSolanaAccountTitle:{message:"You'll need a Solana account first."},bridgeDetailsTitle:{message:"Bridge details",description:"Title for the modal showing details about a bridge transaction."},bridgeEnterAmount:{message:"Select amount"},bridgeEnterAmountAndSelectAccount:{message:"Enter amount and select destination account"},bridgeExplorerLinkViewOn:{message:"View on $1"},bridgeFetchNewQuotes:{message:"Fetch a new one?"},bridgeFromTo:{message:"Bridge $1 $2 to $3",description:"Tells a user that they need to confirm on their hardware wallet a bridge. $1 is amount of source token, $2 is the source network, and $3 is the destination network"},bridgeGasFeesSplit:{message:"Any network fee quoted on the previous screen includes both transactions and will be split."},bridgeNetCost:{message:"Net cost"},bridgeNoMMFee:{message:"No MM fee"},bridgePriceImpact:{message:"Price impact"},bridgePriceImpactNormalWarning:{message:"Price impact reflects how your swap affects the market price. If you don't have enough for gas, some of your tokens are used to cover fees, which raises price impact. MetaMask doesn't set or control this."},bridgePriceImpactTooltipTitle:{message:"Price Impact"},bridgePriceImpactWarningTitle:{message:"Price Impact Warning"},bridgeQuoteExpired:{message:"Your quote timed out."},bridgeSelectDestinationAccount:{message:"Select destination account"},bridgeSelectDifferentQuote:{message:"Please select a different quote."},bridgeSelectNetwork:{message:"Select network"},bridgeSelectTokenAmountAndAccount:{message:"Select token, amount and destination account"},bridgeSelectTokenAndAmount:{message:"Select token and amount"},bridgeSolanaAccountCreated:{message:"Solana account created"},bridgeStatusComplete:{message:"Complete",description:"Status text indicating a bridge transaction has successfully completed."},bridgeStatusFailed:{message:"Failed",description:"Status text indicating a bridge transaction has failed."},bridgeStatusInProgress:{message:"In Progress",description:"Status text indicating a bridge transaction is currently processing."},bridgeStepActionBridgeComplete:{message:"$1 received on $2",description:"$1 is the amount of the destination asset, $2 is the name of the destination network"},bridgeStepActionBridgePending:{message:"Receiving $1 on $2",description:"$1 is the amount of the destination asset, $2 is the name of the destination network"},bridgeStepActionSwapComplete:{message:"Swapped $1 for $2",description:"$1 is the amount of the source asset, $2 is the amount of the destination asset"},bridgeStepActionSwapPending:{message:"Swapping $1 for $2",description:"$1 is the amount of the source asset, $2 is the amount of the destination asset"},bridgeTimingMinutes:{message:"$1 min",description:"$1 is the ticker symbol of a an asset the user is being prompted to purchase"},bridgeTo:{message:"Bridge to"},bridgeTokenCannotVerifyDescription:{message:"If you added this token manually, make sure you are aware of the risks to your funds before you bridge."},bridgeTokenCannotVerifyTitle:{message:"We can't verify this token."},bridgeTransactionProgress:{message:"Transaction $1 of 2"},bridgeTxDetailsBridged:{message:"Bridged"},bridgeTxDetailsBridging:{message:"Bridging"},bridgeTxDetailsDelayedDescription:{message:"Reach out to"},bridgeTxDetailsDelayedDescriptionSupport:{message:"MetaMask Support"},bridgeTxDetailsDelayedTitle:{message:"Has it been longer than 3 hours?"},bridgeTxDetailsNonce:{message:"Nonce"},bridgeTxDetailsStatus:{message:"Status"},bridgeTxDetailsSwapped:{message:"Swapped"},bridgeTxDetailsSwapping:{message:"Swapping"},bridgeTxDetailsTimestamp:{message:"Time stamp"},bridgeTxDetailsTimestampValue:{message:"$1 at $2",description:"$1 is the date, $2 is the time"},bridgeTxDetailsTokenAmountOnChain:{message:"$1 $2 on",description:"$1 is the amount of the token, $2 is the ticker symbol of the token"},bridgeTxDetailsTotalGasFee:{message:"Total gas fee"},bridgeTxDetailsYouReceived:{message:"You received"},bridgeTxDetailsYouSent:{message:"You sent"},bridgeValidationInsufficientGasMessage:{message:"You don't have enough $1 to pay the gas fee for this bridge. Enter a smaller amount or buy more $1."},bridgeValidationInsufficientGasTitle:{message:"More $1 needed for gas"},bridged:{message:"Bridged"},bridgedToChain:{message:"Bridged to $1"},bridging:{message:"Bridging"},browserNotSupported:{message:"Your browser is not supported..."},buildContactList:{message:"Build your contact list"},builtAroundTheWorld:{message:"MetaMask is designed and built around the world."},busy:{message:"Busy"},buy:{message:"Buy"},buyMoreAsset:{message:"Buy more $1",description:"$1 is the ticker symbol of a an asset the user is being prompted to purchase"},buyNow:{message:"Buy Now"},bytes:{message:"Bytes"},canToggleInSettings:{message:"You can re-enable this notification in Settings > Alerts."},cancel:{message:"Cancel"},cancelPopoverTitle:{message:"Cancel transaction"},cancelSpeedUpLabel:{message:"This gas fee will $1 the original.",description:"$1 is text 'replace' in bold"},cancelSpeedUpTransactionTooltip:{message:"To $1 a transaction the gas fee must be increased by at least 10% for it to be recognized by the network.",description:"$1 is string 'cancel' or 'speed up'"},cancelled:{message:"Cancelled"},carouselAllCaughtUp:{message:"You're all caught up!",description:"Message shown in carousel when all promotional slides have been dismissed"},chainId:{message:"Chain ID"},chainIdDefinition:{message:"The chain ID used to sign transactions for this network."},chainIdExistsErrorMsg:{message:"This Chain ID is currently used by the $1 network."},chainListReturnedDifferentTickerSymbol:{message:"This token symbol doesn't match the network name or chain ID entered. Many popular tokens use similar symbols, which scammers can use to trick you into sending them a more valuable token in return. Verify everything before you continue."},changePasswordLoading:{message:"Changing password..."},changePasswordLoadingNote:{message:"This shouldn't take long"},changePasswordWarning:{message:"Are you sure?"},changePasswordWarningDescription:{message:"Changing your password here will lock MetaMask on other devices you’re using. You’ll need to log in again with your new password."},chooseYourNetwork:{message:"Choose your network"},chooseYourNetworkDescription:{message:"When you use our default settings and configurations, we use Infura as our default remote procedure call (RPC) provider to offer the most reliable and private access to Ethereum data we can. In limited cases, we may use other RPC providers in order to provide the best experience for our users. You can choose your own RPC, but remember that any RPC will receive your IP address and Ethereum wallet to make transactions. To learn more about how Infura handles data for EVM accounts, read our $1, and for Solana accounts, $2.",description:"$1 is a link to the privacy policy, $2 is a link to Solana accounts support"},chooseYourNetworkDescriptionCallToAction:{message:"click here"},chromeRequiredForHardwareWallets:{message:"You need to use MetaMask on Google Chrome in order to connect to your Hardware Wallet."},circulatingSupply:{message:"Circulating supply"},clear:{message:"Clear"},clearActivity:{message:"Clear activity and nonce data"},clearActivityButton:{message:"Clear activity tab data"},clearActivityDescription:{message:"This resets the account's nonce and erases data from the activity tab in your wallet. Only the current account and network will be affected. Your balances and incoming transactions won't change."},clearFilters:{message:"Clear filters"},click:{message:"Click"},clickToConnectLedgerViaWebHID:{message:"Click here to connect your Ledger via WebHID",description:"Text that can be clicked to open a browser popup for connecting the ledger device via webhid"},close:{message:"Close"},closeExtension:{message:"Close extension"},closeSlide:{message:"Close $1",description:"Aria label for close button on carousel slides. $1 is the slide title"},closeWindowAnytime:{message:"You may close this window anytime."},coingecko:{message:"CoinGecko"},collectionName:{message:"Collection name"},comboNoOptions:{message:"No options found",description:"Default text shown in the combo field dropdown if no options."},concentratedSupplyDistributionDescription:{message:"The majority of the token's supply is held by the top token holders, posing a risk of centralized price manipulation"},concentratedSupplyDistributionTitle:{message:"Concentrated Supply Distribution"},configureSnapPopupDescription:{message:"You're now leaving MetaMask to configure this snap."},configureSnapPopupInstallDescription:{message:"You're now leaving MetaMask to install this snap."},configureSnapPopupInstallTitle:{message:"Install snap"},configureSnapPopupLink:{message:"Click this link to continue:"},configureSnapPopupTitle:{message:"Configure snap"},confirm:{message:"Confirm"},confirmAccountTypeSmartContract:{message:"Smart account"},confirmAccountTypeStandard:{message:"Standard account"},confirmAlertModalAcknowledgeMultiple:{message:"I have acknowledged the alerts and still want to proceed"},confirmAlertModalAcknowledgeSingle:{message:"I have acknowledged the alert and still want to proceed"},confirmFieldPaymaster:{message:"Fee paid by"},confirmFieldTooltipPaymaster:{message:"The fee for this transaction will be paid by the paymaster smart contract."},confirmGasFeeTokenBalance:{message:"Bal:"},confirmGasFeeTokenInsufficientBalance:{message:"Insufficient funds"},confirmGasFeeTokenMetaMaskFee:{message:"Includes $1 fee"},confirmGasFeeTokenModalNativeToggleMetaMask:{message:"MetaMask is supplementing the balance to complete this transaction."},confirmGasFeeTokenModalNativeToggleWallet:{message:"Pay for network fee using the balance in your wallet."},confirmGasFeeTokenModalPayETH:{message:"Pay with ETH"},confirmGasFeeTokenModalPayToken:{message:"Pay with other tokens"},confirmGasFeeTokenModalTitle:{message:"Select a token"},confirmGasFeeTokenToast:{message:"You're paying this network fee with $1"},confirmGasFeeTokenTooltip:{message:"This is paid to the network to process your transaction. It includes a $1 MetaMask fee for non-ETH tokens or pre-funded ETH."},confirmInfoAccountNow:{message:"Now"},confirmInfoSwitchingTo:{message:"Switching To"},confirmNestedTransactionTitle:{message:"Transaction $1"},confirmPassword:{message:"Confirm password"},confirmRecoveryPhrase:{message:"Confirm Secret Recovery Phrase"},confirmRecoveryPhraseDetails:{message:"Select the missing words in the correct order."},confirmRecoveryPhraseTitle:{message:"Confirm your Secret Recovery Phrase"},confirmSimulationApprove:{message:"You approve"},confirmSrpErrorDescription:{message:"Double-check your Secret Recovery Phrase and try again."},confirmSrpErrorTitle:{message:"Not quite right"},confirmSrpSuccessDescription:{message:"That’s right! And remember: never share this phrase with anyone, ever."},confirmSrpSuccessTitle:{message:"Perfect"},confirmTitleAccountTypeSwitch:{message:"Account update"},confirmTitleApproveTransactionNFT:{message:"Withdrawal request"},confirmTitleDeployContract:{message:"Deploy a contract"},confirmTitleDescApproveTransaction:{message:"This site wants permission to withdraw your NFTs"},confirmTitleDescDelegationRevoke:{message:"You're switching back to a standard account (EOA)."},confirmTitleDescDelegationUpgrade:{message:"You're switching to a smart account"},confirmTitleDescDeployContract:{message:"This site wants you to deploy a contract"},confirmTitleDescERC20ApproveTransaction:{message:"This site wants permission to withdraw your tokens"},confirmTitleDescPermitSignature:{message:"This site wants permission to spend your tokens."},confirmTitleDescSIWESignature:{message:"A site wants you to sign in to prove you own this account."},confirmTitleDescSign:{message:"Review request details before you confirm."},confirmTitlePermitTokens:{message:"Spending cap request"},confirmTitleRevokeApproveTransaction:{message:"Remove permission"},confirmTitleSIWESignature:{message:"Sign-in request"},confirmTitleSetApprovalForAllRevokeTransaction:{message:"Remove permission"},confirmTitleSignature:{message:"Signature request"},confirmTitleTransaction:{message:"Transaction request"},confirmationAlertDetails:{message:"To protect your assets, we suggest you reject the request."},confirmationAlertModalTitleDescription:{message:"Your assets may be at risk"},confirmed:{message:"Confirmed"},confusableCharacterTooltip:{message:"Make sure this address is correct. The letter $1 is confusable with $2."},confusableUnicode:{message:"'$1' is similar to '$2'."},confusableZeroWidthUnicode:{message:"Zero-width character found."},confusingEnsDomain:{message:"We have detected a confusable character in the ENS name. Check the ENS name to avoid a potential scam."},connect:{message:"Connect"},connectAccount:{message:"Connect account"},connectAccountOrCreate:{message:"Connect account or create new"},connectAccounts:{message:"Connect accounts"},connectAnAccountHeader:{message:"Connect an account"},connectManually:{message:"Manually connect to current site"},connectMoreAccounts:{message:"Connect more accounts"},connectSnap:{message:"Connect $1",description:"$1 is the snap for which a connection is being requested."},connectWithMetaMask:{message:"Connect with MetaMask"},connectedAccounts:{message:"Connected accounts"},connectedAccountsDescriptionPlural:{message:"You have $1 accounts connected to this site.",description:"$1 is the number of accounts"},connectedAccountsDescriptionSingular:{message:"You have 1 account connected to this site."},connectedAccountsEmptyDescription:{message:"MetaMask is not connected to this site. To connect to a web3 site, find and click the connect button."},connectedAccountsListTooltip:{message:"$1 can see the account balance, address, activity, and suggest transactions to approve for connected accounts.",description:"$1 is the origin name"},connectedAccountsToast:{message:"Connected accounts updated"},connectedSites:{message:"Connected sites"},connectedSitesAndSnaps:{message:"Connected sites and Snaps"},connectedSitesDescription:{message:"$1 is connected to these sites. They can view your account address.",description:"$1 is the account name"},connectedSitesEmptyDescription:{message:"$1 is not connected to any sites.",description:"$1 is the account name"},connectedSnapAndNoAccountDescription:{message:"MetaMask is connected to this site, but no accounts are connected yet"},connectedSnaps:{message:"Connected Snaps"},connectedWithAccount:{message:"$1 accounts connected",description:"$1 represents account length"},connectedWithAccountName:{message:"Connected with $1",description:"$1 represents account name"},connectedWithNetwork:{message:"$1 networks connected",description:"$1 represents network length"},connectedWithNetworkName:{message:"Connected with $1",description:"$1 represents network name"},connecting:{message:"Connecting"},connectingTo:{message:"Connecting to $1"},connectingToGoerli:{message:"Connecting to Goerli test network"},connectingToLineaGoerli:{message:"Connecting to Linea Goerli test network"},connectingToLineaMainnet:{message:"Connecting to Linea"},connectingToLineaSepolia:{message:"Connecting to Linea Sepolia test network"},connectingToMainnet:{message:"Connecting to Ethereum Mainnet"},connectingToSepolia:{message:"Connecting to Sepolia test network"},connectionDescription:{message:"Connect this website with MetaMask"},connectionFailed:{message:"Connection failed"},connectionFailedDescription:{message:"Fetching of $1 failed, check your network and try again.",description:"$1 is the name of the snap being fetched."},connectionPopoverDescription:{message:"To connect to a site, select the connect button. MetaMask can only connect to web3 sites."},connectionRequest:{message:"Connection request"},connectionsRemovedModalDescription:{message:"Some connections (like hardware wallets and snaps) were removed due to inactivity on this device. You can re-add them anytime in Settings."},connectionsRemovedModalTitle:{message:"Connections removed"},contactUs:{message:"Contact us"},contacts:{message:"Contacts"},contentFromSnap:{message:"Content from $1",description:"$1 represents the name of the snap"},continue:{message:"Continue"},contract:{message:"Contract"},contractAddress:{message:"Contract address"},contractAddressError:{message:"You are sending tokens to the token's contract address. This may result in the loss of these tokens."},contractDeployment:{message:"Contract deployment"},contractInteraction:{message:"Contract interaction"},convertTokenToNFTDescription:{message:"We've detected that this asset is an NFT. MetaMask now has full native support for NFTs. Would you like to remove it from your token list and add it as an NFT?"},convertTokenToNFTExistDescription:{message:"We’ve detected that this asset has been added as an NFT. Would you like to remove it from your token list?"},coolWallet:{message:"CoolWallet"},copiedExclamation:{message:"Copied."},copyAddress:{message:"Copy address to clipboard"},copyAddressShort:{message:"Copy address"},copyPrivateKey:{message:"Copy private key"},copyToClipboard:{message:"Copy to clipboard"},copyTransactionId:{message:"Copy transaction ID"},create:{message:"Create"},createMultichainAccountButton:{message:"Create account",description:"Name of a button used on multichain account related pages for triggering the account creation process."},createMultichainAccountButtonLoading:{message:"Creating account...",description:"Name of a button in loading state, used on multichain account related pages for the account creation process."},createNewAccountHeader:{message:"Create a new account"},createPassword:{message:"MetaMask password"},createPasswordCreate:{message:"Create password"},createPasswordDetails:{message:"Unlocks MetaMask on this device only."},createPasswordDetailsSocial:{message:"Losing this password means losing wallet access on all devices, "},createPasswordDetailsSocialReset:{message:"MetaMask can't reset it."},createPasswordMarketing:{message:"Get product updates, tips, and news including by email. We may use your interactions to improve what we share."},createSnapAccountDescription:{message:"$1 wants to add a new account to MetaMask."},createSnapAccountTitle:{message:"Create account"},createSolanaAccount:{message:"Create Solana account"},creatorAddress:{message:"Creator address"},crossChainSwapsLink:{message:"Swap across networks with MetaMask Portfolio"},crossChainSwapsLinkNative:{message:"Swap across networks with Bridge"},cryptoCompare:{message:"CryptoCompare"},currencyConversion:{message:"Currency"},currencyRateCheckToggle:{message:"Show balance and token price checker"},currencyRateCheckToggleDescription:{message:"We use $1 and $2 APIs to display your balance and token price. $3",description:"$1 represents Coingecko, $2 represents CryptoCompare and $3 represents Privacy Policy"},currencySymbol:{message:"Currency symbol"},currencySymbolDefinition:{message:"The ticker symbol displayed for this network’s currency."},currentAccountNotConnected:{message:"Your current account is not connected"},currentExtension:{message:"Current extension page"},currentLanguage:{message:"Current language"},currentNetwork:{message:"Current network",description:"Speicifies to token network filter to filter by current Network. Will render when network nickname is not available"},currentTitle:{message:"Current:"},currentlyUnavailable:{message:"Unavailable on this network"},curveHighGasEstimate:{message:"Aggressive gas estimate graph"},curveLowGasEstimate:{message:"Low gas estimate graph"},curveMediumGasEstimate:{message:"Market gas estimate graph"},custom:{message:"Advanced"},customGasSettingToolTipMessage:{message:"Use $1 to customize the gas price. This can be confusing if you aren’t familiar. Interact at your own risk.",description:"$1 is key 'advanced' (text: 'Advanced') separated here so that it can be passed in with bold font-weight"},customNetworks:{message:"Custom networks"},customSlippage:{message:"Custom"},customSpendLimit:{message:"Custom spend limit"},customToken:{message:"Custom token"},customTokenWarningInNonTokenDetectionNetwork:{message:"Token detection is not available on this network yet. Please import token manually and make sure you trust it. Learn about $1"},customTokenWarningInTokenDetectionNetwork:{message:"Anyone can create a token, including creating fake versions of existing tokens. Learn about $1"},customTokenWarningInTokenDetectionNetworkWithTDOFF:{message:"Make sure you trust a token before you import it. Learn how to avoid $1. You can also enable token detection $2."},customerSupport:{message:"customer support"},customizeYourNotifications:{message:"Customize your notifications"},customizeYourNotificationsText:{message:"Turn on the types of notifications you want to receive:"},dappSuggested:{message:"Site suggested"},dappSuggestedGasSettingToolTipMessage:{message:"$1 has suggested this price.",description:"$1 is url for the dapp that has suggested gas settings"},dappSuggestedHigh:{message:"Site suggested"},dappSuggestedHighShortLabel:{message:"Site (high)"},dappSuggestedShortLabel:{message:"Site"},dappSuggestedTooltip:{message:"$1 has recommended this price.",description:"$1 represents the Dapp's origin"},darkTheme:{message:"Dark"},data:{message:"Data"},dataCollectionForMarketing:{message:"Data collection for marketing"},dataCollectionForMarketingDescription:{message:"We’ll use this data to learn how you interact with our marketing communications. We may share relevant news (like product features)."},dataCollectionForMarketingDescriptionSocialLogin:{message:"Get product updates, tips, and news - including by email. We may use your interactions to improve what we share."},dataCollectionWarningPopoverButton:{message:"Okay"},dataCollectionWarningPopoverDescription:{message:"You turned off data collection for our marketing purposes. This only applies to this device. If you use MetaMask on other devices, make sure to opt out there as well."},dataUnavailable:{message:"data unavailable"},dateCreated:{message:"Date created"},dcent:{message:"D'Cent"},debitCreditPurchaseOptions:{message:"Debit or credit card purchase options"},decimal:{message:"Token decimal"},decimalsMustZerotoTen:{message:"Decimals must be at least 0, and not over 36."},decrypt:{message:"Decrypt"},decryptCopy:{message:"Copy encrypted message"},decryptInlineError:{message:"This message cannot be decrypted due to error: $1",description:"$1 is error message"},decryptMessageNotice:{message:"$1 would like to read this message to complete your action",description:"$1 is the web3 site name"},decryptMetamask:{message:"Decrypt message"},decryptRequest:{message:"Decrypt request"},deepLink_Caution:{message:"Proceed with caution"},deepLink_Continue:{message:"Continue"},deepLink_ContinueDescription:{message:"You'll open $1 if you continue.",description:"$1 is the name of the page they'll be redirected to if they click the Continue button. Examples of $1: 'the home page'; 'the buy page'; 'the swaps page'; 'the notifications page'"},deepLink_DontRemindMeAgain:{message:"Don't remind me again"},deepLink_Error404Description:{message:"We can't find the page you are looking for."},deepLink_Error404Title:{message:"This page doesn't exist"},deepLink_Error404_CTA:{message:"$1 and we'll take you to the right place.",description:"$1 is a link with the text found in `deepLink_Error404_CTA_LinkText`"},deepLink_Error404_CTA_LinkText:{message:"Update to the latest version of MetaMask",description:"Part of `deepLink_Error404_CTA`. The text links to https://support.metamask.io/configure/wallet/how-to-update-the-version-of-metamask/"},deepLink_ErrorMissingUrl:{message:"No url to navigate to was provided."},deepLink_ErrorOtherDescription:{message:"This is a bug and should be reported to MetaMask."},deepLink_ErrorOtherTitle:{message:"An error occurred while processing the deep link"},deepLink_GoToTheHomePageButton:{message:"Go to the home page"},deepLink_RedirectingToMetaMask:{message:"Redirecting to MetaMask"},deepLink_ThirdPartyDescription:{message:"You were sent here by a third party, not MetaMask. $1",description:"$1 is the message 'deepLink_ContinueDescription'"},deepLink_theBuyPage:{message:"the buy page"},deepLink_theHomePage:{message:"the home page"},deepLink_theNotificationsPage:{message:"the notifications page"},deepLink_thePerpsPage:{message:"the perps page"},deepLink_theSwapsPage:{message:"the swaps page"},deepLink_theSwapsRampsPage:{message:"the Swaps/Ramps page"},defaultRpcUrl:{message:"Default RPC URL"},defaultSettingsSubTitle:{message:"MetaMask uses default settings to best balance safety and ease of use. Change these settings to further increase your privacy."},defaultSettingsTitle:{message:"Default privacy settings"},defi:{message:"DeFi"},defiEmptyDescription:{message:"Lend, borrow, and trade, right in your wallet."},defiTabErrorContent:{message:"Try visiting again later."},defiTabErrorTitle:{message:"We could not load this page."},delete:{message:"Delete"},deleteContact:{message:"Delete contact"},deleteMetaMetricsData:{message:"Delete MetaMetrics data"},deleteMetaMetricsDataDescription:{message:"This will delete historical MetaMetrics data associated with your use on this device. Your wallet and accounts will remain exactly as they are now after this data has been deleted. This process may take up to 30 days. View our $1.",description:"$1 will have text saying Privacy Policy "},deleteMetaMetricsDataErrorDesc:{message:"This request can't be completed right now due to an analytics system server issue, please try again later"},deleteMetaMetricsDataErrorTitle:{message:"We are unable to delete this data right now"},deleteMetaMetricsDataModalDesc:{message:"We are about to remove all your MetaMetrics data. Are you sure?"},deleteMetaMetricsDataModalTitle:{message:"Delete MetaMetrics data?"},deleteMetaMetricsDataRequestedDescription:{message:"You initiated this action on $1. This process can take up to 30 days. View the $2",description:"$1 will be the date on which teh deletion is requested and $2 will have text saying Privacy Policy "},deleteNetworkIntro:{message:"If you delete this network, you will need to add it again to view your assets in this network"},deleteNetworkTitle:{message:"Delete $1 network?",description:"$1 represents the name of the network"},depositCrypto:{message:"Deposit crypto from another account with a wallet address or QR code."},deprecatedGoerliNtwrkMsg:{message:"Because of updates to the Ethereum system, the Goerli test network will be phased out soon."},deprecatedNetwork:{message:"This network is deprecated"},deprecatedNetworkButtonMsg:{message:"Got it"},deprecatedNetworkDescription:{message:"The network you're trying to connect to is no longer supported by Metamask. $1"},description:{message:"Description"},descriptionFromSnap:{message:"Description from $1",description:"$1 represents the name of the snap"},deselectAll:{message:"Deselect all"},destinationAccountPickerNoEligible:{message:"No eligible accounts found"},destinationAccountPickerNoMatching:{message:"No matching accounts found"},destinationAccountPickerSearchPlaceholderToMainnet:{message:"Receiving address or ENS"},destinationAccountPickerSearchPlaceholderToSolana:{message:"Receiving address"},destinationTransactionIdLabel:{message:"Destination Tx ID",description:"Label for the destination transaction ID field."},details:{message:"Details"},developerOptions:{message:"Developer Options"},disabledGasOptionToolTipMessage:{message:"“$1” is disabled because it does not meet the minimum of a 10% increase from the original gas fee.",description:"$1 is gas estimate type which can be market or aggressive"},disconnect:{message:"Disconnect"},disconnectAllAccounts:{message:"Disconnect all accounts"},disconnectAllAccountsConfirmationDescription:{message:"Are you sure you want to disconnect? You may lose site functionality."},disconnectAllAccountsText:{message:"accounts"},disconnectAllDescriptionText:{message:"If you disconnect from this site, you’ll need to reconnect your accounts and networks to use this site again."},disconnectAllSnapsText:{message:"Snaps"},disconnectMessage:{message:"This will disconnect you from this site"},disconnectPrompt:{message:"Disconnect $1"},disconnectThisAccount:{message:"Disconnect this account"},disconnectedAllAccountsToast:{message:"All accounts disconnected from $1",description:"$1 is name of the dapp`"},disconnectedSingleAccountToast:{message:"$1 disconnected from $2",description:"$1 is name of the name and $2 represents the dapp name`"},discover:{message:"Discover"},discoverSnaps:{message:"Discover Snaps",description:"Text that links to the Snaps website. Displayed in a banner on Snaps list page in settings."},dismiss:{message:"Dismiss"},dismissReminderDescriptionField:{message:"Turn this on to dismiss the Secret Recovery Phrase backup reminder message. We highly recommend that you back up your Secret Recovery Phrase to avoid loss of funds"},dismissReminderField:{message:"Dismiss Secret Recovery Phrase backup reminder"},dismissSmartAccountSuggestionEnabledDescription:{message:'Turn this on to no longer see the "Switch to Smart Account" suggestion on any account. Smart accounts unlocks faster transactions, lower network fees and more flexibility on payment for those.'},dismissSmartAccountSuggestionEnabledTitle:{message:'Dismiss "Switch to Smart Account" suggestion'},displayNftMedia:{message:"Display NFT media"},displayNftMediaDescription:{message:"Displaying NFT media and data exposes your IP address to OpenSea or other third parties. This can allow attackers to associate your IP address with your Ethereum address. NFT autodetection relies on this setting, and won't be available when this is turned off."},doNotShare:{message:"Do not share this with anyone"},domain:{message:"Domain"},done:{message:"Done"},dontShowThisAgain:{message:"Don't show this again"},downArrow:{message:"down arrow"},downloadAppDescription:{message:"Bring MetaMask with you everywhere you go. Turn on Face ID so you always have access, even if you forget your password."},downloadAppTitle:{message:"Scan QR code and download the app"},downloadGoogleChrome:{message:"Download Google Chrome"},downloadMetaMaskMobileDescription:{message:"Face ID on our app lets you in even if you forget your password. Take MetaMask everywhere you go!"},downloadMetaMaskMobileQrNote:{message:"Scan this QR code to get started."},downloadMetaMaskMobileTitle:{message:"Get our mobile app"},downloadNow:{message:"Download Now"},downloadStateLogs:{message:"Download state logs"},dropped:{message:"Dropped"},duplicateContactTooltip:{message:"This contact name collides with an existing account or contact"},duplicateContactWarning:{message:"You have duplicate contacts"},durationSuffixDay:{message:"D",description:"Shortened form of 'day'"},durationSuffixHour:{message:"H",description:"Shortened form of 'hour'"},durationSuffixMillisecond:{message:"MS",description:"Shortened form of 'millisecond'"},durationSuffixMinute:{message:"M",description:"Shortened form of 'minute'"},durationSuffixMonth:{message:"M",description:"Shortened form of 'month'"},durationSuffixSecond:{message:"S",description:"Shortened form of 'second'"},durationSuffixWeek:{message:"W",description:"Shortened form of 'week'"},durationSuffixYear:{message:"Y",description:"Shortened form of 'year'"},earn:{message:"Earn"},edit:{message:"Edit"},editANickname:{message:"Edit nickname"},editAccountName:{message:"Edit account name"},editAccounts:{message:"Edit accounts"},editAddressNickname:{message:"Edit address nickname"},editCancellationGasFeeModalTitle:{message:"Edit cancellation gas fee"},editContact:{message:"Edit contact"},editGasFeeModalTitle:{message:"Edit gas fee"},editGasLimitOutOfBounds:{message:"Gas limit must be at least $1"},editGasLimitOutOfBoundsV2:{message:"Gas limit must be greater than $1 and less than $2",description:"$1 is the minimum limit for gas and $2 is the maximum limit"},editGasLimitTooltip:{message:"Gas limit is the maximum units of gas you are willing to use. Units of gas are a multiplier to “Max priority fee” and “Max fee”."},editGasMaxBaseFeeGWEIImbalance:{message:"Max base fee cannot be lower than priority fee"},editGasMaxBaseFeeHigh:{message:"Max base fee is higher than necessary"},editGasMaxBaseFeeLow:{message:"Max base fee is low for current network conditions"},editGasMaxFeeHigh:{message:"Max fee is higher than necessary"},editGasMaxFeeLow:{message:"Max fee too low for network conditions"},editGasMaxFeePriorityImbalance:{message:"Max fee cannot be lower than max priority fee"},editGasMaxPriorityFeeBelowMinimum:{message:"Max priority fee must be greater than 0 GWEI"},editGasMaxPriorityFeeBelowMinimumV2:{message:"Priority fee must be greater than 0."},editGasMaxPriorityFeeHigh:{message:"Max priority fee is higher than necessary. You may pay more than needed."},editGasMaxPriorityFeeHighV2:{message:"Priority fee is higher than necessary. You may pay more than needed"},editGasMaxPriorityFeeLow:{message:"Max priority fee is low for current network conditions"},editGasMaxPriorityFeeLowV2:{message:"Priority fee is low for current network conditions"},editGasPriceTooLow:{message:"Gas price must be greater than 0"},editGasPriceTooltip:{message:"This network requires a “Gas price” field when submitting a transaction. Gas price is the amount you will pay pay per unit of gas."},editGasSubTextFeeLabel:{message:"Max fee:"},editGasTitle:{message:"Edit priority"},editGasTooLow:{message:"Unknown processing time"},editInPortfolio:{message:"Edit in Portfolio"},editNetwork:{message:"Edit network"},editNetworkLink:{message:"edit the original network"},editNetworksTitle:{message:"Edit networks"},editNonceField:{message:"Edit nonce"},editNonceMessage:{message:"This is an advanced feature, use cautiously."},editPermission:{message:"Edit permission"},editPermissions:{message:"Edit permissions"},editSpeedUpEditGasFeeModalTitle:{message:"Edit speed up gas fee"},editSpendingCap:{message:"Edit spending cap"},editSpendingCapAccountBalance:{message:"Account balance: $1 $2"},editSpendingCapDesc:{message:"Enter the amount that you feel comfortable being spent on your behalf."},editSpendingCapError:{message:"The spending cap can’t exceed $1 decimal digits. Remove decimal digits to continue."},editSpendingCapSpecialCharError:{message:"Enter numbers only"},enableAutoDetect:{message:" Enable autodetect"},enableFromSettings:{message:" Enable it from Settings."},enableSmartContractAccount:{message:"Enable smart contract account"},enableSmartContractAccountDescription:{message:"You can enable smart account features on supported networks."},enableSnap:{message:"Enable"},enableToken:{message:"enable $1",description:"$1 is a token symbol, e.g. ETH"},enabled:{message:"Enabled"},enabledNetworks:{message:"Enabled networks"},encryptionPublicKeyNotice:{message:"$1 would like your public encryption key. By consenting, this site will be able to compose encrypted messages to you.",description:"$1 is the web3 site name"},encryptionPublicKeyRequest:{message:"Request encryption public key"},endpointReturnedDifferentChainId:{message:"The RPC URL you have entered returned a different chain ID ($1).",description:"$1 is the return value of eth_chainId from an RPC endpoint"},enhancedTokenDetectionAlertMessage:{message:"Enhanced token detection is currently available on $1. $2"},ensDomainsSettingDescriptionIntroduction:{message:"MetaMask lets you see ENS domains right in your browser's address bar. Here's how it works:"},ensDomainsSettingDescriptionOutroduction:{message:"Keep in mind that using this feature exposes your IP address to IPFS third-party services."},ensDomainsSettingDescriptionPart1:{message:"MetaMask checks with Ethereum's ENS contract to find the code connected to the ENS name."},ensDomainsSettingDescriptionPart2:{message:"If the code links to IPFS, you can see the content associated with it (usually a website)."},ensDomainsSettingTitle:{message:"Show ENS domains in address bar"},ensUnknownError:{message:"ENS lookup failed."},enterANameToIdentifyTheUrl:{message:"Enter a name to identify the URL"},enterChainId:{message:"Enter Chain ID"},enterMaxSpendLimit:{message:"Enter max spend limit"},enterNetworkName:{message:"Enter network name"},enterOptionalPassword:{message:"Enter optional password"},enterPasswordContinue:{message:"Enter password to continue"},enterPasswordCurrent:{message:"Enter your current password"},enterRpcUrl:{message:"Enter RPC URL"},enterSymbol:{message:"Enter symbol"},enterTokenNameOrAddress:{message:"Enter token name or paste address"},enterYourPassword:{message:"Enter your password"},enterYourPasswordContinue:{message:"Enter password to continue"},enterYourPasswordSocialLoginFlow:{message:"Enter Metamask Password"},errorCode:{message:"Code: $1",description:"Displayed error code for debugging purposes. $1 is the error code"},errorDetails:{message:"Error details",description:"Label for the error details field in the error screen."},errorGettingSafeChainList:{message:"Error while getting safe chain list, please continue with caution."},errorLegalTextFirstInfo:{message:"Technical diagnostic information."},errorLegalTextNoPersonalInfo:{message:"No personal information or other device information will be collected."},errorLegalTextSecondInfo:{message:"Your browser, operating system, and MetaMask versions."},errorLegalTextSummary:{message:"We will receive a single error report, containing:"},errorMessage:{message:"Message: $1",description:"Displayed error message for debugging purposes. $1 is the error message"},errorName:{message:"Code: $1",description:"Displayed error name for debugging purposes. $1 is the error name"},errorPageContactSupport:{message:"Contact support",description:"Button for contact MM support"},errorPageDescribeUsWhatHappened:{message:"Describe what happened",description:"Button for submitting report to sentry"},errorPageInfo:{message:"Your information can’t be shown. Don’t worry, your wallet and funds are safe.",description:"Information banner shown in the error page"},errorPageMessageTitle:{message:"Error message",description:"Title for description, which is displayed for debugging purposes"},errorPageSentryFormTitle:{message:"Describe what happened",description:"In sentry feedback form, The title at the top of the feedback form."},errorPageSentryMessagePlaceholder:{message:"Sharing details like how we can reproduce the bug will help us fix the problem.",description:"In sentry feedback form, The placeholder for the feedback description input field."},errorPageSentrySuccessMessageText:{message:"Thanks! We will take a look soon.",description:"In sentry feedback form, The message displayed after a successful feedback submission."},errorPageTitle:{message:"MetaMask encountered an error",description:"Title of generic error page"},errorPageTryAgain:{message:"Try again",description:"Button for try again"},errorStack:{message:"Stack:",description:"Title for error stack, which is displayed for debugging purposes"},errorWhileConnectingToRPC:{message:"Error while connecting to the custom network."},errorWithSnap:{message:"Error with $1",description:"$1 represents the name of the snap"},estimatedFee:{message:"Estimated fee"},estimatedFeeTooltip:{message:"Amount paid to process the transaction on network."},ethGasPriceFetchWarning:{message:"Backup gas price is provided as the main gas estimation service is unavailable right now."},ethereumProviderAccess:{message:"Grant Ethereum provider access to $1",description:"The parameter is the name of the requesting origin"},ethereumPublicAddress:{message:"Ethereum public address"},etherscan:{message:"Etherscan"},etherscanView:{message:"View account on Etherscan"},etherscanViewOn:{message:"View on Etherscan"},existingChainId:{message:"The information you have entered is associated with an existing chain ID."},expandView:{message:"Expand view"},experimental:{message:"Experimental"},exploreDefi:{message:"Explore DeFi"},exploreweb3:{message:"Explore web3"},exportYourData:{message:"Export your data"},exportYourDataButton:{message:"Download"},exportYourDataDescription:{message:"You can export data like your contacts and preferences."},extendWalletWithSnaps:{message:"Explore community-built Snaps to customize your web3 experience",description:"Banner description displayed on Snaps list page in Settings when less than 6 Snaps is installed."},externalAccount:{message:"External Account"},externalExtension:{message:"External extension"},externalNameSourcesSetting:{message:"Proposed nicknames"},externalNameSourcesSettingDescription:{message:"We’ll fetch proposed nicknames for addresses you interact with from third-party sources like Etherscan, Infura, and Lens Protocol. These sources will be able to see those addresses and your IP address. Your account address won’t be exposed to third parties."},failed:{message:"Failed"},failedToFetchChainId:{message:"Could not fetch chain ID. Is your RPC URL correct?"},failover:{message:"Failover"},failoverRpcUrl:{message:"Failover RPC URL"},failureMessage:{message:"Something went wrong, and we were unable to complete the action"},fast:{message:"Fast"},feeDetails:{message:"Fee details"},fileImportFail:{message:"File import not working? Click here!",description:"Helps user import their account from a JSON file"},flaskWelcomeUninstall:{message:"you should uninstall this extension",description:"This request is shown on the Flask Welcome screen. It is intended for non-developers, and will be bolded."},flaskWelcomeWarning1:{message:"Flask is for developers to experiment with new unstable APIs. Unless you are a developer or beta tester, $1.",description:"This is a warning shown on the Flask Welcome screen, intended to encourage non-developers not to proceed any further. $1 is the bolded message 'flaskWelcomeUninstall'"},flaskWelcomeWarning2:{message:"We do not guarantee the safety or stability of this extension. The new APIs offered by Flask are not hardened against phishing attacks, meaning that any site or snap that requires Flask might be a malicious attempt to steal your assets.",description:"This explains the risks of using MetaMask Flask"},flaskWelcomeWarning3:{message:"All Flask APIs are experimental. They may be changed or removed without notice, or they might stay on Flask indefinitely without ever being migrated to stable MetaMask. Use them at your own risk.",description:"This message warns developers about unstable Flask APIs"},flaskWelcomeWarning4:{message:"Make sure to disable your regular MetaMask extension when using Flask.",description:"This message calls to pay attention about multiple versions of MetaMask running on the same site (Flask + Prod)"},flaskWelcomeWarningAcceptButton:{message:"I accept the risks",description:"this text is shown on a button, which the user presses to confirm they understand the risks of using Flask"},floatAmountToken:{message:"Token amount must be an integer"},forbiddenIpfsGateway:{message:"Forbidden IPFS Gateway: Please specify a CID gateway"},forgetDevice:{message:"Forget this device"},forgotPassword:{message:"Forgot password?"},forgotPasswordModalButton:{message:"Reset wallet"},forgotPasswordModalDescription1:{message:"MetaMask can’t recover your password for you."},forgotPasswordModalDescription2:{message:"You can reset your wallet by entering the Secret Recovery Phrase you used when you set up your wallet."},forgotPasswordModalTitle:{message:"Forgot your password?"},forgotPasswordSocialDescription:{message:"MetaMask can’t recover your password for you."},forgotPasswordSocialStep1:{message:"If you’re logged into MetaMask on a device with $1 (like Face ID), you can reset your password there.",description:"$1 is bold biometrics turned on"},forgotPasswordSocialStep1Biometrics:{message:"biometrics turned on"},forgotPasswordSocialStep2:{message:"If you have your $1, you can reset your current wallet and reimport using Secret Recovery Phrase.",description:"$1 is bold Secret Recovery Phrase"},form:{message:"form"},from:{message:"From"},fromAddress:{message:"From: $1",description:"$1 is the address to include in the From label. It is typically shortened first using shortenAddress"},fromTokenLists:{message:"From token lists: $1"},function:{message:"Function: $1"},fundingMethod:{message:"Funding method"},gas:{message:"Gas"},gasDisplayAcknowledgeDappButtonText:{message:"Edit suggested gas fee"},gasDisplayDappWarning:{message:"This gas fee has been suggested by $1. Overriding this may cause a problem with your transaction. Please reach out to $1 if you have questions.",description:"$1 represents the Dapp's origin"},gasFee:{message:"Gas fee"},gasLimit:{message:"Gas limit"},gasLimitRecommended:{message:"Recommended gas limit is $1. If the gas limit is less than that, it may fail."},gasLimitTooLow:{message:"Gas limit must be at least 21000"},gasLimitV2:{message:"Gas limit"},gasOption:{message:"Gas option"},gasPriceExcessive:{message:"Your gas fee is set unnecessarily high. Consider lowering the amount."},gasPriceFetchFailed:{message:"Gas price estimation failed due to network error."},gasTimingHoursShort:{message:"$1 hrs",description:"$1 represents a number of hours"},gasTimingLow:{message:"Slow"},gasTimingMinutesShort:{message:"$1 min",description:"$1 represents a number of minutes"},gasTimingSecondsShort:{message:"$1 sec",description:"$1 represents a number of seconds"},gasUsed:{message:"Gas used"},general:{message:"General"},generalCameraError:{message:"We couldn't access your camera. Please give it another try."},generalCameraErrorTitle:{message:"Something went wrong...."},generalDescription:{message:"Sync settings across devices, select network preferences, and track token data"},genericExplorerView:{message:"View account on $1"},getTheNewestFeatures:{message:"Get the newest features"},goToSite:{message:"Go to site"},goerli:{message:"Goerli test network"},gotIt:{message:"Got it"},grantExactAccess:{message:"Grant exact access"},gwei:{message:"GWEI"},hardware:{message:"Hardware"},hardwareWalletConnected:{message:"Hardware wallet connected"},hardwareWalletLegacyDescription:{message:"(legacy)",description:"Text representing the MEW path"},hardwareWalletSubmissionWarningStep1:{message:"Be sure your $1 is plugged in and to select the Ethereum app."},hardwareWalletSubmissionWarningStep2:{message:'Enable "smart contract data" or "blind signing" on your $1 device.'},hardwareWalletSubmissionWarningTitle:{message:"Prior to clicking Submit:"},hardwareWalletSupportLinkConversion:{message:"click here"},hardwareWallets:{message:"Connect a hardware wallet"},hardwareWalletsInfo:{message:"Hardware wallet integrations use API calls to external servers, which can see your IP address and the smart contract addresses you interact with."},hardwareWalletsMsg:{message:"Select a hardware wallet you would like to use with MetaMask."},here:{message:"here",description:"as in -click here- for more information (goes with troubleTokenBalances)"},hexData:{message:"Hex data"},hexDataPlaceholder:{message:"Enter hex data (optional)"},hiddenAccounts:{message:"Hidden accounts"},hide:{message:"Hide"},hideAccount:{message:"Hide account"},hideAdvancedDetails:{message:"Hide advanced details"},hideSentitiveInfo:{message:"Hide sensitive information"},hideTokenPrompt:{message:"Hide token?"},hideTokenSymbol:{message:"Hide $1",description:"$1 is the symbol for a token (e.g. 'DAI')"},hideZeroBalanceTokens:{message:"Hide tokens without balance"},high:{message:"Aggressive"},highGasSettingToolTipMessage:{message:"High probability, even in volatile markets. Use $1 to cover surges in network traffic due to things like popular NFT drops.",description:"$1 is key 'high' (text: 'Aggressive') separated here so that it can be passed in with bold font-weight"},highLowercase:{message:"high"},highestCurrentBid:{message:"Highest current bid"},highestFloorPrice:{message:"Highest floor price"},history:{message:"History"},holdToRevealContent1:{message:"Your Secret Recovery Phrase provides $1",description:"$1 is a bolded text with the message from 'holdToRevealContent2'"},holdToRevealContent2:{message:"full access to your wallet and funds.",description:"Is the bolded text in 'holdToRevealContent1'"},holdToRevealContent3:{message:"Do not share this with anyone. $1 $2",description:"$1 is a message from 'holdToRevealContent4' and $2 is a text link with the message from 'holdToRevealContent5'"},holdToRevealContent4:{message:"MetaMask Support will not request this,",description:"Part of 'holdToRevealContent3'"},holdToRevealContent5:{message:"but phishers might.",description:"The text link in 'holdToRevealContent3'"},holdToRevealContentPrivateKey1:{message:"Your Private Key provides $1",description:"$1 is a bolded text with the message from 'holdToRevealContentPrivateKey2'"},holdToRevealContentPrivateKey2:{message:"full access to your wallet and funds.",description:"Is the bolded text in 'holdToRevealContentPrivateKey2'"},holdToRevealLockedLabel:{message:"hold to reveal circle locked"},holdToRevealPrivateKey:{message:"Hold to reveal Private Key"},holdToRevealPrivateKeyTitle:{message:"Keep your private key safe"},holdToRevealSRP:{message:"Hold to reveal SRP"},holdToRevealSRPTitle:{message:"Keep your SRP safe"},holdToRevealUnlockedLabel:{message:"hold to reveal circle unlocked"},honeypotDescription:{message:"This token might pose a honeypot risk. It is advised to conduct due diligence before interacting to prevent any potential financial loss."},honeypotTitle:{message:"Honey Pot"},hyperliquidReferralCheckboxLabel:{message:"Allow MetaMask to add a referral code. This is permanent. The site offers discounts per their terms. MetaMask earns a fee.",description:"The text for the checkbox label in the Hyperliquid referral confirmation screen"},hyperliquidReferralSubtitle:{message:"Save up to 4% on trades with a MetaMask referral code.",description:"The subtitle of the Hyperliquid referral confirmation screen"},hyperliquidReferralTitle:{message:"MetaMask x Hyperliquid",description:"The title of the Hyperliquid referral confirmation screen"},id:{message:"ID"},ignoreAll:{message:"Ignore all"},ignoreTokenWarning:{message:"If you hide tokens, they will not be shown in your wallet. However, you can still add them by searching for them."},imToken:{message:"imToken"},import:{message:"Import",description:"Button to import an account from a selected file"},importAWallet:{message:"Import a wallet"},importAccountError:{message:"Error importing account."},importAccountErrorIsSRP:{message:"You have entered a Secret Recovery Phrase (or mnemonic). To import an account here, you have to enter a private key, which is a hexadecimal string of length 64."},importAccountErrorNotAValidPrivateKey:{message:"This is not a valid private key. You have entered a hexadecimal string, but it must be 64 characters long."},importAccountErrorNotHexadecimal:{message:"This is not a valid private key. You must enter a hexadecimal string of length 64."},importAccountJsonLoading1:{message:"Expect this JSON import to take a few minutes and freeze MetaMask."},importAccountJsonLoading2:{message:"We apologize, and we will make it faster in the future."},importAccountMsg:{message:"Imported accounts won’t be associated with your MetaMask Secret Recovery Phrase. Learn more about imported accounts"},importAccountWithSocialMsg:{message:"Imported private keys are backed up to your account and sync automatically when you sign in with the same Google or Apple login."},importAccountWithSocialMsgLearnMore:{message:"$1 about how imported keys work",description:"$1 is a link to learn more about imported keys"},importAnAccount:{message:"Import an account"},importNFT:{message:"Import NFT"},importNFTAddressToolTip:{message:"On OpenSea, for example, on the NFT's page under Details, there is a blue hyperlinked value labeled 'Contract Address'. If you click on this, it will take you to the contract's address on Etherscan; at the top-left of that page, there should be an icon labeled 'Contract', and to the right, a long string of letters and numbers. This is the address of the contract that created your NFT. Click on the 'copy' icon to the right of the address, and you'll have it on your clipboard."},importNFTPage:{message:"Import NFT page"},importNFTTokenIdToolTip:{message:"An NFT's ID is a unique identifier since no two NFTs are alike. Again, on OpenSea this number is under 'Details'. Make a note of it, or copy it onto your clipboard."},importNWordSRP:{message:"I have a $1 word recovery phrase",description:"$1 is the number of words in the recovery phrase"},importPrivateKey:{message:"Private Key"},importSRPDescription:{message:"Import an existing wallet with your 12 or 24-word secret recovery phrase."},importSRPNumberOfWordsError:{message:"Secret Recovery Phrases contain 12, or 24 words"},importSRPWordError:{message:"Word $1 is incorrect or misspelled.",description:"$1 is the word that is incorrect or misspelled"},importSRPWordErrorAlternative:{message:"Word $1 and $2 is incorrect or misspelled.",description:"$1 and $2 are multiple words that are mispelled."},importSecretRecoveryPhrase:{message:"Import Secret Recovery Phrase"},importSecretRecoveryPhraseUnknownError:{message:"An unknown error occurred."},importSelectedTokens:{message:"Import selected tokens?"},importSelectedTokensDescription:{message:"Only the tokens you've selected will appear in your wallet. You can always import hidden tokens later by searching for them."},importTokenQuestion:{message:"Import token?"},importTokenWarning:{message:"Anyone can create a token with any name, including fake versions of existing tokens. Add and trade at your own risk!"},importTokensCamelCase:{message:"Import tokens"},importTokensError:{message:"We could not import the tokens. Please try again later."},importWallet:{message:"Import wallet"},importWalletOrAccountHeader:{message:"Import a wallet or account"},importWalletSuccess:{message:"Wallet $1 imported",description:"$1 is the index of the secret recovery phrase"},importWithCount:{message:"Import $1",description:"$1 will the number of detected tokens that are selected for importing, if all of them are selected then $1 will be all"},imported:{message:"Imported",description:"status showing that an account has been fully loaded into the keyring"},inYourSettings:{message:"in your Settings"},included:{message:"included"},includesXTransactions:{message:"Includes $1 transactions"},infuraBlockedNotification:{message:"MetaMask is unable to connect to the blockchain host. Review possible reasons $1.",description:"$1 is a clickable link with with text defined by the 'here' key"},initialTransactionConfirmed:{message:"Your initial transaction was confirmed by the network. Click OK to go back."},insightsFromSnap:{message:"Insights from $1",description:"$1 represents the name of the snap"},install:{message:"Install"},installOrigin:{message:"Install origin"},installRequest:{message:"Add to MetaMask"},installedOn:{message:"Installed on $1",description:"$1 is the date when the snap has been installed"},insufficientBalance:{message:"Insufficient balance."},insufficientFunds:{message:"Insufficient funds."},insufficientFundsForGas:{message:"Insufficient funds for gas"},insufficientFundsSend:{message:"Insufficient funds"},insufficientLockedLiquidityDescription:{message:"The lack of adequately locked or burned liquidity leaves the token vulnerable to sudden liquidity withdrawals, potentially causing market instability."},insufficientLockedLiquidityTitle:{message:"Insufficient Locked Liquidity"},insufficientTokens:{message:"Insufficient tokens."},interactWithSmartContract:{message:"Smart contract"},interactingWith:{message:"Interacting with"},interactingWithTransactionDescription:{message:"This is the contract you're interacting with. Protect yourself from scammers by verifying the details."},interaction:{message:"Interaction"},invalidAddress:{message:"Invalid address"},invalidAddressRecipient:{message:"Recipient address is invalid"},invalidAssetType:{message:"This asset is an NFT and needs to be re-added on the Import NFTs page found under the NFTs tab"},invalidChainIdTooBig:{message:"Invalid chain ID. The chain ID is too big."},invalidCustomNetworkAlertContent1:{message:"The chain ID for custom network '$1' has to be re-entered.",description:"$1 is the name/identifier of the network."},invalidCustomNetworkAlertContent2:{message:"To protect you from malicious or faulty network providers, chain IDs are now required for all custom networks."},invalidCustomNetworkAlertContent3:{message:"Go to Settings > Network and enter the chain ID. You can find the chain IDs of most popular networks on $1.",description:"$1 is a link to https://chainid.network"},invalidCustomNetworkAlertTitle:{message:"Invalid custom network"},invalidHexData:{message:"Invalid hex data"},invalidHexNumber:{message:"Invalid hexadecimal number."},invalidHexNumberLeadingZeros:{message:"Invalid hexadecimal number. Remove any leading zeros."},invalidIpfsGateway:{message:"Invalid IPFS Gateway: The value must be a valid URL"},invalidNumber:{message:"Invalid number. Enter a decimal or '0x'-prefixed hexadecimal number."},invalidNumberLeadingZeros:{message:"Invalid number. Remove any leading zeros."},invalidRPC:{message:"Invalid RPC URL"},invalidSeedPhrase:{message:"Invalid Secret Recovery Phrase"},invalidSeedPhraseCaseSensitive:{message:"Invalid input! Secret Recovery Phrase is case sensitive."},invalidSeedPhraseNotFound:{message:"Secret Recovery Phrase not found."},invalidValue:{message:"Invalid value"},ipfsGateway:{message:"IPFS gateway"},ipfsGatewayDescription:{message:"MetaMask uses third-party services to show images of your NFTs stored on IPFS, display information related to ENS addresses entered in your browser's address bar, and fetch icons for different tokens. Your IP address may be exposed to these services when you’re using them."},ipfsToggleModalDescriptionOne:{message:"We use third-party services to show images of your NFTs stored on IPFS, display information related to ENS addresses entered in your browser's address bar, and fetch icons for different tokens. Your IP address may be exposed to these services when you’re using them."},ipfsToggleModalDescriptionTwo:{message:"Selecting Confirm turns on IPFS resolution. You can turn it off in $1 at any time.",description:"$1 is the method to turn off ipfs"},ipfsToggleModalSettings:{message:"Settings > Security and privacy"},isSigningOrSubmitting:{message:"A previous transaction is still being signed or submitted"},jazzicons:{message:"Jazzicons"},jsonFile:{message:"JSON File",description:"format for importing an account"},keyringAccountName:{message:"Account name"},keyringAccountPublicAddress:{message:"Public Address"},keyringSnapRemovalResult1:{message:"$1 $2removed",description:"Displays the result after removal of a keyring snap. $1 is the snap name, $2 is whether it is successful or not"},keyringSnapRemovalResultNotSuccessful:{message:"not ",description:"Displays the `not` word in $2."},keyringSnapRemoveConfirmation:{message:"Type $1 to confirm you want to remove this snap:",description:"Asks user to input the name nap prior to deleting the snap. $1 is the snap name"},keystone:{message:"Keystone"},knownAddressRecipient:{message:"Known contract address."},knownTokenWarning:{message:"This action will edit tokens that are already listed in your wallet, which can be used to phish you. Only approve if you are certain that you mean to change what these tokens represent. Learn more about $1"},l1Fee:{message:"L1 fee"},l1FeeTooltip:{message:"L1 gas fee"},l2Fee:{message:"L2 fee"},l2FeeTooltip:{message:"L2 gas fee"},lastConnected:{message:"Last connected"},lastSold:{message:"Last sold"},lavaDomeCopyWarning:{message:"For your safety, selecting this text is not available right now."},layer1Fees:{message:"Layer 1 fees"},layer2Fees:{message:"Layer 2 fees"},learnHow:{message:"Learn how"},learnMore:{message:"learn more"},learnMoreAboutGas:{message:"Want to $1 about gas?",description:"$1 will be replaced by the learnMore translation key"},learnMoreAboutPrivacy:{message:"Learn more about privacy best practices."},learnMoreKeystone:{message:"Learn More"},learnMoreUpperCase:{message:"Learn more"},learnMoreUpperCaseWithDot:{message:"Learn more."},learnScamRisk:{message:"scams and security risks."},leaveMetaMask:{message:"Leave MetaMask?"},leaveMetaMaskDesc:{message:"You're about to visit a site outside of MetaMask. Double-check the URL before continuing."},ledgerAccountRestriction:{message:"You need to make use your last account before you can add a new one."},ledgerConnectionInstructionCloseOtherApps:{message:"Close any other software connected to your device and then click here to refresh."},ledgerConnectionInstructionHeader:{message:"Prior to clicking confirm:"},ledgerConnectionInstructionStepFour:{message:'Enable "smart contract data" or "blind signing" on your Ledger device.'},ledgerConnectionInstructionStepThree:{message:"Be sure your Ledger is plugged in and to select the Ethereum app."},ledgerDeviceOpenFailureMessage:{message:"The Ledger device failed to open. Your Ledger might be connected to other software. Please close Ledger Live or other applications connected to your Ledger device, and try to connect again."},ledgerErrorConnectionIssue:{message:"Reconnect your ledger, open the ETH app and try again."},ledgerErrorDevicedLocked:{message:"Your Ledger is locked. Unlock it then try again."},ledgerErrorEthAppNotOpen:{message:"To solve the issue, open the ETH application on your device and retry."},ledgerErrorTransactionDataNotPadded:{message:"Ethereum transaction's input data isn't sufficiently padded."},ledgerEthAppNftNotSupportedNotification:{message:"Ledger Nano S can't send or manage Ethereum NFTs. See upgrade options at https://shop.ledger.com/pages/ledger-nano-s-upgrade-program"},ledgerFirefoxNotSupportedDescription1:{message:"We're having trouble connecting to Ledger. Check out our "},ledgerFirefoxNotSupportedDescription2:{message:" on how to connect a hardware wallet, then try again."},ledgerFirefoxNotSupportedDescription3:{message:" Ledger no longer supports Firefox, so you might need to use a different browser."},ledgerFirefoxNotSupportedLink:{message:"guide"},ledgerFirefoxNotSupportedTitle:{message:"Firefox Not Supported"},ledgerLiveApp:{message:"Ledger Live App"},ledgerLocked:{message:"Cannot connect to Ledger device. Please make sure your device is unlocked and Ethereum app is opened."},ledgerMultipleDevicesUnsupportedInfoDescription:{message:"To connect a new device, disconnect the previous one."},ledgerMultipleDevicesUnsupportedInfoTitle:{message:"You can only connect one Ledger at a time"},ledgerTimeout:{message:"Ledger Live is taking too long to respond or connection timeout. Make sure Ledger Live app is opened and your device is unlocked."},ledgerWebHIDNotConnectedErrorMessage:{message:"The ledger device was not connected. If you wish to connect your Ledger, please click 'Continue' again and approve HID connection",description:"An error message shown to the user during the hardware connect flow."},levelArrow:{message:"level arrow"},lightTheme:{message:"Light"},likeToImportToken:{message:"Would you like to import this token?"},likeToImportTokens:{message:"Would you like to import these tokens?"},lineaGoerli:{message:"Linea Goerli test network"},lineaMainnet:{message:"Linea"},lineaSepolia:{message:"Linea Sepolia test network"},link:{message:"Link"},linkCentralizedExchanges:{message:"Link your Coinbase or Binance accounts to transfer crypto to MetaMask for free."},links:{message:"Links"},loadMore:{message:"Load more"},loading:{message:"Loading..."},loadingScreenSnapMessage:{message:"Please complete the transaction on the Snap."},loadingTokenList:{message:"Loading token list"},localhost:{message:"Localhost 8545"},lock:{message:"Lock"},lockMetaMask:{message:"Lock MetaMask"},lockMetaMaskLoadingMessage:{message:"Locking MetaMask..."},lockTimeInvalid:{message:"Lock time must be a number between 0 and 10080"},loginErrorConnectButton:{message:"Try again"},loginErrorConnectDescription:{message:"Your internet connection is unstable. Check your connection and try again."},loginErrorConnectTitle:{message:"Unable to connect"},loginErrorGenericButton:{message:"Try again"},loginErrorGenericDescription:{message:"An error occurred while logging in. Try again and if the issue continues, contact $1.",description:"$1 is the key 'loginErrorGenericSupport'"},loginErrorGenericSupport:{message:"Metamask Support"},loginErrorGenericTitle:{message:"Something went wrong"},loginErrorSessionExpiredButton:{message:"Log in"},loginErrorSessionExpiredDescription:{message:"Your session has expired. Please log in again to continue."},loginErrorSessionExpiredTitle:{message:"Session has expired"},logo:{message:"$1 logo",description:"$1 is the name of the ticker"},low:{message:"Low"},lowEstimatedReturnTooltipMessage:{message:"You’ll pay more than $1% of your starting amount in fees. Check your receiving amount and network fees."},lowEstimatedReturnTooltipTitle:{message:"High cost"},lowGasSettingToolTipMessage:{message:"Use $1 to wait for a cheaper price. Time estimates are much less accurate as prices are somewhat unpredictable.",description:"$1 is key 'low' separated here so that it can be passed in with bold font-weight"},lowLowercase:{message:"low"},mainnet:{message:"Ethereum Mainnet"},mainnetToken:{message:"This address matches a known Ethereum Mainnet token address. Recheck the contract address and network for the token you are trying to add."},makeAnotherSwap:{message:"Create a new swap"},makeSureNoOneWatching:{message:"Make sure nobody is looking",description:"Warning to users to be care while creating and saving their new Secret Recovery Phrase"},manageDefaultSettings:{message:"Manage default settings"},manageInstitutionalWallets:{message:"Manage Institutional Wallets"},manageInstitutionalWalletsDescription:{message:"Turn this on to enable institutional wallets."},manageNetworksMenuHeading:{message:"Manage networks"},managePermissions:{message:"Manage permissions"},marketCap:{message:"Market cap"},marketDetails:{message:"Market details"},maskicons:{message:"Polycons"},max:{message:"Max"},maxBaseFee:{message:"Max base fee"},maxFee:{message:"Max fee"},maxFeeTooltip:{message:"A maximum fee provided to pay for the transaction."},maxPriorityFee:{message:"Max priority fee"},medium:{message:"Market"},mediumGasSettingToolTipMessage:{message:"Use $1 for fast processing at current market price.",description:"$1 is key 'medium' (text: 'Market') separated here so that it can be passed in with bold font-weight"},memo:{message:"memo"},message:{message:"Message"},metaMaskConnectStatusParagraphOne:{message:"You now have more control over your account connections in MetaMask."},metaMaskConnectStatusParagraphThree:{message:"Click it to manage your connected accounts."},metaMaskConnectStatusParagraphTwo:{message:"The connection status button shows if the website you’re visiting is connected to your currently selected account."},metaMetricsIdNotAvailableError:{message:"Since you've never opted into MetaMetrics, there's no data to delete here."},metadataModalSourceTooltip:{message:"$1 is hosted on npm and $2 is this Snap’s unique identifier.",description:"$1 is the snap name and $2 is the snap NPM id."},metamaskNotificationsAreOff:{message:"Wallet notifications are currently not active."},metamaskSwapsOfflineDescription:{message:"MetaMask Swaps is undergoing maintenance. Please check back later."},metamaskVersion:{message:"MetaMask Version"},methodData:{message:"Method"},methodDataTransactionDesc:{message:"Function executed based on decoded input data."},methodNotSupported:{message:"Not supported with this account."},metrics:{message:"Metrics"},minimumReceivedExplanation:{message:"The minimum you'll get if the price changes while your transaction processes, based on your slippage setting. The estimate comes from liquidity providers, so the final amount may differ."},minimumReceivedExplanationTitle:{message:"Minimum Amount Received"},minimumReceivedLabel:{message:"Minimum received"},mismatchedChainLinkText:{message:"verify the network details",description:"Serves as link text for the 'mismatchedChain' key. This text will be embedded inside the translation for that key."},mismatchedChainRecommendation:{message:"We recommend that you $1 before proceeding.",description:"$1 is a clickable link with text defined by the 'mismatchedChainLinkText' key. The link will open to instructions for users to validate custom network details."},mismatchedNetworkName:{message:"According to our record the network name may not correctly match this chain ID."},mismatchedNetworkSymbol:{message:"The submitted currency symbol does not match what we expect for this chain ID."},mismatchedRpcChainId:{message:"Chain ID returned by the custom network does not match the submitted chain ID."},mismatchedRpcUrl:{message:"According to our records the submitted RPC URL value does not match a known provider for this chain ID."},missingSetting:{message:"Can't find a setting?"},missingSettingRequest:{message:"Request here"},more:{message:"more"},moreAccounts:{message:"+ $1 more accounts",description:"$1 is the number of accounts"},moreNetworks:{message:"+ $1 more networks",description:"$1 is the number of networks"},moreQuotes:{message:"More quotes"},multichainAccountAddressCopied:{message:"Address copied",description:"Message displayed when the multichain account address is copied to clipboard"},multichainAccountIntroLearnMore:{message:"Learn more",description:"Button text to learn more about multichain accounts"},multichainAccountIntroSameAddressDescription:{message:"We’ve grouped your accounts, so keep using MetaMask the same as before. Your funds are safe and unchanged.",description:"Description explaining that accounts have been merged"},multichainAccountIntroSameAddressTitle:{message:"Same address, more networks",description:"Title for the second section of the multichain account intro modal"},multichainAccountIntroSettingUp:{message:"Setting up your accounts...",description:"Loading text shown while setting up multichain accounts"},multichainAccountIntroViewAccounts:{message:"View accounts",description:"Button text to view accounts from the intro modal"},multichainAccountIntroWhatDescription:{message:"A multichain account is an account with addresses on several networks, supported by MetaMask. So now you can use Ethereum, Solana, and more without switching accounts.",description:"Description explaining what multichain accounts are"},multichainAccountIntroWhatTitle:{message:"What are multichain accounts?",description:"Title for the first section of the multichain account intro modal"},multichainAccountPrivateKeyCopied:{message:"Private key copied",description:"Message displayed when the multichain account private key is copied to clipboard"},multichainAccountsIntroductionModalTitle:{message:"Introducing multichain accounts",description:"Title for the multichain accounts introduction modal."},multichainAddEthereumChainConfirmationDescription:{message:"You're adding this network to MetaMask and giving this site permission to use it."},multichainQuoteCardRateExplanation:{message:"The best rate we found from providers, including provider fees and a $1% MetaMask fee."},multichainQuoteCardRateLabel:{message:"Rate"},multipleSnapConnectionWarning:{message:"$1 wants to use $2 Snaps",description:"$1 is the dapp and $2 is the number of snaps it wants to connect to."},mustSelectOne:{message:"Must select at least 1 token."},name:{message:"Name"},nameAddressLabel:{message:"Address",description:"Label above address field in name component modal."},nameAlreadyInUse:{message:"Name is already in use"},nameFooterTrustWarning:{message:"Only save addresses you trust.",description:"Footer warning text shown in name modal for malicious and warning addresses."},nameInstructionsMalicious:{message:"This has been identified as malicious. We recommend not interacting with this address.",description:"Instruction text in name component modal when address is malicious."},nameInstructionsNew:{message:"If you know this address, give it a nickname to recognize it in the future.",description:"Instruction text in name component modal when value is not recognised."},nameInstructionsRecognized:{message:"This address has a default nickname, but you can edit it or explore other suggestions.",description:"Instruction text in name component modal when value is recognized but not saved."},nameInstructionsSaved:{message:"You've added a nickname for this address before. You can edit or view other suggested nicknames.",description:"Instruction text in name component modal when value is saved."},nameInstructionsWarning:{message:"We can't verify this address. It may be new or unverified. Set a personal display name to identify it going forward.",description:"Instruction text in name component modal when address has warning signals."},nameLabel:{message:"Nickname",description:"Label above name input field in name component modal."},nameModalMaybeProposedName:{message:"Maybe: $1",description:"$1 is the proposed name"},nameModalTitleMalicious:{message:"Malicious address",description:"Title of the modal created by the name component when address is identified as malicious."},nameModalTitleNew:{message:"Unknown address",description:"Title of the modal created by the name component when value is not recognised."},nameModalTitleRecognized:{message:"Recognized address",description:"Title of the modal created by the name component when value is recognized but not saved."},nameModalTitleSaved:{message:"Saved address",description:"Title of the modal created by the name component when value is saved."},nameModalTitleVerified:{message:"Verified address",description:"Title of the modal created by the name component when address is verified."},nameModalTitleWarning:{message:"Address Needs Review",description:"Title of the modal created by the name component when address has warning trust signals."},nameProviderProposedBy:{message:"Proposed by $1",description:"$1 is the name of the provider"},nameProvider_ens:{message:"Ethereum Name Service (ENS)"},nameProvider_etherscan:{message:"Etherscan"},nameProvider_lens:{message:"Lens Protocol"},nameProvider_token:{message:"MetaMask"},nameResolutionFailedError:{message:"No address resolution found for this name."},nameSetPlaceholder:{message:"Choose a nickname...",description:"Placeholder text for name input field in name component modal."},nameSetPlaceholderSuggested:{message:"Suggested: $1",description:"$1 is the proposed name"},nativeNetworkPermissionRequestDescription:{message:"$1 is asking for your approval to:",description:"$1 represents dapp name"},nativeTokenScamWarningConversion:{message:"Edit network details"},nativeTokenScamWarningDescription:{message:"The native token symbol does not match the expected symbol of the native token for the network with the associated chain ID. You have entered $1 while the expected token symbol is $2. Please verify you are connected to the correct chain.",description:"$1 represents the currency name, $2 represents the expected currency symbol"},nativeTokenScamWarningDescriptionExpectedTokenFallback:{message:"something else",description:"graceful fallback for when token symbol isn't found"},nativeTokenScamWarningTitle:{message:"Unexpected Native Token Symbol",description:"Title for nativeTokenScamWarningDescription"},needHelp:{message:"Need help? Contact $1",description:"$1 represents `needHelpLinkText`, the text which goes in the help link"},needHelpFeedback:{message:"Share your feedback"},needHelpLinkText:{message:"MetaMask support"},needHelpSubmitTicket:{message:"Submit a ticket"},needImportFile:{message:"You must select a file to import.",description:"User is important an account and needs to add a file to continue"},negativeETH:{message:"Can not send negative amounts of ETH."},negativeOrZeroAmountToken:{message:"Cannot send negative or zero amounts of asset."},network:{message:"Network"},networkAddress:{message:"1 network address"},networkAddresses:{message:"$1 network addresses",description:"$1 is the number of accounts"},networkChanged:{message:"Network changed"},networkChangedMessage:{message:"You're now transacting on $1.",description:"$1 is the name of the network"},networkDetails:{message:"Network details"},networkFee:{message:"Network fee"},networkFeeExplanation:{message:"Network fees depend on how busy the network is and how complex your transaction is."},networkFeeExplanationTitle:{message:"Network Fee"},networkIsBusy:{message:"Network is busy. Gas prices are high and estimates are less accurate."},networkMenu:{message:"Network Menu"},networkMenuHeading:{message:"Select a network"},networkName:{message:"Network name"},networkNameArbitrum:{message:"Arbitrum"},networkNameAvalanche:{message:"Avalanche"},networkNameBSC:{message:"BSC"},networkNameBase:{message:"Base"},networkNameBitcoin:{message:"Bitcoin"},networkNameDefinition:{message:"The name associated with this network."},networkNameEthereum:{message:"Ethereum"},networkNameGoerli:{message:"Goerli"},networkNameLinea:{message:"Linea"},networkNameOpMainnet:{message:"OP"},networkNamePolygon:{message:"Polygon"},networkNameSolana:{message:"Solana"},networkNameTestnet:{message:"Testnet"},networkNameZkSyncEra:{message:"zkSync Era"},networkOptions:{message:"Network options"},networkPermissionToast:{message:"Network permissions updated"},networkProvider:{message:"Network provider"},networkStatus:{message:"Network status"},networkStatusBaseFeeTooltip:{message:"The base fee is set by the network and changes every 13-14 seconds. Our $1 and $2 options account for sudden increases.",description:"$1 and $2 are bold text for Medium and Aggressive respectively."},networkStatusPriorityFeeTooltip:{message:"Range of priority fees (aka “miner tip”). This goes to miners and incentivizes them to prioritize your transaction."},networkStatusStabilityFeeTooltip:{message:"Gas fees are $1 relative to the past 72 hours.",description:"$1 is networks stability value - stable, low, high"},networkTabCustom:{message:"Custom"},networkTabPopular:{message:"Popular"},networkURL:{message:"Network URL"},networkURLDefinition:{message:"The URL used to access this network."},networkUrlErrorWarning:{message:"Attackers sometimes mimic sites by making small changes to the site address. Make sure you're interacting with the intended site before you continue. Punycode version: $1",description:"$1 replaced by RPC URL for network"},networks:{message:"Networks"},networksSmallCase:{message:"networks"},nevermind:{message:"Nevermind"},new:{message:"New!"},newAccount:{message:"New account"},newAccountIconMessage:{message:"Weʼve refreshed account icons to help you tell your accounts apart more easily. You can change the style in $1 > $2 > $3.",description:"$1, $2, and $3 are bold text for Settings, General, and Account icon respectively"},newAccountIconTitle:{message:"New account icon"},newAccountNumberName:{message:"Account $1",description:"Default name of next account to be created on create account screen"},newContact:{message:"New contact"},newContract:{message:"New contract"},newNFTDetectedInImportNFTsMessageStrongText:{message:"Settings > Security and privacy"},newNFTDetectedInImportNFTsMsg:{message:"To use Opensea to see your NFTs, turn on 'Display NFT Media' in $1.",description:"$1 is used for newNFTDetectedInImportNFTsMessageStrongText"},newNFTDetectedInNFTsTabMessage:{message:"Let MetaMask automatically detect and display NFTs in your wallet."},newNFTsAutodetected:{message:"NFT autodetection"},newNetworkAdded:{message:"“$1” was successfully added!"},newNetworkEdited:{message:"“$1” was successfully edited!"},newNftAddedMessage:{message:"NFT was successfully added!"},newPassword:{message:"New password"},newPasswordCreate:{message:"Create new password"},newPrivacyPolicyActionButton:{message:"Read more"},newPrivacyPolicyTitle:{message:"We’ve updated our privacy policy"},newRpcUrl:{message:"New RPC URL"},newTokensImportedMessage:{message:"You’ve successfully imported $1.",description:"$1 is the string of symbols of all the tokens imported"},newTokensImportedTitle:{message:"Token imported"},next:{message:"Next"},nftAddFailedMessage:{message:"NFT can’t be added as the ownership details do not match. Make sure you have entered correct information."},nftAddressError:{message:"This token is an NFT. Add on the $1",description:"$1 is a clickable link with text defined by the 'importNFTPage' key"},nftAlreadyAdded:{message:"NFT has already been added."},nftAutoDetectionEnabled:{message:"NFT autodetection enabled"},nftDisclaimer:{message:"Disclaimer: MetaMask pulls the media file from the source url. This url sometimes gets changed by the marketplace on which the NFT was minted."},nftEmptyDescription:{message:"There's a world of NFTs out there. Start your collection today."},nftOptions:{message:"NFT Options"},nftTokenIdPlaceholder:{message:"Enter the token id"},nftWarningContent:{message:"You're granting access to $1, including any you might own in the future. The party on the other end can transfer these NFTs from your wallet at any time without asking you until you revoke this approval. $2",description:"$1 is nftWarningContentBold bold part, $2 is Learn more link"},nftWarningContentBold:{message:"all your $1 NFTs",description:"$1 is name of the collection"},nftWarningContentGrey:{message:"Proceed with caution."},nfts:{message:"NFTs"},nftsPreviouslyOwned:{message:"Previously Owned"},nickname:{message:"Nickname"},noAccountsFound:{message:"No accounts found for the given search query"},noConnectedAccountTitle:{message:"MetaMask isn’t connected to this site"},noConnectionDescription:{message:'To connect to a site, find and select the "connect" button. Remember MetaMask can only connect to sites on web3'},noConversionRateAvailable:{message:"No conversion rate available"},noDomainResolution:{message:"No resolution for domain provided."},noHardwareWalletOrSnapsSupport:{message:"Snaps, and most hardware wallets, will not work with your current browser version."},noMMFeeSwapping:{message:"No MM fee swapping into $1."},noNetworksAvailable:{message:"No networks available"},noNetworksFound:{message:"No networks found for the given search query"},noNetworksSelected:{message:"No networks selected"},noOptionsAvailableMessage:{message:"This trade route isn't available right now. Try changing the amount, network, or token and we'll find the best option."},noSnaps:{message:"You don't have any snaps installed."},noTokensMatchingYourFilters:{message:"No tokens matching your filters"},noWebcamFound:{message:"Your computer's webcam was not found. Please try again."},noWebcamFoundTitle:{message:"Webcam not found"},nonContractAddressAlertDesc:{message:"You're sending call data to an address that isn't a contract. This could cause you to lose funds. Make sure you're using the correct address and network before continuing."},nonContractAddressAlertTitle:{message:"Potential mistake"},nonce:{message:"Nonce"},none:{message:"None"},notBusy:{message:"Not busy"},notCurrentAccount:{message:"Is this the correct account? It's different from the currently selected account in your wallet"},notEnoughBalance:{message:"Insufficient balance"},notEnoughGas:{message:"Not enough gas"},notificationDetail:{message:"Details"},notificationDetailBaseFee:{message:"Base fee (GWEI)"},notificationDetailGasLimit:{message:"Gas limit (units)"},notificationDetailGasUsed:{message:"Gas used (units)"},notificationDetailMaxFee:{message:"Max fee per gas"},notificationDetailNetwork:{message:"Network"},notificationDetailNetworkFee:{message:"Network fee"},notificationDetailPriorityFee:{message:"Priority fee (GWEI)"},notificationItemCheckBlockExplorer:{message:"Check on the Block Explorer"},notificationItemCollection:{message:"Collection"},notificationItemConfirmed:{message:"Confirmed"},notificationItemError:{message:"Unable to retrieve fees currently"},notificationItemFrom:{message:"From"},notificationItemLidoStakeReadyToBeWithdrawn:{message:"Withdrawal Ready"},notificationItemLidoStakeReadyToBeWithdrawnMessage:{message:"You can now withdraw your unstaked $1"},notificationItemLidoWithdrawalRequestedMessage:{message:"Your request to unstake $1 has been sent"},notificationItemNFTReceivedFrom:{message:"Received NFT from"},notificationItemNFTSentTo:{message:"Sent NFT to"},notificationItemNetwork:{message:"Network"},notificationItemRate:{message:"Rate (fee included)"},notificationItemReceived:{message:"Received"},notificationItemReceivedFrom:{message:"Received from"},notificationItemSent:{message:"Sent"},notificationItemSentTo:{message:"Sent to"},notificationItemStakeCompleted:{message:"Stake completed"},notificationItemStaked:{message:"Staked"},notificationItemStakingProvider:{message:"Staking Provider"},notificationItemStatus:{message:"Status"},notificationItemSwapped:{message:"Swapped"},notificationItemSwappedFor:{message:"for"},notificationItemTo:{message:"To"},notificationItemTransactionId:{message:"Transaction ID"},notificationItemUnStakeCompleted:{message:"UnStaking complete"},notificationItemUnStaked:{message:"Unstaked"},notificationItemUnStakingRequested:{message:"Unstaking requested"},notificationTransactionFailedMessage:{message:"Transaction $1 failed! $2",description:"Content of the browser notification that appears when a transaction fails"},notificationTransactionFailedTitle:{message:"Failed transaction",description:"Title of the browser notification that appears when a transaction fails"},notificationTransactionSuccessMessage:{message:"Transaction $1 confirmed!",description:"Content of the browser notification that appears when a transaction is confirmed"},notificationTransactionSuccessTitle:{message:"Confirmed transaction",description:"Title of the browser notification that appears when a transaction is confirmed"},notificationTransactionSuccessView:{message:"View on $1",description:"Additional content in a notification that appears when a transaction is confirmed and has a block explorer URL."},notifications:{message:"Notifications"},notificationsFeatureToggle:{message:"Enable Wallet Notifications",description:"Experimental feature title"},notificationsFeatureToggleDescription:{message:"This enables wallet notifications like send/receive funds or nfts and feature announcements.",description:"Description of the experimental notifications feature"},notificationsMarkAllAsRead:{message:"Mark all as read"},notificationsPageEmptyTitle:{message:"Nothing to see here"},notificationsPageErrorContent:{message:"Please, try to visit this page again."},notificationsPageErrorTitle:{message:"There has been an error"},notificationsPageNoNotificationsContent:{message:"You have not received any notifications yet."},notificationsSettingsBoxError:{message:"Something went wrong. Please try again."},notificationsSettingsPageAllowNotifications:{message:"Stay in the loop on what’s happening in your wallet with notifications. To use notifications, we use a profile to sync some settings across your devices. $1"},notificationsSettingsPageAllowNotificationsLink:{message:"Learn how we protect your privacy while using this feature."},numberOfNewTokensDetectedPlural:{message:"$1 new tokens found in this account",description:"$1 is the number of new tokens detected"},numberOfNewTokensDetectedSingular:{message:"1 new token found in this account"},numberOfTokens:{message:"Number of tokens"},ofTextNofM:{message:"of"},off:{message:"Off"},offlineForMaintenance:{message:"Offline for maintenance"},ok:{message:"Ok"},on:{message:"On"},onboardedMetametricsAccept:{message:"I agree"},onboardedMetametricsDisagree:{message:"No thanks"},onboardedMetametricsKey1:{message:"Latest developments"},onboardedMetametricsKey2:{message:"Product features"},onboardedMetametricsKey3:{message:"Other relevant promotional materials"},onboardedMetametricsLink:{message:"MetaMetrics"},onboardedMetametricsParagraph1:{message:"In addition to $1, we'd like to use data to understand how you interact with marketing communications.",description:"$1 represents the 'onboardedMetametricsLink' locale string"},onboardedMetametricsParagraph2:{message:"This helps us personalize what we share with you, like:"},onboardedMetametricsParagraph3:{message:"Remember, we never sell the data you provide and you can opt out any time."},onboardedMetametricsTitle:{message:"Help us enhance your experience"},onboardingAdvancedPrivacyIPFSDescription:{message:"The IPFS gateway makes it possible to access and view data hosted by third parties. You can add a custom IPFS gateway or continue using the default."},onboardingAdvancedPrivacyIPFSInvalid:{message:"Please enter a valid URL"},onboardingAdvancedPrivacyIPFSTitle:{message:"Add custom IPFS Gateway"},onboardingAdvancedPrivacyIPFSValid:{message:"IPFS gateway URL is valid"},onboardingAdvancedPrivacyNetworkDescription:{message:"When you use our default settings and configurations, we use Infura as our default remote procedure call (RPC) provider to offer the most reliable and private access to Ethereum data we can. In limited cases, we may use other RPC providers in order to provide the best experience for our users. You can choose your own RPC, but remember that any RPC will receive your IP address and Ethereum wallet to make transactions. To learn more about how Infura handles data for EVM accounts, read our $1; for Solana accounts, $2."},onboardingAdvancedPrivacyNetworkDescriptionCallToAction:{message:"click here"},onboardingAdvancedPrivacyNetworkTitle:{message:"Choose your network"},onboardingContinueWith:{message:"Continue with $1",description:"$1 is the type of login used Google, Apple, etc."},onboardingCreateWallet:{message:"Create a new wallet"},onboardingImportWallet:{message:"I have an existing wallet"},onboardingLoginFooter:{message:"By continuing, I agree to MetaMask’s $1 and $2"},onboardingLoginFooterPrivacyNotice:{message:"Privacy notice."},onboardingLoginFooterTermsOfUse:{message:"Terms of Use"},onboardingMetametricCheckboxDescriptionOne:{message:"We’ll collect basic product usage data like general location, clicks, and views. No other information will be stored."},onboardingMetametricCheckboxDescriptionTwo:{message:"We’ll use this data to learn how you interact with our marketing communications. We may share relevant news (like product features)."},onboardingMetametricCheckboxTitleOne:{message:"Gather basic usage data"},onboardingMetametricCheckboxTitleTwo:{message:"Product updates"},onboardingMetametricsContinue:{message:"Continue"},onboardingMetametricsDescription:{message:"We’d like to request these permissions. You can opt out or delete your usage data at any time."},onboardingMetametricsTitle:{message:"Help us improve MetaMask"},onboardingOptionIcon:{message:"$1 icon",description:"$1 is the icon name"},onboardingOptionTitle:{message:"Choose an option to continue"},onboardingPinExtensionAltLaunch:{message:"Launch extension"},onboardingPinExtensionAltPin:{message:"Pin extension"},onboardingPinExtensionDescription:{message:"Pin MetaMask on your browser so it’s accessible and easy to view transaction confirmations."},onboardingPinExtensionDescription2:{message:"Access your MetaMask wallet with 1 click by clicking on the extension."},onboardingPinExtensionDescription3:{message:"Click $1 extension icon to access it instantly",description:"$1 is the browser name"},onboardingPinExtensionTitle:{message:"Installation is complete!"},onboardingSignInWith:{message:"Sign in with $1",description:"$1 is the type of login used Google, Apple, etc"},onboardingSrpCreate:{message:"Use Secret Recovery Phrase"},onboardingSrpImport:{message:"Import using Secret Recovery Phrase"},onboardingSrpImportError:{message:"Use only lowercase letters, check your spelling, and put the words in the original order."},onboardingSrpInputClearAll:{message:"Clear all"},onboardingSrpInputPlaceholder:{message:"Add a space between each word and make sure no one is watching."},onekey:{message:"OneKey"},only:{message:"only"},onlyConnectTrust:{message:"Only connect with sites you trust. $1",description:"Text displayed above the buttons for connection confirmation. $1 is the link to the learn more web page."},openFullScreenForLedgerWebHid:{message:"Go to full screen to connect your Ledger.",description:"Shown to the user on the confirm screen when they are viewing MetaMask in a popup window but need to connect their ledger via webhid."},openInBlockExplorer:{message:"Open in block explorer"},optional:{message:"Optional"},options:{message:"Options"},or:{message:"Or"},origin:{message:"Origin"},originChanged:{message:"Site changed"},originChangedMessage:{message:"You're now reviewing a request from $1.",description:"$1 is the name of the origin"},osTheme:{message:"System"},other:{message:"other"},otherSnaps:{message:"other snaps",description:"Used in the 'permission_rpc' message."},others:{message:"others"},outdatedBrowserNotification:{message:"Your browser is out of date. If you don't update your browser, you won't be able to get security patches and new features from MetaMask."},overrideContentSecurityPolicyHeader:{message:"Override Content-Security-Policy header"},overrideContentSecurityPolicyHeaderDescription:{message:"This option is a workaround for a known issue in Firefox, where a dapp's Content-Security-Policy header may prevent the extension from loading properly. Disabling this option is not recommended unless required for specific web page compatibility."},padlock:{message:"Padlock"},participateInMetaMetrics:{message:"Participate in MetaMetrics"},participateInMetaMetricsDescription:{message:"Participate in MetaMetrics to help us make MetaMask better"},password:{message:"Password"},passwordChangedRecently:{message:"Your password was changed"},passwordChangedRecentlyDescription:{message:"Enter your new password to stay logged into MetaMask."},passwordNotLongEnough:{message:"Must be at least 8 characters"},passwordTermsWarning:{message:"If I lose this password, MetaMask can’t reset it."},passwordTermsWarningSocial:{message:"If I forget this password, I’ll lose access to my wallet permanently. MetaMask can’t reset it for me."},passwordToggleHide:{message:"Hide Password"},passwordToggleShow:{message:"Show Password"},passwordsDontMatch:{message:"Passwords don't match"},paste:{message:"Paste"},pastePrivateKey:{message:"Enter your private key string here:",description:"For importing an account from a private key"},pending:{message:"Pending"},pendingConfirmationAddNetworkAlertMessage:{message:"Updating network will cancel $1 pending transactions from this site.",description:"Number of transactions."},pendingConfirmationSwitchNetworkAlertMessage:{message:"Switching network will cancel $1 pending transactions from this site.",description:"Number of transactions."},pendingTransactionAlertMessage:{message:"This transaction won't go through until a previous transaction is complete. $1",description:"$1 represents the words 'how to cancel or speed up a transaction' in a hyperlink"},pendingTransactionAlertMessageHyperlink:{message:"Learn how to cancel or speed up a transaction.",description:"The text for the hyperlink in the pending transaction alert message"},permissionDetails:{message:"Permission details"},permissionFor:{message:"Permission for"},permissionFrom:{message:"Permission from"},permissionRequested:{message:"Requested now"},permissionRequestedForAccounts:{message:"Requested now for $1",description:"Permission cell status for requested permission including accounts, rendered as AvatarGroup which is $1."},permissionRevoked:{message:"Revoked in this update"},permissionRevokedForAccounts:{message:"Revoked in this update for $1",description:"Permission cell status for revoked permission including accounts, rendered as AvatarGroup which is $1."},permission_accessNamedSnap:{message:"Connect to $1.",description:"The description for the `wallet_snap` permission. $1 is the human-readable name of the snap."},permission_accessNetwork:{message:"Access the internet.",description:"The description of the `endowment:network-access` permission."},permission_accessNetworkDescription:{message:"Allow $1 to access the internet. This can be used to both send and receive data with third-party servers.",description:"An extended description of the `endowment:network-access` permission. $1 is the snap name."},permission_accessSnap:{message:"Connect to the $1 snap.",description:"The description for the `wallet_snap` permission. $1 is the name of the snap."},permission_accessSnapDescription:{message:"Allow the website or snap to interact with $1.",description:"The description for the `wallet_snap_*` permission. $1 is the name of the Snap."},permission_assets:{message:"Display account assets in MetaMask.",description:"The description for the `endowment:assets` permission."},permission_assetsDescription:{message:"Allow $1 to provide asset information to the MetaMask client. The assets can be onchain or offchain.",description:"An extended description for the `endowment:assets` permission. $1 is the name of the Snap."},permission_cronjob:{message:"Schedule and execute periodic actions.",description:"The description for the `snap_cronjob` permission"},permission_cronjobDescription:{message:"Allow $1 to perform actions that run periodically at fixed times, dates, or intervals. This can be used to trigger time-sensitive interactions or notifications.",description:"An extended description for the `snap_cronjob` permission. $1 is the snap name."},permission_dialog:{message:"Display dialog windows in MetaMask.",description:"The description for the `snap_dialog` permission"},permission_dialogDescription:{message:"Allow $1 to display MetaMask popups with custom text, input field, and buttons to approve or reject an action.\nCan be used to create e.g. alerts, confirmations, and opt-in flows for a snap.",description:"An extended description for the `snap_dialog` permission. $1 is the snap name."},permission_ethereumAccounts:{message:"See address, account balance, activity and suggest transactions to approve",description:"The description for the `eth_accounts` permission"},permission_ethereumProvider:{message:"Access the Ethereum provider.",description:"The description for the `endowment:ethereum-provider` permission"},permission_ethereumProviderDescription:{message:"Allow $1 to communicate with MetaMask directly, in order for it to read data from the blockchain and suggest messages and transactions.",description:"An extended description for the `endowment:ethereum-provider` permission. $1 is the snap name."},permission_getEntropy:{message:"Derive arbitrary keys unique to $1.",description:"The description for the `snap_getEntropy` permission. $1 is the snap name."},permission_getEntropyDescription:{message:"Allow $1 to derive arbitrary keys unique to $1, without exposing them. These keys are separate from your MetaMask account(s) and not related to your private keys or Secret Recovery Phrase. Other snaps cannot access this information.",description:"An extended description for the `snap_getEntropy` permission. $1 is the snap name."},permission_getLocale:{message:"View your preferred language.",description:"The description for the `snap_getLocale` permission"},permission_getLocaleDescription:{message:"Let $1 access your preferred language from your MetaMask settings. This can be used to localize and display $1's content using your language.",description:"An extended description for the `snap_getLocale` permission. $1 is the snap name."},permission_getPreferences:{message:"See information like your preferred language and fiat currency.",description:"The description for the `snap_getPreferences` permission"},permission_getPreferencesDescription:{message:"Let $1 access information like your preferred language and fiat currency in your MetaMask settings. This helps $1 display content tailored to your preferences. ",description:"An extended description for the `snap_getPreferences` permission. $1 is the snap name."},permission_homePage:{message:"Display a custom screen",description:"The description for the `endowment:page-home` permission"},permission_homePageDescription:{message:"Let $1 display a custom home screen in MetaMask. This can be used for user interfaces, configuration, and dashboards.",description:"An extended description for the `endowment:page-home` permission. $1 is the snap name."},permission_keyring:{message:"Allow requests for adding and controlling Ethereum accounts",description:"The description for the `endowment:keyring` permission"},permission_keyringDescription:{message:"Let $1 receive requests to add or remove accounts, plus sign and transact on behalf of these accounts.",description:"An extended description for the `endowment:keyring` permission. $1 is the snap name."},permission_lifecycleHooks:{message:"Use lifecycle hooks.",description:"The description for the `endowment:lifecycle-hooks` permission"},permission_lifecycleHooksDescription:{message:"Allow $1 to use lifecycle hooks to run code at specific times during its lifecycle.",description:"An extended description for the `endowment:lifecycle-hooks` permission. $1 is the snap name."},permission_manageAccounts:{message:"Add and control Ethereum accounts",description:"The description for `snap_manageAccounts` permission"},permission_manageAccountsDescription:{message:"Allow $1 to add or remove Ethereum accounts, then transact and sign with these accounts.",description:"An extended description for the `snap_manageAccounts` permission. $1 is the snap name."},permission_manageBip32Keys:{message:"Manage $1 accounts.",description:"The description for the `snap_getBip32Entropy` permission. $1 is a derivation path, e.g. 'm/44'/0'/0' (secp256k1)'."},permission_manageBip44AndBip32KeysDescription:{message:"Allow $1 to manage accounts and assets on the requested network. These accounts are derived and backed up using your secret recovery phrase (without revealing it). With the power to derive keys, $1 can support a variety of blockchain protocols beyond Ethereum (EVMs).",description:"An extended description for the `snap_getBip44Entropy` and `snap_getBip44Entropy` permissions. $1 is the snap name."},permission_manageBip44Keys:{message:"Manage $1 accounts.",description:"The description for the `snap_getBip44Entropy` permission. $1 is the name of a protocol, e.g. 'Filecoin'."},permission_manageState:{message:"Store and manage its data on your device.",description:"The description for the `snap_manageState` permission"},permission_manageStateDescription:{message:"Allow $1 to store, update, and retrieve data securely with encryption. Other snaps cannot access this information.",description:"An extended description for the `snap_manageState` permission. $1 is the snap name."},permission_nameLookup:{message:"Provide domain and address lookups.",description:"The description for the `endowment:name-lookup` permission."},permission_nameLookupDescription:{message:"Allow the snap to fetch and display address and domain lookups in different parts of the MetaMask UI.",description:"An extended description for the `endowment:name-lookup` permission."},permission_notifications:{message:"Show notifications.",description:"The description for the `snap_notify` permission"},permission_notificationsDescription:{message:"Allow $1 to display notifications within MetaMask. A short notification text can be triggered by a snap for actionable or time-sensitive information.",description:"An extended description for the `snap_notify` permission. $1 is the snap name."},permission_protocol:{message:"Provide protocol data for one or more chains.",description:"The description for the `endowment:protocol` permission."},permission_protocolDescription:{message:"Allow $1 to provide MetaMask with protocol data such as gas estimates or token information.",description:"An extended description for the `endowment:protocol` permission. $1 is the name of the Snap."},permission_rpc:{message:"Allow $1 to communicate directly with $2.",description:"The description for the `endowment:rpc` permission. $1 is 'other snaps' or 'websites', $2 is the snap name."},permission_rpcDescription:{message:"Allow $1 to send messages to $2 and receive a response from $2.",description:"An extended description for the `endowment:rpc` permission. $1 is 'other snaps' or 'websites', $2 is the snap name."},permission_rpcDescriptionOriginList:{message:"$1 and $2",description:"A list of allowed origins where $2 is the last origin of the list and $1 is the rest of the list separated by ','."},permission_signatureInsight:{message:"Display signature insights modal.",description:"The description for the `endowment:signature-insight` permission"},permission_signatureInsightDescription:{message:"Allow $1 to display a modal with insights on any signature request before approval. This can be used for anti-phishing and security solutions.",description:"An extended description for the `endowment:signature-insight` permission. $1 is the snap name."},permission_signatureInsightOrigin:{message:"See the origins of websites that initiate a signature request",description:"The description for the `signatureOrigin` caveat, to be used with the `endowment:signature-insight` permission"},permission_signatureInsightOriginDescription:{message:"Allow $1 to see the origin (URI) of websites that initiate signature requests. This can be used for anti-phishing and security solutions.",description:"An extended description for the `signatureOrigin` caveat, to be used with the `endowment:signature-insight` permission. $1 is the snap name."},permission_transactionInsight:{message:"Fetch and display transaction insights.",description:"The description for the `endowment:transaction-insight` permission"},permission_transactionInsightDescription:{message:"Allow $1 to decode transactions and show insights within the MetaMask UI. This can be used for anti-phishing and security solutions.",description:"An extended description for the `endowment:transaction-insight` permission. $1 is the snap name."},permission_transactionInsightOrigin:{message:"See the origins of websites that suggest transactions",description:"The description for the `transactionOrigin` caveat, to be used with the `endowment:transaction-insight` permission"},permission_transactionInsightOriginDescription:{message:"Allow $1 to see the origin (URI) of websites that suggest transactions. This can be used for anti-phishing and security solutions.",description:"An extended description for the `transactionOrigin` caveat, to be used with the `endowment:transaction-insight` permission. $1 is the snap name."},permission_unknown:{message:"Unknown permission: $1",description:"$1 is the name of a requested permission that is not recognized."},permission_viewBip32PublicKeys:{message:"View your public key for $1 ($2).",description:"The description for the `snap_getBip32PublicKey` permission. $1 is a derivation path, e.g. 'm/44'/0'/0''. $2 is the elliptic curve name, e.g. 'secp256k1'."},permission_viewBip32PublicKeysDescription:{message:"Allow $2 to view your public keys (and addresses) for $1. This does not grant any control of accounts or assets.",description:"An extended description for the `snap_getBip32PublicKey` permission. $1 is a derivation path (name). $2 is the snap name."},permission_viewNamedBip32PublicKeys:{message:"View your public key for $1.",description:"The description for the `snap_getBip32PublicKey` permission. $1 is a name for the derivation path, e.g., 'Ethereum accounts'."},permission_walletSwitchEthereumChain:{message:"Use your enabled networks",description:"The label for the `wallet_switchEthereumChain` permission"},permission_webAssembly:{message:"Support for WebAssembly.",description:"The description of the `endowment:webassembly` permission."},permission_webAssemblyDescription:{message:"Allow $1 to access low-level execution environments via WebAssembly.",description:"An extended description of the `endowment:webassembly` permission. $1 is the snap name."},permissions:{message:"Permissions"},permissionsPageEmptyContent:{message:"Nothing to see here"},permissionsPageEmptySubContent:{message:"This is where you can see the permissions you've given to installed Snaps or connected sites."},permitSimulationChange_approve:{message:"Spending cap"},permitSimulationChange_bidding:{message:"You bid"},permitSimulationChange_listing:{message:"You list"},permitSimulationChange_nft_listing:{message:"Listing price"},permitSimulationChange_receive:{message:"You receive"},permitSimulationChange_revoke2:{message:"Revoke"},permitSimulationChange_transfer:{message:"You send"},permitSimulationDetailInfo:{message:"You're giving the spender permission to spend this many tokens from your account."},permittedChainToastUpdate:{message:"$1 has access to $2."},personalAddressDetected:{message:"Personal address detected. Input the token contract address."},pin:{message:"Pin",description:"Pin label used in multichain account menu"},pinMetaMask:{message:"Pin the MetaMask extension"},pinMetaMaskDescription:{message:"Click on $1 and then $2 to pin it."},pinToTop:{message:"Pin to top"},pleaseConfirm:{message:"Please confirm"},plusMore:{message:"+ $1 more",description:"$1 is the number of additional items"},plusXMore:{message:"+ $1 more",description:"$1 is a number of additional but unshown items in a list- this message will be shown in place of those items"},popularNetworkAddToolTip:{message:"Some of these networks rely on third parties. The connections may be less reliable or enable third-parties to track activity.",description:"Learn more link"},popularNetworks:{message:"Popular networks"},preparingSwap:{message:"Preparing swap..."},prev:{message:"Prev"},price:{message:"Price"},priceUnavailable:{message:"price unavailable"},primaryType:{message:"Primary type"},priority:{message:"Priority"},priorityFee:{message:"Priority fee"},priorityFeeProperCase:{message:"Priority Fee"},privacy:{message:"Privacy"},privacyMsg:{message:"Privacy policy"},privateKey:{message:"Private key",description:"select this type of file to use to import an account"},privateKeyCopyWarning:{message:"Private key for $1",description:"$1 represents the account name"},privateKeyHidden:{message:"The private key is hidden",description:"Explains that the private key input is hidden"},privateKeyShow:{message:"Show/Hide the private key input",description:"Describes a toggle that is used to show or hide the private key input"},privateKeyShown:{message:"This private key is being shown",description:"Explains that the private key input is being shown"},privateKeyWarning:{message:"Warning: Never disclose this key. Anyone with your private keys can steal any assets held in your account."},privateKeys:{message:"Private keys",description:"Private keys row label on multichain account details page."},privateNetwork:{message:"Private network"},proceedWithTransaction:{message:"I want to proceed anyway"},productAnnouncements:{message:"Product announcements"},proposedApprovalLimit:{message:"Proposed approval limit"},provide:{message:"Provide"},publicAddress:{message:"Public address"},pushNotificationLimitOrderFilledDescriptionLong:{message:"Your $1 long position is now open.",description:"$1 is the asset symbol"},pushNotificationLimitOrderFilledDescriptionShort:{message:"Your $1 short position is now open.",description:"$1 is the asset symbol"},pushNotificationLimitOrderFilledTitle:{message:"Limit order filled"},pushNotificationPositionLiquidatedDescriptionLong:{message:"Your $1 long was closed.",description:"$1 is the asset symbol"},pushNotificationPositionLiquidatedDescriptionShort:{message:"Your $1 short was closed.",description:"$1 is the asset symbol"},pushNotificationPositionLiquidatedTitle:{message:"Position liquidated"},pushNotificationStopLossTriggeredDescriptionLong:{message:"Your $1 long closed at your stop loss.",description:"$1 is the asset symbol"},pushNotificationStopLossTriggeredDescriptionShort:{message:"Your $1 short closed at your stop loss.",description:"$1 is the asset symbol"},pushNotificationStopLossTriggeredTitle:{message:"Stop loss triggered"},pushNotificationTakeProfitTriggeredDescriptionLong:{message:"Your $1 long closed at your take profit.",description:"$1 is the asset symbol"},pushNotificationTakeProfitTriggeredDescriptionShort:{message:"Your $1 short closed at your take profit.",description:"$1 is the asset symbol"},pushNotificationTakeProfitTriggeredTitle:{message:"Take profit triggered"},pushPlatformNotificationsFundsReceivedDescription:{message:"You received $1 $2"},pushPlatformNotificationsFundsReceivedDescriptionDefault:{message:"You received some tokens"},pushPlatformNotificationsFundsReceivedTitle:{message:"Funds received"},pushPlatformNotificationsFundsSentDescription:{message:"You successfully sent $1 $2"},pushPlatformNotificationsFundsSentDescriptionDefault:{message:"You successfully sent some tokens"},pushPlatformNotificationsFundsSentTitle:{message:"Funds sent"},pushPlatformNotificationsNftReceivedDescription:{message:"You received new NFTs"},pushPlatformNotificationsNftReceivedTitle:{message:"NFT received"},pushPlatformNotificationsNftSentDescription:{message:"You have successfully sent an NFT"},pushPlatformNotificationsNftSentTitle:{message:"NFT sent"},pushPlatformNotificationsStakingLidoStakeCompletedDescription:{message:"Your Lido stake was successful"},pushPlatformNotificationsStakingLidoStakeCompletedTitle:{message:"Stake complete"},pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnDescription:{message:"Your Lido stake is now ready to be withdrawn"},pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnTitle:{message:"Stake ready for withdrawal"},pushPlatformNotificationsStakingLidoWithdrawalCompletedDescription:{message:"Your Lido withdrawal was successful"},pushPlatformNotificationsStakingLidoWithdrawalCompletedTitle:{message:"Withdrawal completed"},pushPlatformNotificationsStakingLidoWithdrawalRequestedDescription:{message:"Your Lido withdrawal request was submitted"},pushPlatformNotificationsStakingLidoWithdrawalRequestedTitle:{message:"Withdrawal requested"},pushPlatformNotificationsStakingRocketpoolStakeCompletedDescription:{message:"Your RocketPool stake was successful"},pushPlatformNotificationsStakingRocketpoolStakeCompletedTitle:{message:"Stake complete"},pushPlatformNotificationsStakingRocketpoolUnstakeCompletedDescription:{message:"Your RocketPool unstake was successful"},pushPlatformNotificationsStakingRocketpoolUnstakeCompletedTitle:{message:"Unstake complete"},pushPlatformNotificationsSwapCompletedDescription:{message:"Your MetaMask Swap was successful"},pushPlatformNotificationsSwapCompletedTitle:{message:"Swap completed"},queued:{message:"Queued"},quoteRate:{message:"Quote rate"},quotedReceiveAmount:{message:"$1 receive amount"},quotedTotalCost:{message:"$1 total cost"},rank:{message:"Rank"},rateIncludesMMFee:{message:"Includes $1% MM fee."},reAddAccounts:{message:"re-add any other accounts"},reAdded:{message:"re-added"},readdToken:{message:"You can add this token back in the future by going to “Import token” in your accounts options menu."},receive:{message:"Receive"},receiveCrypto:{message:"Receive crypto"},received:{message:"Received"},receivingAddress:{message:"Receiving address",description:"Page title when viewing addresses for receiving funds"},recipient:{message:"Recipient"},recipientAddressPlaceholderNew:{message:"Enter public address (0x) or domain name"},recipientEditAriaLabel:{message:"Edit recipient"},recipientPlaceholder:{message:"Enter or paste a valid address"},recoveryPhraseReminderBackupStart:{message:"Back up now"},recoveryPhraseReminderConfirm:{message:"Remind me later"},recoveryPhraseReminderSubText:{message:"If you don’t back up your wallet, you’ll lose access to your funds if you get locked out of the app or get a new device."},recoveryPhraseReminderTitle:{message:"Protect your wallet"},redeposit:{message:"Redeposit"},refreshList:{message:"Refresh list"},reject:{message:"Reject"},rejectAll:{message:"Reject all"},rejectRequestsDescription:{message:"You are about to batch reject $1 requests."},rejectRequestsN:{message:"Reject $1 requests"},rejectTxsDescription:{message:"You are about to batch reject $1 transactions."},rejectTxsN:{message:"Reject $1 transactions"},rejected:{message:"Rejected"},remove:{message:"Remove"},removeAccount:{message:"Remove account"},removeAccountDescription:{message:"This account will be removed from your wallet. Please make sure you have the original Secret Recovery Phrase or private key for this imported account before continuing. You can import or create accounts again from the account drop-down. "},removeAccountModalBannerDescription:{message:"Make sure you have the Secret Recovery Phrase or private key for this account before removing.",description:"Make sure you have the Secret Recovery Phrase or private key for this account before removing."},removeAccountModalBannerTitle:{message:"This account will be removed from MetaMask.",description:"Title of a banner alert used on account remove modal."},removeKeyringSnap:{message:"Removing this Snap removes these accounts from MetaMask:"},removeKeyringSnapToolTip:{message:"The snap controls the accounts, and by removing it, the accounts will be removed from MetaMask, too, but they will remain in the blockchain."},removeNFT:{message:"Remove NFT"},removeNftErrorMessage:{message:"We could not remove this NFT."},removeNftMessage:{message:"NFT was successfully removed!"},removeSnap:{message:"Remove Snap"},removeSnapAccountDescription:{message:"If you proceed, this account will no longer be available in MetaMask."},removeSnapAccountTitle:{message:"Remove account"},removeSnapConfirmation:{message:"Are you sure you want to remove $1?",description:"$1 represents the name of the snap"},removeSnapDescription:{message:"This action will delete the snap, its data and revoke your given permissions."},rename:{message:"Rename",description:"Multichain account menu item for triggering account rename action modal"},replace:{message:"replace"},reportIssue:{message:"Report an issue"},reportThisError:{message:"Report this error"},requestFrom:{message:"Request from"},requestFromInfo:{message:"This is the site asking for your signature."},requestFromInfoSnap:{message:"This is the Snap asking for your signature."},requestFromTransactionDescription:{message:"This is the site asking for your confirmation."},requestingFor:{message:"Requesting for"},requestingForAccount:{message:"Requesting for $1",description:"Name of Account"},requestingForNetwork:{message:"Requesting for $1",description:"Name of Network"},required:{message:"Required"},reset:{message:"Reset"},resetWallet:{message:"Reset your wallet"},resetWalletSubHeader:{message:"MetaMask does not keep a copy of your password. If you’re having trouble unlocking your account, you will need to reset your wallet. You can do this by providing the Secret Recovery Phrase you used when you set up your wallet."},resetWalletSubHeaderSocial:{message:"MetaMask doesn’t keep a copy of your password. If you’re having trouble unlocking your account, you’ll need to reset your wallet. If you have a Secret Recovery Phrase, you can use it to erase your current wallet from this device, along with the list of your accounts."},resetWalletUsingSRP:{message:"This action will delete your current wallet and Secret Recovery Phrase from this device, along with the list of accounts you’ve curated. After resetting with a Secret Recovery Phrase, you’ll see a list of accounts based on the Secret Recovery Phrase you use to reset. This new list will automatically include accounts that have a balance. You’ll also be able to $1 created previously. Custom accounts that you’ve imported will need to be $2, and any custom tokens you’ve added to an account will need to be $3 as well."},resetWalletUsingSRPSocial:{message:"After resetting with a Secret Recovery Phrase, you’ll see a new list of accounts. This list will include accounts that have a balance. You can $1 you made before. But you’ll need to add back any $2 and $3 you imported. "},resetWalletUsingSRPSocialAccounts:{message:"add back any other accounts"},resetWalletUsingSRPSocialCustomAccounts:{message:"custom accounts"},resetWalletUsingSRPSocialCustomTokens:{message:"custom tokens"},resetWalletWarning:{message:"Make sure you’re using the correct Secret Recovery Phrase before proceeding. You will not be able to undo this."},resetWalletWarningSocial:{message:"Make sure you use the right Secret Recovery Phrase before you reset. This can’t be undone."},resolutionProtocol:{message:"Address resolved via $1",description:"$1 is the protocol name."},restartMetamask:{message:"Restart MetaMask"},restore:{message:"Restore"},restoreUserData:{message:"Restore user data"},resultPageError:{message:"Error"},resultPageErrorDefaultMessage:{message:"The operation failed."},resultPageSuccess:{message:"Success"},resultPageSuccessDefaultMessage:{message:"The operation completed successfully."},retryTransaction:{message:"Retry transaction"},reusedTokenNameWarning:{message:"A token here reuses a symbol from another token you watch, this can be confusing or deceptive."},revealMultichainPrivateKeysBannerDescription:{message:"This key grants full control of your account for the associated chain. $1",description:"Description for the banner warning users not to share their private key"},revealMultichainPrivateKeysBannerTitle:{message:"Don’t share your private key",description:"Title for the banner warning users not to share their private key"},revealSecretRecoveryPhrase:{message:"Back up Secret Recovery Phrase"},revealSeedWords:{message:"Reveal Secret Recovery Phrase"},revealSeedWordsDescription1:{message:"The $1 provides $2",description:"This is a sentence consisting of link using 'revealSeedWordsSRPName' as $1 and bolded text using 'revealSeedWordsDescription3' as $2."},revealSeedWordsDescription2:{message:"MetaMask is a $1. That means you're the owner of your SRP.",description:"$1 is text link with the message from 'revealSeedWordsNonCustodialWallet'"},revealSeedWordsDescription3:{message:"full access to your wallet and funds.\n"},revealSeedWordsNonCustodialWallet:{message:"non-custodial wallet"},revealSeedWordsQR:{message:"QR"},revealSeedWordsSRPName:{message:"Secret Recovery Phrase (SRP)"},revealSeedWordsText:{message:"Text"},revealSeedWordsWarning:{message:"Make sure no one is looking at your screen. $1",description:"$1 is bolded text using the message from 'revealSeedWordsWarning2'"},revealSeedWordsWarning2:{message:"MetaMask Support will never request this.",description:"The bolded texted in the second part of 'revealSeedWordsWarning'"},revealSensitiveContent:{message:"Reveal sensitive content"},review:{message:"Review"},reviewAlert:{message:"Review alert"},reviewAlerts:{message:"Review alerts"},reviewPendingTransactions:{message:"Review pending transactions"},reviewPermissions:{message:"Review permissions"},revokePermission:{message:"Revoke permission"},revokePermissionTitle:{message:"Remove $1 permission",description:"The token symbol that is being revoked"},revokeSimulationDetailsDesc:{message:"You're removing someone's permission to spend tokens from your account."},reward:{message:"Reward"},rpcNameOptional:{message:"RPC Name (Optional)"},rpcUrl:{message:"RPC URL"},safeTransferFrom:{message:"Safe transfer from"},save:{message:"Save"},scanInstructions:{message:"Place the QR code in front of your camera"},scanQrCode:{message:"Scan QR code"},scrollDown:{message:"Scroll down"},search:{message:"Search"},searchAccounts:{message:"Search accounts"},searchAnAcccountOrContact:{message:"Search an account or contact"},searchForAnAssetToSend:{message:"Search for an asset to send"},searchNetworks:{message:"Search networks"},searchNfts:{message:"Search NFTs"},searchTokens:{message:"Search tokens"},searchTokensByNameOrAddress:{message:"Search tokens by name or address"},searchYourAccounts:{message:"Search your accounts",description:"Placeholder in a searchbar. Used on multichain account list page."},secretRecoveryPhrase:{message:"Secret Recovery Phrase"},secretRecoveryPhrasePlusNumber:{message:"Secret Recovery Phrase $1",description:"The $1 is the order of the Secret Recovery Phrase"},secureWallet:{message:"Secure wallet"},secureWalletRemindLaterButton:{message:"Remind me later"},security:{message:"Security"},securityAlert:{message:"Security alert from $1 and $2"},securityAlerts:{message:"Security alerts"},securityAlertsDescription:{message:"This feature alerts you to malicious or unusual activity by actively reviewing transaction and signature requests. $1",description:"Link to learn more about security alerts"},securityAndPrivacy:{message:"Security & privacy"},securityChangePassword:{message:"Change password"},securityChangePasswordDescription:{message:"Choose a strong password to unlock MetaMask app on your device. If you lose this password, you will need your Secret Recovery Phrase to re-import your wallet."},securityChangePasswordTitle:{message:"Password"},securityChangePasswordToastError:{message:"Password couldn’t be changed. Please try again."},securityChangePasswordToastSuccess:{message:"New password saved"},securityDefaultSettingsSocialLogin:{message:"Security & privacy"},securityDescription:{message:"Reduce your chances of joining unsafe networks and protect your accounts"},securityLoginWithSocial:{message:"Log in with $1",description:"The $1 is the text 'Google' or 'Apple'"},securityLoginWithSrpBackedUp:{message:"Secret Recovery Phrase backed up"},securityLoginWithSrpNotBackedUp:{message:"Back up Secret Recovery Phrase"},securityMessageLinkForNetworks:{message:"network scams and security risks"},securityProviderPoweredBy:{message:"Powered by $1",description:"The security provider that is providing data"},securitySocialLoginDefaultSettingsDescription:{message:"Reduce your chances of joining unsafe networks and protect your accounts and data"},securitySocialLoginEnabled:{message:"Enabled"},securitySocialLoginEnabledDescription:{message:"Use your $1 login and MetaMask password to recover your account and Secret Recovery Phrases.",description:"The $1 is the text 'Google' or 'Apple'"},securitySocialLoginLabel:{message:"$1 RECOVERY",description:"The $1 is the text 'Google' or 'Apple'"},securitySrpDescription:{message:"Back up your Secret Recovery Phrase so you never lose access to your wallet. Be sure to store it in a safe place that only you can access and won’t forget."},securitySrpLabel:{message:"SECRET RECOVERY PHRASES"},securitySrpWalletRecovery:{message:"Manage recovery methods"},seeAllPermissions:{message:"See all permissions",description:"Used for revealing more content (e.g. permission list, etc.)"},seeDetails:{message:"See details"},seedPhraseReq:{message:"Secret Recovery Phrases contain 12, 15, 18, 21, or 24 words"},seedPhraseReviewDetails:{message:"This is your $1. Write it down in the correct order and keep it safe. If someone has your Secret Recovery Phrase, they can access your wallet. $2",description:"The $1 is the bolded text 'Secret Recovery Phrase' and $2 is 'seedPhraseReviewDetails2'"},seedPhraseReviewDetails2:{message:"Don’t share it with anyone, ever."},seedPhraseReviewTitle:{message:"Save your Secret Recovery Phrase"},select:{message:"Select"},selectAccountToConnect:{message:"Select an account to connect"},selectAccounts:{message:"Select the account(s) to use on this site"},selectAccountsForSnap:{message:"Select the account(s) to use with this snap"},selectAll:{message:"Select all"},selectAnAccount:{message:"Select an account"},selectAnAccountAlreadyConnected:{message:"This account has already been connected to MetaMask"},selectEnableDisplayMediaPrivacyPreference:{message:"Turn on Display NFT Media"},selectHdPath:{message:"Select HD path"},selectNFTPrivacyPreference:{message:"Enable NFT Autodetection"},selectNetworkToFilter:{message:"Select network to filter"},selectPathHelp:{message:"If you don't see the accounts you expect, try switching the HD path or current selected network."},selectRecipient:{message:"Select recipient"},selectRpcUrl:{message:"Select RPC URL"},selectSecretRecoveryPhrase:{message:"Select Secret Recovery Phrase"},selectType:{message:"Select Type"},selectedAccountMismatch:{message:"Different account selected"},selectingAllWillAllow:{message:"Selecting all will allow this site to view all of your current accounts. Make sure you trust this site."},send:{message:"Send"},sendBugReport:{message:"Send us a bug report."},sendNoContactsConversionText:{message:"click here"},sendNoContactsDescription:{message:"Contacts allow you to safely send transactions to another account multiple times.  To create a contact, $1",description:"$1 represents the action text 'click here'"},sendNoContactsTitle:{message:"You don't have any contacts yet"},sendSelectReceiveAsset:{message:"Select asset to receive"},sendSelectSendAsset:{message:"Select asset to send"},sendSwapSubmissionWarning:{message:"Clicking this button will immediately initiate your swap transaction. Please review your transaction details before proceeding."},sendingAsset:{message:"Sending $1"},sendingDisabled:{message:"Sending of ERC-1155 NFT assets is not yet supported."},sendingNativeAsset:{message:"Sending $1",description:"$1 represents the native currency symbol for the current network (e.g. ETH or BNB)"},sendingToTokenContractWarning:{message:"Warning: you are about to send to a token contract which could result in a loss of funds. $1",description:"$1 is a clickable link with text defined by the 'learnMoreUpperCase' key. The link will open to a support article regarding the known contract address warning"},sent:{message:"Sent"},sentSpecifiedTokens:{message:"Sent $1",description:"Symbol of the specified token"},sentTokenAsToken:{message:"Sent $1 as $2",description:"Used in the transaction display list to describe a swap and send. $1 and $2 are the symbols of tokens in involved in the swap."},sepolia:{message:"Sepolia test network"},setApprovalForAll:{message:"Set approval for all"},setApprovalForAllRedesignedTitle:{message:"Withdrawal request"},setApprovalForAllTitle:{message:"Approve $1 with no spend limit",description:"The token symbol that is being approved"},setUp:{message:"Set up",description:"Action label for Smart Accounts. Used on multichain details page."},settingAddSnapAccount:{message:"Add account Snap"},settings:{message:"Settings"},settingsSearchMatchingNotFound:{message:"No matching results found."},settingsSubHeadingSignaturesAndTransactions:{message:"Signature and transaction requests"},shieldEntryModalAssetCoverage:{message:"$10,000 asset coverage per transaction"},shieldEntryModalDescription:{message:"Renews at $1/month, cancel anytime. $2",description:"The $1 is the price of the shield and $2 is a link to the learn more page"},shieldEntryModalGetStarted:{message:"Get started"},shieldEntryModalProtection:{message:"Protection across all your accounts"},shieldEntryModalSkip:{message:"Skip"},shieldEntryModalSubtitle:{message:"Transaction Shield, free for 14 days."},shieldEntryModalSupport:{message:"Priority customer support"},shieldPlanAnnual:{message:"Annual"},shieldPlanAnnualPrice:{message:"$1/year",description:"The $1 is the price of the annual plan"},shieldPlanAutoRenew:{message:"Auto renews for $1 until canceled",description:"The $1 is the price of the monthly plan"},shieldPlanCard:{message:"Card"},shieldPlanDetails:{message:"Plan details"},shieldPlanDetails1:{message:"No charge now, try free for 14 days"},shieldPlanDetails2:{message:"Pre-approve membership (default 1 year), with fees charged only on a monthly basis"},shieldPlanDetails2Card:{message:"Plan auto-renews at the end of the term"},shieldPlanDetails3:{message:"Secures your assets from risky transactions"},shieldPlanMonthly:{message:"Monthly"},shieldPlanMonthlyPrice:{message:"$1/month",description:"The $1 is the price of the monthly plan"},shieldPlanNoFunds:{message:"No available funds"},shieldPlanPayWith:{message:"Pay with"},shieldPlanPayWithCard:{message:"Pay with card"},shieldPlanPayWithToken:{message:"Pay with $1",description:"The $1 is token"},shieldPlanPaymentTitle:{message:"Change payment method"},shieldPlanSave:{message:"Save 16%"},shieldPlanSelectToken:{message:"Select a token"},shieldPlanTitle:{message:"Choose your plan"},shieldTx:{message:"Transaction Shield"},shieldTxCancelDetails:{message:"If you cancel, your wallet and transactions will not be covered starting $1.",description:"The $1 is the date subscription ends"},shieldTxDetails1Description:{message:"Secures your assets from risky transactions"},shieldTxDetails1Title:{message:"Covers $10,000 in transaction protection"},shieldTxDetails2Description:{message:"Get faster, dedicated support anytime"},shieldTxDetails2Title:{message:"Priority support"},shieldTxMembershipActive:{message:"Active membership"},shieldTxMembershipBillingDetails:{message:"Billing details"},shieldTxMembershipBillingDetailsBillingAccount:{message:"Billing account"},shieldTxMembershipBillingDetailsCharges:{message:"Charges"},shieldTxMembershipBillingDetailsNextBilling:{message:"Next billing"},shieldTxMembershipBillingDetailsPaymentMethod:{message:"Payment method"},shieldTxMembershipBillingDetailsViewBillingHistory:{message:"View billing history"},shieldTxMembershipCancel:{message:"Cancel membership"},shieldTxMembershipCancelNotification:{message:"Your membership will be cancelled on $1.",description:"The $1 is the date"},shieldTxMembershipErrorAddFunds:{message:"Add funds"},shieldTxMembershipErrorInsufficientFunds:{message:"Insufficient funds for your April 18 renewal. Keep access active by adding funds.",description:"The $1 is the date"},shieldTxMembershipErrorInsufficientToken:{message:"Insufficient $1",description:"The $1 is the token symbol"},shieldTxMembershipErrorPaused:{message:"Membership paused due to insufficient funds. Coverage will resume after payment update."},shieldTxMembershipErrorPausedCardTooltip:{message:"Your payment was declined. Please update your payment method to continue your coverage."},shieldTxMembershipErrorPausedCryptoTooltip:{message:"Insufficient token balance in your wallet. Top up to resume coverage."},shieldTxMembershipErrorUpdateCard:{message:"Update card details"},shieldTxMembershipErrorUpdatePayment:{message:"Update payment"},shieldTxMembershipFreeTrial:{message:"Free trial"},shieldTxMembershipId:{message:"Member ID"},shieldTxMembershipInactive:{message:"Inactive membership"},shieldTxMembershipPaused:{message:"Paused"},shieldTxMembershipRenew:{message:"Renew membership"},shieldTxMembershipResubscribe:{message:"Restart membership"},shieldTxMembershipSubmitCase:{message:"Submit a claim"},shieldTxMembershipViewFullBenefits:{message:"View full benefits"},show:{message:"Show"},showAccount:{message:"Show account"},showAdvancedDetails:{message:"Show advanced details"},showExtensionInFullSizeView:{message:"Show extension in full-size view"},showExtensionInFullSizeViewDescription:{message:"Turn this on to make full-size view your default when you click the extension icon."},showFiatConversionInTestnets:{message:"Show conversion on test networks"},showFiatConversionInTestnetsDescription:{message:"Select this to show fiat conversion on test networks"},showHexData:{message:"Show hex data"},showHexDataDescription:{message:"Select this to show the hex data field on the send screen"},showLess:{message:"Show less"},showMore:{message:"Show more"},showNativeTokenAsMainBalance:{message:"Show native token as main balance"},showNft:{message:"Show NFT"},showPermissions:{message:"Show permissions"},showPrivateKey:{message:"Show private key"},showSRP:{message:"Show Secret Recovery Phrase"},showTestnetNetworks:{message:"Show test networks"},showTestnetNetworksDescription:{message:"Select this to show test networks in network list"},sign:{message:"Sign"},signatureRequest:{message:"Signature request"},signature_decoding_bid_nft_tooltip:{message:"The NFT will be reflected in your wallet, when the bid is accepted."},signature_decoding_list_nft_tooltip:{message:"Expect changes only if someone buys your NFTs."},signed:{message:"Signed"},signing:{message:"Signing"},signingInWith:{message:"Signing in with"},signingWith:{message:"Signing with"},simulationApproveHeading:{message:"Withdraw"},simulationDetailsApproveDesc:{message:"You're giving someone else permission to withdraw NFTs from your account."},simulationDetailsERC20ApproveDesc:{message:"You're giving someone else permission to spend this amount from your account."},simulationDetailsFiatNotAvailable:{message:"Not Available"},simulationDetailsIncomingHeading:{message:"You receive"},simulationDetailsNoChanges:{message:"No changes"},simulationDetailsOutgoingHeading:{message:"You send"},simulationDetailsRevokeSetApprovalForAllDesc:{message:"You're removing someone else's permission to withdraw NFTs from your account."},simulationDetailsSetApprovalForAllDesc:{message:"You're giving permission for someone else to withdraw NFTs from your account."},simulationDetailsTitle:{message:"Estimated changes"},simulationDetailsTitleEnforced:{message:"Balance changes"},simulationDetailsTitleTooltip:{message:"Estimated changes are what might happen if you go through with this transaction. This is just a prediction, not a guarantee."},simulationDetailsTitleTooltipEnforced:{message:"Balance changes are guaranteed. If this outcome isn't possible, the transaction will be stopped."},simulationDetailsTotalFiat:{message:"Total = $1",description:"$1 is the total amount in fiat currency on one side of the transaction"},simulationDetailsTransactionReverted:{message:"This transaction is likely to fail"},simulationDetailsUnavailable:{message:"Unavailable"},simulationErrorMessageV2:{message:"We were not able to estimate gas. There might be an error in the contract and this transaction may fail."},simulationSettingsModalEnforceSlippage:{message:"Slippage tolerance"},simulationSettingsModalEnforceSlippageDescription:{message:"Set a difference you're comfortable with for balance changes. Transactions won't go through if the difference is higher."},simulationSettingsModalEnforceToggle:{message:"Enforce balance changes"},simulationSettingsModalEnforceToggleDescription:{message:"To keep your money safe, this transaction won't go through if the balance changes or the slippage tolerance isn't met."},simulationSettingsModalTitle:{message:"Transaction settings"},simulationsSettingDescription:{message:"Turn this on to estimate balance changes of transactions and signatures before you confirm them. This doesn't guarantee their final outcome. $1"},simulationsSettingSubHeader:{message:"Estimate balance changes"},singleNetwork:{message:"1 network"},sites:{message:"Sites"},siweIssued:{message:"Issued"},siweNetwork:{message:"Network"},siweRequestId:{message:"Request ID"},siweResources:{message:"Resources"},siweURI:{message:"URL"},skipDeepLinkInterstitial:{message:"Don't show interstitial screen when opening deep links"},skipDeepLinkInterstitialDescription:{message:'Enabling this option will skip the interstitial screen that is shown when opening deep links in MetaMask. A "deep link" is a link like https://link.metamask.io/home that will cause MetaMask to open; these links can be obfuscated by others. The interstitial screen is designed to protect you from accidentally opening pages within MetaMask that might display your accounts, tokens, history, balances, settings, or other potentially sensitive information. This setting only applies to links signed by MetaMask.'},slippage:{message:"Slippage"},slippageAuto:{message:"Auto"},slippageEditAriaLabel:{message:"Edit slippage"},slippageExplanation:{message:"The % change in price you're willing to allow before your transaction is canceled."},smartAccount:{message:"Smart account"},smartAccountAccept:{message:"Use smart account"},smartAccountBetterTransaction:{message:"Faster transactions, lower fees"},smartAccountBetterTransactionDescription:{message:"Save time and money by processing transactions together."},smartAccountFeaturesDescription:{message:"Keep the same account address, and you can switch back anytime."},smartAccountLabel:{message:"Smart Account"},smartAccountPayToken:{message:"Pay with any token, any time"},smartAccountPayTokenDescription:{message:"Use the tokens you already have to cover network fees."},smartAccountReject:{message:"Don’t use smart account"},smartAccountSameAccount:{message:"Same account, smarter features."},smartAccountSplashInfo:{message:"Smart accounts"},smartAccountSplashTitle:{message:"Use smart account?"},smartAccountUpdateSuccessMessage:{message:"Your account will be updated to smart account with your next transaction."},smartAccountUpdateSuccessTitle:{message:"Successful!"},smartAccountUpgradeBannerDescription:{message:"Same address. Smarter features."},smartAccountUpgradeBannerTitle:{message:"Switch to smart account"},smartContracts:{message:"Smart contracts"},smartSwapsErrorNotEnoughFunds:{message:"Not enough funds for a smart swap."},smartSwapsErrorUnavailable:{message:"Smart Swaps are temporarily unavailable."},smartTransactionCancelled:{message:"Your transaction was canceled"},smartTransactionCancelledDescription:{message:"Your transaction couldn't be completed, so it was canceled to save you from paying unnecessary gas fees."},smartTransactionError:{message:"Your transaction failed"},smartTransactionErrorDescription:{message:"Sudden market changes can cause failures. If the problem continues, reach out to MetaMask customer support."},smartTransactionPending:{message:"Your transaction was submitted"},smartTransactionSuccess:{message:"Your transaction is complete"},smartTransactions:{message:"Smart Transactions"},smartTransactionsEnabledDescription:{message:" and MEV protection. Now on by default."},smartTransactionsEnabledLink:{message:"Higher success rates"},smartTransactionsEnabledTitle:{message:"Transactions just got smarter"},snapAccountCreated:{message:"Account created"},snapAccountCreatedDescription:{message:"Your new account is ready to use!"},snapAccountCreationFailed:{message:"Account creation failed"},snapAccountCreationFailedDescription:{message:"$1 didn't manage to create an account for you.",description:"$1 is the snap name"},snapAccountRedirectFinishSigningTitle:{message:"Finish signing"},snapAccountRedirectSiteDescription:{message:"Follow the instructions from $1"},snapAccountRemovalFailed:{message:"Account removal failed"},snapAccountRemovalFailedDescription:{message:"$1 didn't manage to remove this account for you.",description:"$1 is the snap name"},snapAccountRemoved:{message:"Account removed"},snapAccountRemovedDescription:{message:"This account will no longer be available to use in MetaMask."},snapAccounts:{message:"Account Snaps"},snapAccountsDescription:{message:"Accounts controlled by third-party Snaps."},snapConnectTo:{message:"Connect to $1",description:"$1 is the website URL or a Snap name. Used for Snaps pre-approved connections."},snapConnectionPermissionDescription:{message:"Let $1 automatically connect to $2 without your approval.",description:"Used for Snap pre-approved connections. $1 is the Snap name, $2 is a website URL."},snapConnectionWarning:{message:"$1 wants to use $2",description:"$2 is the snap and $1 is the dapp requesting connection to the snap."},snapDetailWebsite:{message:"Website"},snapHomeMenu:{message:"Snap Home Menu"},snapInstallRequest:{message:"Installing $1 gives it the following permissions.",description:"$1 is the snap name."},snapInstallSuccess:{message:"Installation complete"},snapInstallWarningCheck:{message:"$1 wants permission to do the following:",description:"Warning message used in popup displayed on snap install. $1 is the snap name."},snapInstallWarningHeading:{message:"Proceed with caution"},snapInstallWarningPermissionDescriptionForBip32View:{message:"Allow $1 to view your public keys (and addresses). This does not grant any control of accounts or assets.",description:"An extended description for the `snap_getBip32PublicKey` permission used for tooltip on Snap Install Warning screen (popup/modal). $1 is the snap name."},snapInstallWarningPermissionDescriptionForEntropy:{message:"Allow $1 Snap to manage accounts and assets on the requested network(s). These accounts are derived and backed up using your secret recovery phrase (without revealing it). With the power to derive keys, $1 can support a variety of blockchain protocols beyond Ethereum (EVMs).",description:"An extended description for the `snap_getBip44Entropy` and `snap_getBip44Entropy` permissions used for tooltip on Snap Install Warning screen (popup/modal). $1 is the snap name."},snapInstallWarningPermissionNameForEntropy:{message:"Manage $1 accounts",description:"Permission name used for the Permission Cell component displayed on warning popup when installing a Snap. $1 is list of account types."},snapInstallWarningPermissionNameForViewPublicKey:{message:"View your public key for $1",description:"Permission name used for the Permission Cell component displayed on warning popup when installing a Snap. $1 is list of account types."},snapInstallationErrorDescription:{message:"$1 couldn’t be installed.",description:"Error description used when snap installation fails. $1 is the snap name."},snapInstallationErrorTitle:{message:"Installation failed",description:"Error title used when snap installation fails."},snapResultError:{message:"Error"},snapResultSuccess:{message:"Success"},snapResultSuccessDescription:{message:"$1 is ready to use"},snapUIAccountSelectorTitle:{message:"Select account"},snapUIAssetSelectorTitle:{message:"Select an asset"},snapUpdateAlertDescription:{message:"Get the latest version of $1",description:"Description used in Snap update alert banner when snap update is available. $1 is the Snap name."},snapUpdateAvailable:{message:"Update available"},snapUpdateErrorDescription:{message:"$1 couldn’t be updated.",description:"Error description used when snap update fails. $1 is the snap name."},snapUpdateErrorTitle:{message:"Update failed",description:"Error title used when snap update fails."},snapUpdateRequest:{message:"Updating $1 gives it the following permissions.",description:"$1 is the Snap name."},snapUpdateSuccess:{message:"Update complete"},snapUrlIsBlocked:{message:"This Snap wants to take you to a blocked site. $1."},snaps:{message:"Snaps"},snapsConnected:{message:"Snaps connected"},snapsNoInsight:{message:"No insight to show"},snapsPrivacyWarningFirstMessage:{message:"You acknowledge that any Snap that you install is a Third Party Service, unless otherwise identified, as defined in the Consensys $1. Your use of Third Party Services is governed by separate terms and conditions set forth by the Third Party Service provider. Consensys does not recommend the use of any Snap by any particular person for any particular reason. You access, rely upon or use the Third Party Service at your own risk. Consensys disclaims all responsibility and liability for any losses on account of your use of Third Party Services.",description:"First part of a message in popup modal displayed when installing a snap for the first time. $1 is terms of use link."},snapsPrivacyWarningSecondMessage:{message:"Any information you share with Third Party Services will be collected directly by those Third Party Services in accordance with their privacy policies. Please refer to their privacy policies for more information.",description:"Second part of a message in popup modal displayed when installing a snap for the first time."},snapsPrivacyWarningThirdMessage:{message:"Consensys has no access to information you share with Third Party Services.",description:"Third part of a message in popup modal displayed when installing a snap for the first time."},snapsSettings:{message:"Snap settings"},snapsTermsOfUse:{message:"Terms of Use"},snapsToggle:{message:"A snap will only run if it is enabled"},snapsUIError:{message:"Contact the creators of $1 for further support.",description:"This is shown when the insight snap throws an error. $1 is the snap name"},solanaAccountRequested:{message:"This site is requesting a Solana account."},solanaAccountRequired:{message:"A Solana account is required to connect to this site."},someNetworks:{message:"$1 networks"},somethingDoesntLookRight:{message:"Something doesn't look right? $1",description:"A false positive message for users to contact support. $1 is a link to the support page."},somethingIsWrong:{message:"Something's gone wrong. Try reloading the page."},somethingWentWrong:{message:"We could not load this page."},sortBy:{message:"Sort by"},sortByAlphabetically:{message:"Alphabetically (A-Z)"},sortByDecliningBalance:{message:"Declining balance ($1 high-low)",description:"Indicates a descending order based on token fiat balance. $1 is the preferred currency symbol"},source:{message:"Source"},spamModalBlockedDescription:{message:"This site will be blocked for 1 minute."},spamModalBlockedTitle:{message:"You've temporarily blocked this site"},spamModalDescription:{message:"If you're being spammed with multiple requests, you can temporarily block the site."},spamModalTemporaryBlockButton:{message:"Temporarily block this site"},spamModalTitle:{message:"We've noticed multiple requests"},speed:{message:"Speed"},speedUp:{message:"Speed up"},speedUpCancellation:{message:"Speed up this cancellation"},speedUpExplanation:{message:"We’ve updated the gas fee based on current network conditions and have increased it by at least 10% (required by the network)."},speedUpPopoverTitle:{message:"Speed up transaction"},speedUpTooltipText:{message:"New gas fee"},speedUpTransaction:{message:"Speed up this transaction"},spendLimitInsufficient:{message:"Spend limit insufficient"},spendLimitInvalid:{message:"Spend limit invalid; must be a positive number"},spendLimitPermission:{message:"Spend limit permission"},spendLimitRequestedBy:{message:"Spend limit requested by $1",description:"Origin of the site requesting the spend limit"},spendLimitTooLarge:{message:"Spend limit too large"},spender:{message:"Spender"},spenderTooltipDesc:{message:"This is the address that will be able to withdraw your NFTs."},spenderTooltipERC20ApproveDesc:{message:"This is the address that will be able to spend your tokens on your behalf."},spendingCap:{message:"Spending cap"},spendingCaps:{message:"Spending caps"},srpDetailsDescription:{message:"A Secret Recovery Phrase, also called a seed phrase or mnemonic, is a set of words that lets you access and control your crypto wallet. To move your wallet to MetaMask, you need this phrase."},srpDetailsOwnsAccessListItemOne:{message:"Take all your money"},srpDetailsOwnsAccessListItemThree:{message:"Change your login information"},srpDetailsOwnsAccessListItemTwo:{message:"Confirm transactions"},srpDetailsOwnsAccessListTitle:{message:"Anyone with your Secret Recovery Phrase can:"},srpDetailsTitle:{message:"What’s a Secret Recovery Phrase?"},srpInputNumberOfWords:{message:"I have a $1-word phrase",description:"This is the text for each option in the dropdown where a user selects how many words their secret recovery phrase has during import. The $1 is the number of words (either 12, 15, 18, 21, or 24)."},srpListName:{message:"Secret Recovery Phrase $1",description:"$1 is the order of the Secret Recovery Phrase"},srpListNumberOfAccounts:{message:"$1 accounts",description:"$1 is the number of accounts in the list"},srpListSelectionDescription:{message:"The Secret Recovery Phrase your new account will be generated from"},srpListSingleOrZero:{message:"$1 account",description:"$1 is the number of accounts in the list, it is either 1 or 0"},srpListStateBackedUp:{message:"Reveal"},srpListStateNotBackedUp:{message:"Backup"},srpPasteFailedTooManyWords:{message:"Paste failed because it contained over 24 words. A secret recovery phrase can have a maximum of 24 words.",description:"Description of SRP paste error when the pasted content has too many words"},srpPasteTip:{message:"You can paste your entire Secret Recovery Phrase into any field.",description:"Our secret recovery phrase input is split into one field per word. This message explains to users that they can paste their entire secrete recovery phrase into any field, and we will handle it correctly."},srpSecurityQuizGetStarted:{message:"Get started"},srpSecurityQuizImgAlt:{message:"An eye with a keyhole in the center, and three floating password fields"},srpSecurityQuizIntroduction:{message:"To reveal your Secret Recovery Phrase, you need to correctly answer two questions"},srpSecurityQuizQuestionOneQuestion:{message:"If you lose your Secret Recovery Phrase, MetaMask..."},srpSecurityQuizQuestionOneRightAnswer:{message:"Can’t help you"},srpSecurityQuizQuestionOneRightAnswerDescription:{message:"Write it down, engrave it on metal, or keep it in multiple secret spots so you never lose it. If you lose it, it’s gone forever."},srpSecurityQuizQuestionOneRightAnswerTitle:{message:"Right! No one can help get your Secret Recovery Phrase back"},srpSecurityQuizQuestionOneWrongAnswer:{message:"Can get it back for you"},srpSecurityQuizQuestionOneWrongAnswerDescription:{message:"If you lose your Secret Recovery Phrase, it’s gone forever. No one can help you get it back, no matter what they might say."},srpSecurityQuizQuestionOneWrongAnswerTitle:{message:"Wrong! No one can help get your Secret Recovery Phrase back"},srpSecurityQuizQuestionTwoQuestion:{message:"If anyone, even a support agent, asks for your Secret Recovery Phrase..."},srpSecurityQuizQuestionTwoRightAnswer:{message:"You’re being scammed"},srpSecurityQuizQuestionTwoRightAnswerDescription:{message:"Anyone claiming to need your Secret Recovery Phrase is lying to you. If you share it with them, they will steal your assets."},srpSecurityQuizQuestionTwoRightAnswerTitle:{message:"Correct! Sharing your Secret Recovery Phrase is never a good idea"},srpSecurityQuizQuestionTwoWrongAnswer:{message:"You should give it to them"},srpSecurityQuizQuestionTwoWrongAnswerDescription:{message:"Anyone claiming to need your Secret Recovery Phrase is lying to you. If you share it with them, they will steal your assets."},srpSecurityQuizQuestionTwoWrongAnswerTitle:{message:"Nope! Never share your Secret Recovery Phrase with anyone, ever"},srpSecurityQuizTitle:{message:"Security quiz"},srpToggleShow:{message:"Show/Hide this word of the secret recovery phrase",description:"Describes a toggle that is used to show or hide a single word of the secret recovery phrase"},srpWordHidden:{message:"This word is hidden",description:"Explains that a word in the secret recovery phrase is hidden"},srpWordShown:{message:"This word is being shown",description:"Explains that a word in the secret recovery phrase is being shown"},stable:{message:"Stable"},stableLowercase:{message:"stable"},stake:{message:"Stake"},staked:{message:"Staked"},standardAccountLabel:{message:"Standard Account"},stateCorruptionAreYouSure:{message:"Are you sure you want to proceed?"},stateCorruptionCopyAndRestoreBeforeRecovery:{message:"You can try to copy and restore your state file manually before you decide to restore your vault by following $1.",description:"$1 represents the `stateCorruptionTheseInstructions` localization key"},stateCorruptionCopyAndRestoreBeforeReset:{message:"You can try to copy and restore your state file manually before you decide to reset MetaMask by following $1.",description:"$1 represents the `stateCorruptionTheseInstructions` localization key"},stateCorruptionDetectedNoBackup:{message:"Your vault cannot be automatically recovered."},stateCorruptionDetectedWithBackup:{message:"Your vault can be recovered from an automated backup. Automatic recovery will delete your current settings and preferences, and restore only your vault."},stateCorruptionMetamaskDatabaseCannotBeAccessed:{message:"Internal Error: Database cannot be accessed"},stateCorruptionResetMetaMaskState:{message:"Reset MetaMask State"},stateCorruptionResettingDatabase:{message:"Resetting database…"},stateCorruptionRestoreAccountsFromBackup:{message:"Restore Accounts"},stateCorruptionRestoringDatabase:{message:"Restoring database…"},stateCorruptionTheseInstructions:{message:"these instructions",description:"This is a link to instructions on how to recover your Secret Recovery Phrase manually. It is used in the `stateCorruptionCopyAndRestoreBeforeRecovery` and `stateCorruptionCopyAndRestoreBeforeReset` localization keys."},stateCorruptionTheseInstructionsLinkTitle:{message:"How to recover your Secret Recovery Phrase"},stateLogError:{message:"Error in retrieving state logs."},stateLogFileName:{message:"MetaMask state logs"},stateLogs:{message:"State logs"},stateLogsDescription:{message:"State logs contain your public account addresses and sent transactions."},status:{message:"Status"},statusNotConnected:{message:"Not connected"},step1LatticeWallet:{message:"Connect your Lattice1"},step1LatticeWalletMsg:{message:"You can connect MetaMask to your Lattice1 device once it is set up and online. Unlock your device and have your Device ID ready.",description:"$1 represents the `hardwareWalletSupportLinkConversion` localization key"},step1LedgerWallet:{message:"Download Ledger app"},step1LedgerWalletMsg:{message:"Download, set up, and enter your password to unlock $1.",description:"$1 represents the `ledgerLiveApp` localization value"},step1TrezorWallet:{message:"Connect your Trezor"},step1TrezorWalletMsg:{message:"Plug your Trezor directly into your computer and unlock it. Make sure you use the correct passphrase.",description:"$1 represents the `hardwareWalletSupportLinkConversion` localization key"},step2LedgerWallet:{message:"Connect your Ledger"},step2LedgerWalletMsg:{message:"Plug your Ledger directly into your computer, then  unlock it and open the Ethereum app.",description:"$1 represents the `hardwareWalletSupportLinkConversion` localization key"},stillConnectingTo:{message:"Still connecting to $1...",description:"Message shown when network connection is slow. $1 is the network name."},stillGettingMessage:{message:"Still getting this message?"},strong:{message:"Strong"},stxCancelled:{message:"Swap would have failed"},stxCancelledDescription:{message:"Your transaction would have failed and was cancelled to protect you from paying unnecessary gas fees."},stxCancelledSubDescription:{message:"Try your swap again. We’ll be here to protect you against similar risks next time."},stxFailure:{message:"Swap failed"},stxFailureDescription:{message:"Sudden market changes can cause failures. If the problem persists, please reach out to $1.",description:"This message is shown to a user if their swap fails. The $1 will be replaced by support.metamask.io"},stxOptInSupportedNetworksDescription:{message:"Turn on Smart Transactions for more reliable and secure transactions on supported networks. $1"},stxPendingPrivatelySubmittingSwap:{message:"Privately submitting your Swap..."},stxPendingPubliclySubmittingSwap:{message:"Publicly submitting your Swap..."},stxSuccess:{message:"Swap complete!"},stxSuccessDescription:{message:"Your $1 is now available.",description:"$1 is a token symbol, e.g. ETH"},stxSwapCompleteIn:{message:"Swap will complete in <",description:"'<' means 'less than', e.g. Swap will complete in < 2:59"},stxTryingToCancel:{message:"Trying to cancel your transaction..."},stxUnknown:{message:"Status unknown"},stxUnknownDescription:{message:"A transaction has been successful but we’re unsure what it is. This may be due to submitting another transaction while this swap was processing."},stxUserCancelled:{message:"Swap cancelled"},stxUserCancelledDescription:{message:"Your transaction has been cancelled and you did not pay any unnecessary gas fees."},submit:{message:"Submit"},submitted:{message:"Submitted"},suggestedBySnap:{message:"Suggested by $1",description:"$1 is the snap name"},suggestedCurrencySymbol:{message:"Suggested currency symbol:"},suggestedTokenName:{message:"Suggested name:"},supplied:{message:"Supplied"},support:{message:"Support"},supportCenter:{message:"Visit our support center"},supportMultiRpcInformation:{message:"We now support multiple RPCs for a single network. Your most recent RPC has been selected as the default one to resolve conflicting information."},surveyConversion:{message:"Take our survey"},surveyTitle:{message:"Shape the future of MetaMask"},swap:{message:"Swap"},swapAdjustSlippage:{message:"Adjust slippage"},swapAggregator:{message:"Aggregator"},swapAllowSwappingOf:{message:"Allow swapping of $1",description:"Shows a user that they need to allow a token for swapping on their hardware wallet"},swapAmountReceived:{message:"Guaranteed amount"},swapAmountReceivedInfo:{message:"This is the minimum amount you will receive. You may receive more depending on slippage."},swapAndSend:{message:"Swap & Send"},swapAnyway:{message:"Swap anyway"},swapApproval:{message:"Approve $1 for swaps",description:"Used in the transaction display list to describe a transaction that is an approve call on a token that is to be swapped.. $1 is the symbol of a token that has been approved."},swapApproveNeedMoreTokens:{message:"You need $1 more $2 to complete this swap",description:"Tells the user how many more of a given token they need for a specific swap. $1 is an amount of tokens and $2 is the token symbol."},swapAreYouStillThere:{message:"Are you still there?"},swapAreYouStillThereDescription:{message:"We’re ready to show you the latest quotes when you want to continue"},swapConfirmWithHwWallet:{message:"Confirm with your hardware wallet"},swapContinueSwapping:{message:"Continue swapping"},swapContractDataDisabledErrorDescription:{message:'In the Ethereum app on your Ledger, go to "Settings" and allow contract data. Then, try your swap again.'},swapContractDataDisabledErrorTitle:{message:"Contract data is not enabled on your Ledger"},swapCustom:{message:"custom"},swapDecentralizedExchange:{message:"Decentralized exchange"},swapDetailsTitle:{message:"Swap details",description:"Title for the modal showing details about a swap transaction."},swapDirectContract:{message:"Direct contract"},swapEditLimit:{message:"Edit limit"},swapEnableDescription:{message:"This is required and gives MetaMask permission to swap your $1.",description:"Gives the user info about the required approval transaction for swaps. $1 will be the symbol of a token being approved for swaps."},swapEnableTokenForSwapping:{message:"This will $1 for swapping",description:"$1 is for the 'enableToken' key, e.g. 'enable ETH'"},swapEnterAmount:{message:"Enter an amount"},swapEstimatedNetworkFees:{message:"Estimated network fees"},swapEstimatedNetworkFeesInfo:{message:"This is an estimate of the network fee that will be used to complete your swap. The actual amount may change according to network conditions."},swapFailedErrorDescriptionWithSupportLink:{message:"Transaction failures happen and we are here to help. If this issue persists, you can reach our customer support at $1 for further assistance.",description:"This message is shown to a user if their swap fails. The $1 will be replaced by support.metamask.io"},swapFailedErrorTitle:{message:"Swap failed"},swapFetchingQuote:{message:"Fetching quote"},swapFetchingQuoteNofN:{message:"Fetching quote $1 of $2",description:"A count of possible quotes shown to the user while they are waiting for quotes to be fetched. $1 is the number of quotes already loaded, and $2 is the total number of resources that we check for quotes. Keep in mind that not all resources will have a quote for a particular swap."},swapFetchingQuotes:{message:"Fetching quotes..."},swapFetchingQuotesErrorDescription:{message:"Hmmm... something went wrong. Try again, or if errors persist, contact customer support."},swapFetchingQuotesErrorTitle:{message:"Error fetching quotes"},swapFromTo:{message:"The swap of $1 to $2",description:"Tells a user that they need to confirm on their hardware wallet a swap of 2 tokens. $1 is a source token and $2 is a destination token"},swapGasFeesDetails:{message:"Gas fees are estimated and will fluctuate based on network traffic and transaction complexity."},swapGasFeesExplanation:{message:"MetaMask doesn't make money from gas fees. These fees are estimates and can change based on how busy the network is and how complex a transaction is. Learn more $1.",description:"$1 is a link (text in link can be found at 'swapGasFeesSummaryLinkText')"},swapGasFeesExplanationLinkText:{message:"here",description:"Text for link in swapGasFeesExplanation"},swapGasFeesIncluded:{message:" Included"},swapGasFeesLearnMore:{message:"Learn more about gas fees"},swapGasFeesSplit:{message:"Gas fees on the previous screen are split between these two transactions."},swapGasFeesSummary:{message:"Gas fees are paid to crypto miners who process transactions on the $1 network. MetaMask does not profit from gas fees.",description:"$1 is the selected network, e.g. Ethereum or BSC"},swapGasIncludedTooltipExplanation:{message:"This quote incorporates gas fees by adjusting the token amount sent or received. You may receive ETH in a separate transaction on your activity list."},swapGasIncludedTooltipExplanationLinkText:{message:"Learn more about gas fees"},swapHighSlippage:{message:"High slippage"},swapIncludesGasAndMetaMaskFee:{message:"Includes gas and a $1% MetaMask fee",description:"Provides information about the fee that metamask takes for swaps. $1 is a decimal number."},swapIncludesMMFee:{message:"Includes a $1% MetaMask fee.",description:"Provides information about the fee that metamask takes for swaps. $1 is a decimal number."},swapIncludesMMFeeAlt:{message:"Quote reflects $1% MetaMask fee",description:"Provides information about the fee that metamask takes for swaps using the latest copy. $1 is a decimal number."},swapIncludesMetaMaskFeeViewAllQuotes:{message:"Includes a $1% MetaMask fee – $2",description:"Provides information about the fee that metamask takes for swaps. $1 is a decimal number and $2 is a link to view all quotes."},swapLearnMore:{message:"Learn more about Swaps"},swapLiquiditySourceInfo:{message:"We search multiple liquidity sources (exchanges, aggregators and professional market makers) to compare exchange rates and network fees."},swapLowSlippage:{message:"Low slippage"},swapMaxSlippage:{message:"Max slippage"},swapMetaMaskFee:{message:"MetaMask fee"},swapMetaMaskFeeDescription:{message:"The fee of $1% is automatically factored into this quote. You pay it in exchange for a license to use MetaMask's liquidity provider information aggregation software.",description:"Provides information about the fee that metamask takes for swaps. $1 is a decimal number."},swapNQuotesWithDot:{message:"$1 quotes.",description:"$1 is the number of quotes that the user can select from when opening the list of quotes on the 'view quote' screen"},swapNewQuoteIn:{message:"New quotes in $1",description:"Tells the user the amount of time until the currently displayed quotes are update. $1 is a time that is counting down from 1:00 to 0:00"},swapNoTokensAvailable:{message:"No tokens available matching $1",description:"Tells the user that a given search string does not match any tokens in our token lists. $1 can be any string of text"},swapOnceTransactionHasProcess:{message:"Your $1 will be added to your account once this transaction has processed.",description:"This message communicates the token that is being transferred. It is shown on the awaiting swap screen. The $1 will be a token symbol."},swapPriceDifference:{message:"You are about to swap $1 $2 (~$3) for $4 $5 (~$6).",description:"This message represents the price slippage for the swap.  $1 and $4 are a number (ex: 2.89), $2 and $5 are symbols (ex: ETH), and $3 and $6 are fiat currency amounts."},swapPriceDifferenceTitle:{message:"Price difference of ~$1%",description:"$1 is a number (ex: 1.23) that represents the price difference."},swapPriceUnavailableDescription:{message:"Price impact could not be determined due to lack of market price data. Please confirm that you are comfortable with the amount of tokens you are about to receive before swapping."},swapPriceUnavailableTitle:{message:"Check your rate before proceeding"},swapProcessing:{message:"Processing"},swapQuoteDetails:{message:"Quote details"},swapQuoteNofM:{message:"$1 of $2",description:"A count of possible quotes shown to the user while they are waiting for quotes to be fetched. $1 is the number of quotes already loaded, and $2 is the total number of resources that we check for quotes. Keep in mind that not all resources will have a quote for a particular swap."},swapQuoteSource:{message:"Quote source"},swapQuotesExpiredErrorDescription:{message:"Please request new quotes to get the latest rates."},swapQuotesExpiredErrorTitle:{message:"Quotes timeout"},swapQuotesNotAvailableDescription:{message:"This trade route isn't available right now. Try changing the amount, network, or token and we'll find the best option."},swapQuotesNotAvailableErrorDescription:{message:"Try adjusting the amount or slippage settings and try again."},swapQuotesNotAvailableErrorTitle:{message:"No quotes available"},swapRate:{message:"Rate"},swapReceiving:{message:"Receiving"},swapReceivingInfoTooltip:{message:"This is an estimate. The exact amount depends on slippage."},swapRequestForQuotation:{message:"Request for quotation"},swapSelect:{message:"Select"},swapSelectAQuote:{message:"Select a quote"},swapSelectAToken:{message:"Select token"},swapSelectQuotePopoverDescription:{message:"Below are all the quotes gathered from multiple liquidity sources."},swapSelectToken:{message:"Select token"},swapShowLatestQuotes:{message:"Show latest quotes"},swapSlippageAutoDescription:{message:"Auto"},swapSlippageHighDescription:{message:"The slippage entered ($1%) is considered very high and may result in a bad rate",description:"$1 is the amount of % for slippage"},swapSlippageHighTitle:{message:"High slippage"},swapSlippageLowDescription:{message:"A value this low ($1%) may result in a failed swap",description:"$1 is the amount of % for slippage"},swapSlippageLowTitle:{message:"Low slippage"},swapSlippageNegativeDescription:{message:"Slippage must be greater or equal to zero"},swapSlippageNegativeTitle:{message:"Increase slippage to continue"},swapSlippageOverLimitDescription:{message:"Slippage tolerance must be 15% or less. Anything higher will result in a bad rate."},swapSlippageOverLimitTitle:{message:"Very high slippage"},swapSlippagePercent:{message:"$1%",description:"$1 is the amount of % for slippage"},swapSlippageTooltip:{message:"If the price changes between the time your order is placed and confirmed it’s called “slippage”. Your swap will automatically cancel if slippage exceeds your “slippage tolerance” setting."},swapSlippageZeroDescription:{message:"There are fewer zero-slippage quote providers which will result in a less competitive quote."},swapSlippageZeroTitle:{message:"Sourcing zero-slippage providers"},swapSource:{message:"Liquidity source"},swapSuggested:{message:"Swap suggested"},swapSuggestedGasSettingToolTipMessage:{message:"Swaps are complex and time sensitive transactions. We recommend this gas fee for a good balance between cost and confidence of a successful Swap."},swapSwapFrom:{message:"Swap from"},swapSwapSwitch:{message:"Switch token order"},swapSwapTo:{message:"Swap to"},swapToConfirmWithHwWallet:{message:"to confirm with your hardware wallet"},swapTokenAddedManuallyDescription:{message:"Verify this token on $1 and make sure it is the token you want to trade.",description:'$1 points the user to etherscan as a place they can verify information about a token. $1 is replaced with the translation for "etherscan"'},swapTokenAddedManuallyTitle:{message:"Token added manually"},swapTokenAvailable:{message:"Your $1 has been added to your account.",description:"This message is shown after a swap is successful and communicates the exact amount of tokens the user has received for a swap. The $1 is a decimal number of tokens followed by the token symbol."},swapTokenBalanceUnavailable:{message:"We were unable to retrieve your $1 balance",description:"This message communicates to the user that their balance of a given token is currently unavailable. $1 will be replaced by a token symbol"},swapTokenNotAvailable:{message:"Token is not available to swap in this region"},swapTokenToToken:{message:"Swap $1 to $2",description:"Used in the transaction display list to describe a swap. $1 and $2 are the symbols of tokens in involved in a swap."},swapTokenVerifiedOn1SourceDescription:{message:"$1 is only verified on 1 source. Consider verifying it on $2 before proceeding.",description:'$1 is a token name, $2 points the user to etherscan as a place they can verify information about a token. $1 is replaced with the translation for "etherscan"'},swapTokenVerifiedOn1SourceTitle:{message:"Potentially inauthentic token"},swapTokenVerifiedSources:{message:"Confirmed by $1 sources. Verify on $2.",description:"$1 the number of sources that have verified the token, $2 points the user to a block explorer as a place they can verify information about the token."},swapTokens:{message:"Swap tokens"},swapTooManyDecimalsError:{message:"$1 allows up to $2 decimals",description:"$1 is a token symbol and $2 is the max. number of decimals allowed for the token"},swapTransactionComplete:{message:"Transaction complete"},swapTwoTransactions:{message:"2 transactions"},swapUnknown:{message:"Unknown"},swapValidationInsufficientGasMessage:{message:"You don't have enough $1 to pay the gas fee for this swap. Enter a smaller amount or buy more $1."},swapZeroSlippage:{message:"0% Slippage"},swapsMaxSlippage:{message:"Slippage tolerance"},swapsNotEnoughToken:{message:"Not enough $1",description:"Tells the user that they don't have enough of a token for a proposed swap. $1 is a token symbol"},swapsViewInActivity:{message:"View in activity"},switch:{message:"Switch"},switchBack:{message:"Switch back"},switchEthereumChainConfirmationDescription:{message:"This will switch the selected network within MetaMask to a previously added network:"},switchEthereumChainConfirmationTitle:{message:"Allow this site to switch the network?"},switchInputCurrency:{message:"Switch input currency"},switchNetwork:{message:"Switch network"},switchToNetwork:{message:"Switch to $1",description:"$1 represents the custom network that has previously been added"},switchToThisAccount:{message:"Switch to this account"},switchingNetworksCancelsPendingConfirmations:{message:"Switching networks will cancel all pending confirmations"},symbol:{message:"Symbol"},symbolBetweenZeroTwelve:{message:"Symbol must be 11 characters or fewer."},syncing:{message:"Syncing..."},tapToReveal:{message:"Tap to reveal"},tapToRevealNote:{message:"Make sure no one is watching your screen."},tenPercentIncreased:{message:"10% increase"},terms:{message:"Terms of use"},termsOfService:{message:"Terms of service"},termsOfUseAgree:{message:"Agree"},termsOfUseAgreeText:{message:"I agree to the Terms of Use, which apply to my use of MetaMask and all of its features."},termsOfUseFooterText:{message:"Please scroll to read all sections"},termsOfUseTitle:{message:"Review our Terms of Use"},testNetworks:{message:"Test networks"},testnets:{message:"Testnets"},theme:{message:"Theme"},themeDescription:{message:"Choose your preferred MetaMask theme."},thirdPartySoftware:{message:"Third-party software notice",description:"Title of a popup modal displayed when installing a snap for the first time."},time:{message:"Time"},tipsForUsingAWallet:{message:"Tips for using a wallet"},tipsForUsingAWalletDescription:{message:"Adding tokens unlocks more ways to use web3."},to:{message:"To"},toAddress:{message:"To: $1",description:"$1 is the address to include in the To label. It is typically shortened first using shortenAddress"},toggleDecodeDescription:{message:"We use 4byte.directory and Sourcify services to decode and display more readable transaction data. This helps you understand the outcome of pending and past transactions, but can result in your IP address being shared."},token:{message:"Token"},tokenAddress:{message:"Token address"},tokenAlreadyAdded:{message:"Token has already been added."},tokenAutoDetection:{message:"Token autodetection"},tokenContractAddress:{message:"Token contract address"},tokenDecimal:{message:"Token decimal"},tokenDecimalFetchFailed:{message:"Token decimal required. Find it on: $1"},tokenDetails:{message:"Token details"},tokenFoundTitle:{message:"1 new token found"},tokenId:{message:"Token ID"},tokenList:{message:"Token lists"},tokenMarketplace:{message:"Token marketplace"},tokenScamSecurityRisk:{message:"token scams and security risks"},tokenStandard:{message:"Token standard"},tokenSymbol:{message:"Token symbol"},tokenTransfer:{message:"Token transfer"},tokens:{message:"Tokens"},tokensFoundTitle:{message:"$1 new tokens found",description:"$1 is the number of new tokens detected"},tokensInCollection:{message:"Tokens in collection"},tooltipApproveButton:{message:"I understand"},tooltipSatusConnected:{message:"connected"},tooltipSatusConnectedUpperCase:{message:"Connected"},tooltipSatusNotConnected:{message:"not connected"},total:{message:"Total"},totalVolume:{message:"Total volume"},transaction:{message:"transaction"},transactionCancelAttempted:{message:"Transaction cancel attempted with estimated gas fee of $1 at $2"},transactionCancelSuccess:{message:"Transaction successfully cancelled at $2"},transactionConfirmed:{message:"Transaction confirmed at $2."},transactionCreated:{message:"Transaction created with a value of $1 at $2."},transactionDataFunction:{message:"Function"},transactionDetailGasHeading:{message:"Estimated gas fee"},transactionDetailMultiLayerTotalSubtitle:{message:"Amount + fees"},transactionDropped:{message:"Transaction dropped at $2."},transactionError:{message:"Transaction error. Exception thrown in contract code."},transactionErrorNoContract:{message:"Trying to call a function on a non-contract address."},transactionErrored:{message:"Transaction encountered an error."},transactionFlowNetwork:{message:"Network"},transactionHistoryBaseFee:{message:"Base fee (GWEI)"},transactionHistoryL1GasLabel:{message:"Total L1 gas fee"},transactionHistoryL2GasLimitLabel:{message:"L2 gas limit"},transactionHistoryL2GasPriceLabel:{message:"L2 gas price"},transactionHistoryMaxFeePerGas:{message:"Max fee per gas"},transactionHistoryPriorityFee:{message:"Priority fee (GWEI)"},transactionHistoryTotalGasFee:{message:"Total gas fee"},transactionIdLabel:{message:"Transaction ID",description:"Label for the source transaction ID field."},transactionIncludesTypes:{message:"This transaction includes: $1."},transactionResubmitted:{message:"Transaction resubmitted with estimated gas fee increased to $1 at $2"},transactionSettings:{message:"Transaction settings"},transactionSubmitted:{message:"Transaction submitted with estimated gas fee of $1 at $2."},transactionTotalGasFee:{message:"Total gas fee",description:"Label for the total gas fee incurred in the transaction."},transactionUpdated:{message:"Transaction updated at $2."},transactions:{message:"Transactions"},transfer:{message:"Transfer"},transferCrypto:{message:"Transfer crypto"},transferFrom:{message:"Transfer from"},transferRequest:{message:"Transfer request"},troubleConnectingToLedgerU2FOnFirefox:{message:"We're having trouble connecting your Ledger. $1",description:"$1 is a link to the wallet connection guide;"},troubleConnectingToLedgerU2FOnFirefox2:{message:"Review our hardware wallet connection guide and try again.",description:"$1 of the ledger wallet connection guide"},troubleConnectingToLedgerU2FOnFirefoxLedgerSolution:{message:"If you're on the latest version of Firefox, you might be experiencing an issue related to Firefox dropping U2F support. Learn how to fix this issue $1.",description:"It is a link to the ledger website for the workaround."},troubleConnectingToLedgerU2FOnFirefoxLedgerSolution2:{message:"here",description:"Second part of the error message; It is a link to the ledger website for the workaround."},troubleConnectingToWallet:{message:"We had trouble connecting to your $1, try reviewing $2 and try again.",description:"$1 is the wallet device name; $2 is a link to wallet connection guide"},troubleStartingMessage:{message:"This error could be intermittent, so try restarting the extension."},troubleStartingTitle:{message:"MetaMask had trouble starting."},tryAgain:{message:"Try again"},turnOff:{message:"Turn off"},turnOffMetamaskNotificationsError:{message:"There was an error in disabling the notifications. Please try again later."},turnOn:{message:"Turn on"},turnOnMetamaskNotifications:{message:"Turn on notifications"},turnOnMetamaskNotificationsButton:{message:"Turn on"},turnOnMetamaskNotificationsError:{message:"There was an error in creating the notifications. Please try again later."},turnOnMetamaskNotificationsMessageFirst:{message:"Stay in the loop on what's happening in your wallet with notifications."},turnOnMetamaskNotificationsMessagePrivacyBold:{message:"notifications settings."},turnOnMetamaskNotificationsMessagePrivacyLink:{message:"Learn how we protect your privacy while using this feature."},turnOnMetamaskNotificationsMessageSecond:{message:"To use wallet notifications, we use a profile to sync some settings across your devices. $1"},turnOnMetamaskNotificationsMessageThird:{message:"You can turn off notifications at any time in the $1"},turnOnTokenDetection:{message:"Turn on enhanced token detection"},tutorial:{message:"Tutorial"},twelveHrTitle:{message:"12hr:"},txAlertTitle:{message:"This transaction will be reverted"},typeYourSRP:{message:"Enter your Secret Recovery Phrase"},u2f:{message:"U2F",description:"A name on an API for the browser to interact with devices that support the U2F protocol. On some browsers we use it to connect MetaMask to Ledger devices."},unableToConnectTo:{message:"Unable to connect to $1.",description:"Message shown when network connection fails. $1 is the network name."},unapproved:{message:"Unapproved"},unexpectedBehavior:{message:"This behavior is unexpected and should be reported as a bug, even if your accounts are restored."},unifiedSwapAllowSwappingOf:{message:"Allow exact access to $1 $2 on $3 for swapping"},unifiedSwapFromTo:{message:"Swap $1 $2 to $3",description:"Tells a user that they need to confirm on their hardware wallet a swap of 2 tokens. $1 is a source token and $2 is a destination token"},units:{message:"units"},unknown:{message:"Unknown"},unknownCollection:{message:"Unnamed collection"},unknownNetworkForKeyEntropy:{message:"Unknown network",description:"Displayed on places like Snap install warning when regular name is not available."},unknownQrCode:{message:"Error: We couldn't identify that QR code"},unlimited:{message:"Unlimited"},unlock:{message:"Unlock"},unlockPageIncorrectPassword:{message:"Password is incorrect. Please try again."},unlockPageTooManyFailedAttempts:{message:"Too many attempts. Try again in "},unlockToReveal:{message:"Unlock to reveal",description:"Label used for Private Keys row on multichain account details page."},unpin:{message:"Unpin"},unrecognizedChain:{message:"This custom network is not recognized",description:"$1 is a clickable link with text defined by the 'unrecognizedChanLinkText' key. The link will open to instructions for users to validate custom network details."},unsendableAsset:{message:"Sending NFT (ERC-721) tokens is not currently supported",description:"This is an error message we show the user if they attempt to send an NFT asset type, for which currently don't support sending"},unstableTokenPriceDescription:{message:"The price of this token in USD is highly volatile, indicating a high risk of losing significant value by interacting with it."},unstableTokenPriceTitle:{message:"Unstable Token Price"},upArrow:{message:"up arrow"},update:{message:"Update"},updateEthereumChainConfirmationDescription:{message:"This site is requesting to update your default network URL. You can edit defaults and network information any time."},updateInformation:{message:"We've made your wallet safer, smoother, and added some new features. Update now to stay protected and use our latest improvements."},updateNetworkConfirmationTitle:{message:"Update $1",description:"$1 represents network name"},updateOrEditNetworkInformations:{message:"Update your information or"},updateRequest:{message:"Update request"},updateRpc:{message:"Update RPC",description:"Button text to update RPC endpoint"},updateToTheLatestVersion:{message:"Update to the latest version"},updatedRpcForNetworks:{message:"Network RPCs Updated"},uploadDropFile:{message:"Drop your file here"},uploadFile:{message:"Upload file"},urlErrorMsg:{message:"URLs require the appropriate HTTP/HTTPS prefix."},use4ByteResolution:{message:"Decode smart contracts"},useDifferentLoginMethod:{message:"Use a different login method"},useMultiAccountBalanceChecker:{message:"Batch account balance requests"},useMultiAccountBalanceCheckerSettingDescription:{message:"Get faster balance updates by batching account balance requests. This lets us fetch your account balances together, so you get quicker updates for an improved experience. When this feature is off, third parties may be less likely to associate your accounts with each other."},useNftDetection:{message:"Autodetect NFTs"},useNftDetectionDescriptionText:{message:"Let MetaMask add NFTs you own using third-party services. Autodetecting NFTs exposes your IP and account address to these services. Enabling this feature could associate your IP address with your Ethereum address and display fake NFTs airdropped by scammers. You can add tokens manually to avoid this risk."},usePhishingDetection:{message:"Use phishing detection"},usePhishingDetectionDescription:{message:"Display a warning for phishing domains targeting Ethereum users"},useSafeChainsListValidation:{message:"Network details check"},useSafeChainsListValidationDescription:{message:"MetaMask uses a third-party service called $1 to show accurate and standardized network details. This reduces your chances of connecting to malicious or incorrect network. When using this feature, your IP address is exposed to chainid.network."},useSafeChainsListValidationWebsite:{message:"chainid.network",description:"useSafeChainsListValidationWebsite is separated from the rest of the text so that we can bold the third party service name in the middle of them"},useSmartAccountDescription:{message:"Keep this on to automatically switch accounts created within MetaMask to smart accounts whenever relevant features are available, such as faster transactions, lower network fees and payment flexibility on payment for those."},useSmartAccountTitle:{message:"Use smart account"},useTokenDetectionPrivacyDesc:{message:"Automatically displaying tokens sent to your account involves communication with third party servers to fetch token’s images. Those serves will have access to your IP address."},usedByClients:{message:"Used by a variety of different clients"},userName:{message:"Username"},userOpContractDeployError:{message:"Contract deployment from a smart contract account is not supported"},value:{message:"Value"},version:{message:"Version"},view:{message:"View"},viewActivity:{message:"View activity"},viewAddressOnExplorer:{message:"View on $1",description:"$1 is the block explorer name"},viewAllQuotes:{message:"view all quotes"},viewContact:{message:"View contact"},viewDetails:{message:"View details"},viewMore:{message:"View more"},viewOnBlockExplorer:{message:"View on block explorer"},viewOnCustomBlockExplorer:{message:"View $1 at $2",description:"$1 is the action type. e.g (Account, Transaction, Swap) and $2 is the Custom Block Explorer URL"},viewOnEtherscan:{message:"View $1 on Etherscan",description:"$1 is the action type. e.g (Account, Transaction, Swap)"},viewOnExplorer:{message:"View on explorer"},viewOnOpensea:{message:"View on Opensea"},viewTransaction:{message:"View transaction"},viewinExplorer:{message:"View $1 in explorer",description:"$1 is the action type. e.g (Account, Transaction, Swap)"},visitSite:{message:"Visit site"},visitSupportDataConsentModalAccept:{message:"Confirm"},visitSupportDataConsentModalDescription:{message:"Do you want to share your MetaMask Identifier and app version with our Support Center? This can help us better solve your problem, but is optional."},visitSupportDataConsentModalReject:{message:"Don’t share"},visitSupportDataConsentModalTitle:{message:"Share device details with support"},visitWebSite:{message:"Visit our website"},wallet:{message:"Wallet"},walletConnectionGuide:{message:"our hardware wallet connection guide"},walletDetails:{message:"Wallet details"},walletName:{message:"Wallet name"},walletNotFoundDescription:{message:"The wallet with ID $1 was not found.",description:"$1 is the wallet ID"},walletNotFoundTitle:{message:"Wallet not found"},walletReadyLearn:{message:"$1 you can keep this phrase safe so you never lose access to your money.",description:"$1 is the link to Learn how"},walletReadyLearnRemind:{message:"You can back up your wallets or see your Secret Recovery Phrase in Settings > Security & Password."},walletReadyLoseSrp:{message:"If you lose your Secret Recovery Phrase, you won’t be able to use your wallet."},walletReadyLoseSrpFromReminder:{message:"This Secret Recovery Phrase can help you regain access if you ever forget your password or lose access to your login."},walletReadyLoseSrpRemind:{message:"If you don’t back up your Secret Recovery Phrase, you’ll lose access to your funds if you get locked out of the app or get a new device."},walletReadySocialDetails1:{message:"You can log in to your wallet anytime with your $1 account and password.",description:"$1 is the social login type. e.g Google, Apple, etc."},walletReadySocialDetails2:{message:"If you forget your password, you won’t be able to access your wallet."},wantToAddThisNetwork:{message:"Want to add this network?"},wantsToAddThisAsset:{message:"This allows the following asset to be added to your wallet."},warning:{message:"Warning"},warningFromSnap:{message:"Warning from $1",description:"$1 represents the name of the snap"},watchEthereumAccountsDescription:{message:"Turning this option on will give you the ability to watch Ethereum accounts via a public address or ENS name. For feedback on this Beta feature please complete this $1.",description:"$1 is the link to a product feedback form"},watchEthereumAccountsToggle:{message:"Watch Ethereum Accounts (Beta)"},watchOutMessage:{message:"Beware of $1.",description:"$1 is a link with text that is provided by the 'securityMessageLinkForNetworks' key"},web3:{message:"Web3"},web3ShimUsageNotification:{message:"We noticed that the current website tried to use the removed window.web3 API. If the site appears to be broken, please click $1 for more information.",description:"$1 is a clickable link."},webhid:{message:"WebHID",description:"Refers to a interface for connecting external devices to the browser. Used for connecting ledger to the browser. Read more here https://developer.mozilla.org/en-US/docs/Web/API/WebHID_API"},websites:{message:"websites",description:"Used in the 'permission_rpc' message."},welcomeBack:{message:"Welcome back"},welcomeToMetaMask:{message:"Let's get started"},whatsThis:{message:"What's this?"},willApproveAmountForBridging:{message:"Approves token for bridge."},willApproveAmountForSwapping:{message:"Approves token for swap."},withdrawing:{message:"Withdrawing"},wrongNetworkName:{message:"According to our records, the network name may not correctly match this chain ID."},wrongPassword:{message:"Wrong password",description:"Displayed when the user enters an incorrect password"},yes:{message:"Yes"},you:{message:"You"},youDeclinedTheTransaction:{message:"You declined the transaction."},youNeedToAllowCameraAccess:{message:"You need to allow camera access to use this feature."},youReceived:{message:"You received",description:"Label indicating the amount and asset the user received."},youSent:{message:"You sent",description:"Label indicating the amount and asset the user sent."},yourAccounts:{message:"Your accounts"},yourActivity:{message:"Your activity"},yourBalance:{message:"Your balance"},yourNFTmayBeAtRisk:{message:"Your NFT may be at risk"},yourNetworks:{message:"Your networks"},yourPrivateSeedPhrase:{message:"Your Secret Recovery Phrase"},yourTransactionConfirmed:{message:"Transaction already confirmed"},yourTransactionJustConfirmed:{message:"We weren't able to cancel your transaction before it was confirmed on the blockchain."},yourWalletIsReady:{message:"Your wallet is ready!"},yourWalletIsReadyFromReminder:{message:"Keep your Secret Recovery Phrase safe!"},yourWalletIsReadyRemind:{message:"We’ll remind you later"}}}}},{package:"$root$",file:"app/_locales/en/messages.json"}],[1053,{"./errors":1054,"./packer":1057,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.decodeSingle=s.decode=s.encodePacked=s.encodeSingle=s.encode=void 0;const a=e("@metamask/utils"),n=e("./errors"),r=e("./packer");s.encode=(e,t,s,a)=>{try{return(0,r.pack)({types:e,values:t,packed:s,tight:a})}catch(e){if(e instanceof n.ParserError)throw new n.ParserError(`Unable to encode value: ${e.message}`,e);throw new n.ParserError(`An unexpected error occurred: ${(0,n.getErrorMessage)(e)}`,e)}};s.encodeSingle=(e,t)=>(0,s.encode)([e],[t]);s.encodePacked=(e,t,a)=>(0,s.encode)(e,t,!0,a);s.decode=(e,t)=>{const s=(0,a.createBytes)(t);try{return(0,r.unpack)(e,s)}catch(e){if(e instanceof n.ParserError)throw new n.ParserError(`Unable to decode value: ${e.message}`,e);throw new n.ParserError(`An unexpected error occurred: ${(0,n.getErrorMessage)(e)}`,e)}};s.decodeSingle=(e,t)=>{const r=(0,s.decode)([e],t);return(0,a.assert)(1===r.length,new n.ParserError("Decoded value array has unexpected length.")),r[0]}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/abi.js"}],[1054,{"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ParserError=s.getErrorStack=s.getErrorMessage=void 0;const a=e("@metamask/utils");s.getErrorMessage=e=>"string"==typeof e?e:e instanceof Error||(0,a.isObject)(e)&&(0,a.hasProperty)(e,"message")&&"string"==typeof e.message?e.message:"Unknown error.";s.getErrorStack=e=>e instanceof Error?e.stack:undefined;class n extends Error{constructor(e,t){super(e),this.name="ParserError";const a=(0,s.getErrorStack)(t);a&&(this.stack=a)}}s.ParserError=n}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/errors.js"}],[1055,{"./abi":1053,"./errors":1054,"./types":1070},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./abi"),s),n(e("./errors"),s),n(e("./types"),s)}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/index.js"}],[1056,{"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.iterate=void 0;const a=e("@metamask/utils");s.iterate=function*(e,t=32){for(let s=0;s<e.length;s+=t){const n=e=>{(0,a.assert)(e>=0,"Cannot skip a negative number of bytes."),(0,a.assert)(e%t===0,"Length must be a multiple of the size."),s+=e},r=e.subarray(s);yield{skip:n,value:r}}return{skip:()=>undefined,value:new Uint8Array}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/iterator.js"}],[1057,{"./errors":1054,"./iterator":1056,"./parsers":1064,"./utils":1072,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.unpack=s.pack=s.isDynamicParser=s.getParser=void 0;const a=e("@metamask/utils"),n=e("./errors"),r=e("./iterator"),i=e("./parsers"),o=e("./utils");s.getParser=e=>{const t={address:i.address,array:i.array,bool:i.bool,bytes:i.bytes,fixedBytes:i.fixedBytes,function:i.fn,number:i.number,string:i.string,tuple:i.tuple},s=t[e];if(s)return s;const a=Object.values(t).find(t=>t.isType(e));if(a)return a;throw new n.ParserError(`The type "${e}" is not supported.`)};s.isDynamicParser=(e,t)=>{const{isDynamic:s}=e;return"function"==typeof s?s(t):s};s.pack=({types:e,values:t,packed:r=!1,tight:i=!1,arrayPacked:c=!1,byteArray:l=new Uint8Array})=>{(0,a.assert)(e.length===t.length,new n.ParserError(`The number of types (${e.length}) does not match the number of values (${t.length}).`));const{staticBuffer:u,dynamicBuffer:d,pointers:m}=e.reduce(({staticBuffer:e,dynamicBuffer:n,pointers:o},l,u)=>{const d=(0,s.getParser)(l),m=t[u];if(r||c||!(0,s.isDynamicParser)(d,l))return{staticBuffer:d.encode({buffer:e,value:m,type:l,packed:r,tight:i}),dynamicBuffer:n,pointers:o};return{staticBuffer:(0,a.concatBytes)([e,new Uint8Array(32)]),dynamicBuffer:d.encode({buffer:n,value:m,type:l,packed:r,tight:i}),pointers:[...o,{position:e.length,pointer:n.length}]}},{staticBuffer:new Uint8Array,dynamicBuffer:new Uint8Array,pointers:[]});(0,a.assert)(!r&&!c||0===d.length,new n.ParserError("Invalid pack state."));const h=u.length,p=m.reduce((e,{pointer:t,position:s})=>{const n=(0,o.padStart)((0,a.numberToBytes)(h+t));return(0,o.set)(e,n,s)},u);return(0,a.concatBytes)([l,p,d])};s.unpack=(e,t)=>{const i=(0,r.iterate)(t);return e.map(e=>{const{value:{value:r,skip:o},done:c}=i.next();(0,a.assert)(!c,new n.ParserError(`The encoded value is invalid for the provided types. Reached end of buffer while attempting to parse "${e}".`));const l=(0,s.getParser)(e);if((0,s.isDynamicParser)(l,e)){const s=(0,a.bytesToNumber)(r.subarray(0,32)),n=t.subarray(s);return l.decode({type:e,value:n,skip:o})}return l.decode({type:e,value:r,skip:o})})}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/packer.js"}],[1058,{"../errors":1054,"../utils":1072,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.address=s.getAddress=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../utils");s.getAddress=e=>{const t=(0,a.createBytes)(e);return(0,a.assert)(t.length<=20,new n.ParserError(`Invalid address value. Expected address to be 20 bytes long, but received ${t.length} bytes.`)),(0,r.padStart)(t,20)},s.address={isDynamic:!1,isType:e=>"address"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:n}){const i=(0,s.getAddress)(t);if(n)return(0,a.concatBytes)([e,i]);const o=(0,r.padStart)(i);return(0,a.concatBytes)([e,o])},decode:({value:e})=>(0,a.add0x)((0,a.bytesToHex)(e.slice(12,32)))}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/address.js"}],[1059,{"../errors":1054,"../packer":1057,"../utils":1072,"./fixed-bytes":1062,"./tuple":1068,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.array=s.getTupleType=s.getArrayType=s.isArrayType=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../packer"),i=e("../utils"),o=e("./fixed-bytes"),c=e("./tuple"),l=/^(?<type>.*)\[(?<length>\d*?)\]$/u;s.isArrayType=e=>l.test(e);s.getArrayType=e=>{const t=e.match(l);return(0,a.assert)(t?.groups?.type,new n.ParserError(`Invalid array type. Expected an array type, but received "${e}".`)),[t.groups.type,t.groups.length?parseInt(t.groups.length,10):undefined]};s.getTupleType=(e,t)=>`(${new Array(t).fill(e).join(",")})`,s.array={isDynamic(e){const[t,a]=(0,s.getArrayType)(e);return a===undefined||(0,r.isDynamicParser)((0,r.getParser)(t),t)},isType:e=>(0,s.isArrayType)(e),getByteLength(e){(0,a.assert)((0,s.isArrayType)(e),new n.ParserError(`Expected an array type, but received "${e}".`));const[t,i]=(0,s.getArrayType)(e);return(0,r.isDynamicParser)(this,e)||i===undefined?32:c.tuple.getByteLength((0,s.getTupleType)(t,i))},encode({type:e,buffer:t,value:l,packed:u,tight:d}){const[m,h]=(0,s.getArrayType)(e);if((0,a.assert)(!u||!(0,s.isArrayType)(m),new n.ParserError("Cannot pack nested arrays.")),u&&(0,r.isDynamicParser)((0,r.getParser)(m),m))return(0,r.pack)({types:new Array(l.length).fill(m),values:l,byteArray:t,packed:u,arrayPacked:!0,tight:d});if(h)return(0,a.assert)(h===l.length,new n.ParserError(`Array length does not match type length. Expected a length of ${h}, but received ${l.length}.`)),c.tuple.encode({type:(0,s.getTupleType)(m,h),buffer:t,value:l,packed:o.fixedBytes.isType(m)&&d,tight:d});if(u)return(0,r.pack)({types:new Array(l.length).fill(m),values:l,byteArray:t,packed:o.fixedBytes.isType(m)&&d,arrayPacked:!0,tight:d});const p=(0,i.padStart)((0,a.numberToBytes)(l.length));return(0,r.pack)({types:new Array(l.length).fill(m),values:l,byteArray:(0,a.concatBytes)([t,p]),packed:u,tight:d})},decode({type:e,value:t,...i}){const[o,l]=(0,s.getArrayType)(e);if(l){const e=c.tuple.decode({type:(0,s.getTupleType)(o,l),value:t,...i});return(0,a.assert)(e.length===l,new n.ParserError(`Array length does not match type length. Expected a length of ${l}, but received ${e.length}.`)),e}const u=(0,a.bytesToNumber)(t.subarray(0,32));return(0,r.unpack)(new Array(u).fill(o),t.subarray(32))}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/array.js"}],[1060,{"../errors":1054,"./number":1065,"@metamask/superstruct":2705,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.bool=s.getBooleanValue=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils"),r=e("../errors"),i=e("./number"),o=(0,a.coerce)((0,a.boolean)(),(0,a.union)([(0,a.literal)("true"),(0,a.literal)("false")]),e=>"true"===e);s.getBooleanValue=e=>{try{return(0,a.create)(e,o)?BigInt(1):BigInt(0)}catch{throw new r.ParserError(`Invalid boolean value. Expected a boolean literal, or the string "true" or "false", but received "${e}".`)}},s.bool={isDynamic:!1,isType:e=>"bool"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:a,tight:r}){const o=(0,s.getBooleanValue)(t);return a?(0,n.concatBytes)([e,(0,n.bigIntToBytes)(o)]):i.number.encode({type:"uint256",buffer:e,value:o,packed:a,tight:r})},decode:e=>i.number.decode({...e,type:"uint256"})===BigInt(1)}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/bool.js"}],[1061,{"../utils":1072,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.bytes=void 0;const a=e("@metamask/utils"),n=e("../utils");s.bytes={isDynamic:!0,isType:e=>"bytes"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:s}){const r=(0,a.createBytes)(t);if(s)return(0,a.concatBytes)([e,r]);const i=32*Math.ceil(r.byteLength/32);return(0,a.concatBytes)([e,(0,n.padStart)((0,a.numberToBytes)(r.byteLength)),(0,n.padEnd)(r,i)])},decode({value:e}){const t=e.subarray(0,32),s=(0,a.bytesToNumber)(t);return e.slice(32,32+s)}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/bytes.js"}],[1062,{"../errors":1054,"../utils":1072,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fixedBytes=s.getByteLength=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../utils"),i=/^bytes([0-9]{1,2})$/u;s.getByteLength=e=>{const t=e.match(i)?.[1];(0,a.assert)(t,`Invalid byte length. Expected a number between 1 and 32, but received "${e}".`);const s=Number(t);return(0,a.assert)(s>0&&s<=32,new n.ParserError(`Invalid byte length. Expected a number between 1 and 32, but received "${e}".`)),s},s.fixedBytes={isDynamic:!1,isType:e=>i.test(e),getByteLength:()=>32,encode({type:e,buffer:t,value:i,packed:o}){const c=(0,s.getByteLength)(e),l=(0,a.createBytes)(i);return(0,a.assert)(l.length<=c,new n.ParserError(`Expected a value of length ${c}, but received a value of length ${l.length}.`)),o?(0,a.concatBytes)([t,(0,r.padEnd)(l,c)]):(0,a.concatBytes)([t,(0,r.padEnd)(l)])},decode({type:e,value:t}){const a=(0,s.getByteLength)(e);return t.slice(0,a)}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js"}],[1063,{"../errors":1054,"./fixed-bytes":1062,"@metamask/superstruct":2705,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fn=s.getFunction=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils"),r=e("../errors"),i=e("./fixed-bytes"),o=(0,a.coerce)((0,a.object)({address:n.StrictHexStruct,selector:n.StrictHexStruct}),(0,a.union)([n.StrictHexStruct,(0,a.instance)(Uint8Array)]),e=>{const t=(0,n.createBytes)(e);return(0,n.assert)(24===t.length,new r.ParserError(`Invalid Solidity function. Expected function to be 24 bytes long, but received ${t.length} bytes.`)),{address:(0,n.bytesToHex)(t.subarray(0,20)),selector:(0,n.bytesToHex)(t.subarray(20,24))}});s.getFunction=e=>{const t=(0,a.create)(e,o);return(0,n.concatBytes)([(0,n.hexToBytes)(t.address),(0,n.hexToBytes)(t.selector)])},s.fn={isDynamic:!1,isType:e=>"function"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:a,tight:n}){const r=(0,s.getFunction)(t);return i.fixedBytes.encode({type:"bytes24",buffer:e,value:r,packed:a,tight:n})},decode:({value:e})=>({address:(0,n.bytesToHex)(e.slice(0,20)),selector:(0,n.bytesToHex)(e.slice(20,24))})}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/function.js"}],[1064,{"./address":1058,"./array":1059,"./bool":1060,"./bytes":1061,"./fixed-bytes":1062,"./function":1063,"./number":1065,"./parser":1066,"./string":1067,"./tuple":1068},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./address"),s),n(e("./array"),s),n(e("./bool"),s),n(e("./bytes"),s),n(e("./fixed-bytes"),s),n(e("./function"),s),n(e("./number"),s),n(e("./parser"),s),n(e("./string"),s),n(e("./tuple"),s)}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/index.js"}],[1065,{"../errors":1054,"../utils":1072,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.number=s.getBigInt=s.assertNumberLength=s.getLength=s.isSigned=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../utils"),i=/^u?int(?<length>[0-9]*)?$/u;s.isSigned=e=>!e.startsWith("u");s.getLength=e=>{if("int"===e||"uint"===e)return 256;const t=e.match(i);(0,a.assert)(t?.groups?.length,new n.ParserError(`Invalid number type. Expected a number type, but received "${e}".`));const s=parseInt(t.groups.length,10);return(0,a.assert)(s>=8&&s<=256,new n.ParserError(`Invalid number length. Expected a number between 8 and 256, but received "${e}".`)),(0,a.assert)(s%8==0,new n.ParserError(`Invalid number length. Expected a multiple of 8, but received "${e}".`)),s};s.assertNumberLength=(e,t)=>{const r=(0,s.getLength)(t),i=BigInt(2)**BigInt(r-((0,s.isSigned)(t)?1:0))-BigInt(1);(0,s.isSigned)(t)?(0,a.assert)(e>=-(i+BigInt(1))&&e<=i,new n.ParserError(`Number "${e}" is out of range for type "${t}".`)):(0,a.assert)(e<=i,new n.ParserError(`Number "${e}" is out of range for type "${t}".`))};s.getBigInt=e=>{try{return(0,a.createBigInt)(e)}catch{throw new n.ParserError(`Invalid number. Expected a valid number value, but received "${e}".`)}},s.number={isDynamic:!1,isType:e=>i.test(e),getByteLength:()=>32,encode({type:e,buffer:t,value:n,packed:i}){const o=(0,s.getBigInt)(n);if((0,s.assertNumberLength)(o,e),(0,s.isSigned)(e)){if(i){const n=(0,s.getLength)(e)/8;return(0,a.concatBytes)([t,(0,a.signedBigIntToBytes)(o,n)])}return(0,a.concatBytes)([t,(0,r.padStart)((0,a.signedBigIntToBytes)(o,32))])}if(i){const n=(0,s.getLength)(e)/8;return(0,a.concatBytes)([t,(0,r.padStart)((0,a.bigIntToBytes)(o),n)])}return(0,a.concatBytes)([t,(0,r.padStart)((0,a.bigIntToBytes)(o))])},decode({type:e,value:t}){const n=t.subarray(0,32);if((0,s.isSigned)(e)){const t=(0,a.bytesToSignedBigInt)(n);return(0,s.assertNumberLength)(t,e),t}const r=(0,a.bytesToBigInt)(n);return(0,s.assertNumberLength)(r,e),r}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/number.js"}],[1066,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/parser.js"}],[1067,{"./bytes":1061,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.string=void 0;const a=e("@metamask/utils"),n=e("./bytes");s.string={isDynamic:!0,isType:e=>"string"===e,getByteLength:()=>32,encode:({buffer:e,value:t,packed:s,tight:r})=>n.bytes.encode({type:"bytes",buffer:e,value:(0,a.stringToBytes)(t),packed:s,tight:r}),decode:e=>(0,a.bytesToString)(n.bytes.decode(e))}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/string.js"}],[1068,{"../errors":1054,"../packer":1057,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.tuple=s.getTupleElements=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../packer"),i=/^\((.+)\)$/u;s.getTupleElements=e=>{(0,a.assert)(e.startsWith("(")&&e.endsWith(")"),new n.ParserError(`Invalid tuple type. Expected tuple type, but received "${e}".`));const t=[];let s="",r=0;for(let a=1;a<e.length-1;a++){const n=e[a];","===n&&0===r?(t.push(s.trim()),s=""):(s+=n,"("===n?r+=1:")"===n&&(r-=1))}return s.trim()&&t.push(s.trim()),t},s.tuple={isDynamic:e=>(0,s.getTupleElements)(e).some(e=>{const t=(0,r.getParser)(e);return(0,r.isDynamicParser)(t,e)}),isType:e=>(e=>i.test(e))(e),getByteLength(e){if((0,r.isDynamicParser)(this,e))return 32;return(0,s.getTupleElements)(e).reduce((e,t)=>e+(0,r.getParser)(t).getByteLength(t),0)},encode({type:e,buffer:t,value:a,packed:n,tight:i}){const o=(0,s.getTupleElements)(e);return(0,r.pack)({types:o,values:a,byteArray:t,packed:n,tight:i})},decode({type:e,value:t,skip:a}){const n=(0,s.getTupleElements)(e);return a(this.getByteLength(e)-32),(0,r.unpack)(n,t)}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/tuple.js"}],[1069,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/types/abi.js"}],[1070,{"./abi":1069},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./abi"),s)}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/types/index.js"}],[1071,{"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.padEnd=s.padStart=s.set=void 0;const a=e("@metamask/utils");s.set=(e,t,s)=>(0,a.concatBytes)([e.subarray(0,s),t,e.subarray(s+t.length)]);s.padStart=(e,t=32)=>{const s=new Uint8Array(Math.max(t-e.length,0)).fill(0);return(0,a.concatBytes)([s,e])};s.padEnd=(e,t=32)=>{const s=new Uint8Array(Math.max(t-e.length,0)).fill(0);return(0,a.concatBytes)([e,s])}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/utils/buffer.js"}],[1072,{"./buffer":1071},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./buffer"),s)}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/utils/index.js"}],[1073,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){function a(e){return"mnemonic"===e.options.entropy?.type}Object.defineProperty(s,"__esModule",{value:!0}),s.isBip44Account=a,s.assertIsBip44Account=function(e){if(!a(e))throw new Error("Account is not BIP-44 compatible")}}}},{package:"@metamask/account-api",file:"node_modules/@metamask/account-api/dist/api/bip44.cjs"}],[1074,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a;function n(e,t){return`${e}/${t}`}function r(e){const t=s.ACCOUNT_GROUP_ID_REGEX.exec(e);if(!t?.groups)throw new Error(`Invalid account group ID: "${e}"`);return{wallet:{id:t.groups.walletId,type:t.groups.walletType,subId:t.groups.walletSubId},subId:t.groups.groupSubId}}Object.defineProperty(s,"__esModule",{value:!0}),s.ACCOUNT_GROUP_ID_REGEX=s.AccountGroupType=s.DEFAULT_ACCOUNT_GROUP_UNIQUE_ID=void 0,s.toAccountGroupId=n,s.toDefaultAccountGroupId=function(e){return n(e,s.DEFAULT_ACCOUNT_GROUP_UNIQUE_ID)},s.isAccountGroupId=function(e){return s.ACCOUNT_GROUP_ID_REGEX.test(e)},s.parseAccountGroupId=r,s.stripAccountWalletId=function(e){return r(e).subId},s.DEFAULT_ACCOUNT_GROUP_UNIQUE_ID="default",function(e){e.MultichainAccount="multichain-account",e.SingleAccount="single-account"}(a||(s.AccountGroupType=a={})),s.ACCOUNT_GROUP_ID_REGEX=/^(?<walletId>(?<walletType>entropy|snap|keyring):(?<walletSubId>.+))\/(?<groupSubId>[^/]+)$/u}}},{package:"@metamask/account-api",file:"node_modules/@metamask/account-api/dist/api/group.cjs"}],[1075,{"./bip44.cjs":1073,"./group.cjs":1074,"./multichain/index.cjs":1079,"./selector.cjs":1081,"./wallet.cjs":1082},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./bip44.cjs"),s),n(e("./group.cjs"),s),n(e("./wallet.cjs"),s),n(e("./selector.cjs"),s),n(e("./multichain/index.cjs"),s)}}},{package:"@metamask/account-api",file:"node_modules/@metamask/account-api/dist/api/index.cjs"}],[1076,{"./utils.cjs":1077},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./utils.cjs"),s)}}},{package:"@metamask/account-api",file:"node_modules/@metamask/account-api/dist/api/internal/index.cjs"}],[1077,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.areBothEmpty=function(e,t){return 0===e.length&&0===t.length}}}},{package:"@metamask/account-api",file:"node_modules/@metamask/account-api/dist/api/internal/utils.cjs"}],[1078,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){function a(e){const t=s.MULTICHAIN_ACCOUNT_GROUP_ID_REGEX.exec(e);if(!t?.groups)throw new Error(`Invalid multichain account group ID: "${e}"`);return{wallet:{id:t.groups.walletId,type:t.groups.walletType,subId:t.groups.walletSubId},groupIndex:Number(t.groups.groupIndex)}}Object.defineProperty(s,"__esModule",{value:!0}),s.MULTICHAIN_ACCOUNT_GROUP_ID_REGEX=void 0,s.toMultichainAccountGroupId=function(e,t){return`${e}/${t}`},s.isMultichainAccountGroupId=function(e){return s.MULTICHAIN_ACCOUNT_GROUP_ID_REGEX.test(e)},s.parseMultichainAccountGroupId=a,s.getGroupIndexFromMultichainAccountGroupId=function(e){return a(e).groupIndex},s.MULTICHAIN_ACCOUNT_GROUP_ID_REGEX=/^(?<walletId>(?<walletType>entropy):(?<walletSubId>.+))\/(?<groupIndex>[0-9]+)$/u}}},{package:"@metamask/account-api",file:"node_modules/@metamask/account-api/dist/api/multichain/group.cjs"}],[1079,{"./group.cjs":1078,"./wallet.cjs":1080},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./group.cjs"),s),n(e("./wallet.cjs"),s)}}},{package:"@metamask/account-api",file:"node_modules/@metamask/account-api/dist/api/multichain/index.cjs"}],[1080,{"../wallet.cjs":1082},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MULTICHAIN_ACCOUNT_WALLET_ID_REGEX=void 0,s.toMultichainAccountWalletId=function(e){return`${a.AccountWalletType.Entropy}:${e}`},s.isMultichainAccountWalletId=function(e){return s.MULTICHAIN_ACCOUNT_WALLET_ID_REGEX.test(e)},s.parseMultichainAccountWalletId=function(e){const t=s.MULTICHAIN_ACCOUNT_WALLET_ID_REGEX.exec(e);if(!t?.groups)throw new Error(`Invalid multichain account wallet ID: "${e}"`);return{type:t.groups.walletType,subId:t.groups.walletSubId}};const a=e("../wallet.cjs");s.MULTICHAIN_ACCOUNT_WALLET_ID_REGEX=/^(?<walletId>(?<walletType>entropy):(?<walletSubId>.+))$/u}}},{package:"@metamask/account-api",file:"node_modules/@metamask/account-api/dist/api/multichain/wallet.cjs"}],[1081,{"./internal/index.cjs":1076,"@metamask/keyring-utils":2040},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.selectOne=function(e,t){const s=r(e,t);if(s.length>1)throw new Error(`Too many account candidates, expected 1, got: ${s.length}`);if(0===s.length)return undefined;return s[0]},s.select=r;const a=e("@metamask/keyring-utils"),n=e("./internal/index.cjs");function r(e,t){return e.filter(e=>{let s=!0;return t.id&&s&&(s=e.id===t.id),t.address&&s&&(s=e.address===t.address),t.type&&s&&(s=e.type===t.type),t.methods!==undefined&&s&&(s=(0,n.areBothEmpty)(t.methods,e.methods)||t.methods.some(t=>e.methods.includes(t))),t.scopes!==undefined&&s&&(s=(0,n.areBothEmpty)(t.scopes,e.scopes)||t.scopes.some(t=>(0,a.isScopeEqualToAny)(t,e.scopes))),s})}}}},{package:"@metamask/account-api",file:"node_modules/@metamask/account-api/dist/api/selector.cjs"}],[1082,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a;function n(e){const t=s.ACCOUNT_WALLET_ID_REGEX.exec(e);if(!t?.groups)throw new Error(`Invalid account wallet ID: "${e}"`);return{type:t.groups.walletType,subId:t.groups.walletSubId}}Object.defineProperty(s,"__esModule",{value:!0}),s.ACCOUNT_WALLET_ID_REGEX=s.AccountWalletType=void 0,s.toAccountWalletId=function(e,t){return`${e}:${t}`},s.isAccountWalletId=function(e){return s.ACCOUNT_WALLET_ID_REGEX.test(e)},s.parseAccountWalletId=n,s.stripAccountWalletType=function(e){return n(e).subId},function(e){e.Entropy="entropy",e.Keyring="keyring",e.Snap="snap"}(a||(s.AccountWalletType=a={})),s.ACCOUNT_WALLET_ID_REGEX=/^(?<walletType>entropy|keyring|snap):(?<walletSubId>.+)$/u}}},{package:"@metamask/account-api",file:"node_modules/@metamask/account-api/dist/api/wallet.cjs"}],[1083,{"./api/index.cjs":1075},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./api/index.cjs"),s)}}},{package:"@metamask/account-api",file:"node_modules/@metamask/account-api/dist/index.cjs"}],[1084,{"./backup-and-sync/analytics/index.cjs":1085,"./backup-and-sync/service/index.cjs":1091,"./group.cjs":1106,"./logger.cjs":1108,"./rules/entropy.cjs":1110,"./rules/keyring.cjs":1111,"./rules/snap.cjs":1112,"@metamask/account-api":1083,"@metamask/base-controller":1222,"@metamask/keyring-api":1994,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g,f,y,w,b,k,S,A,T,v,E,C,I,_,P,R,x,N,M,D,O=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},j=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.AccountTreeController=s.getDefaultAccountTreeControllerState=s.controllerName=void 0;const B=e("@metamask/account-api"),L=e("@metamask/base-controller"),F=e("@metamask/keyring-api"),$=e("@metamask/utils"),U=e("./backup-and-sync/analytics/index.cjs"),G=e("./backup-and-sync/service/index.cjs"),W=e("./group.cjs"),H=e("./logger.cjs"),q=e("./rules/entropy.cjs"),Y=e("./rules/keyring.cjs"),V=e("./rules/snap.cjs");s.controllerName="AccountTreeController";const K={accountTree:{includeInStateLogs:!0,persist:!1,anonymous:!1,usedInUi:!0},isAccountTreeSyncingInProgress:{includeInStateLogs:!1,persist:!1,anonymous:!1,usedInUi:!0},hasAccountTreeSyncingSyncedAtLeastOnce:{includeInStateLogs:!0,persist:!0,anonymous:!1,usedInUi:!0},accountGroupsMetadata:{includeInStateLogs:!0,persist:!0,anonymous:!1,usedInUi:!0},accountWalletsMetadata:{includeInStateLogs:!0,persist:!0,anonymous:!1,usedInUi:!0}};function J(){return{accountTree:{wallets:{},selectedAccountGroup:""},isAccountTreeSyncingInProgress:!1,hasAccountTreeSyncingSyncedAtLeastOnce:!1,accountGroupsMetadata:{},accountWalletsMetadata:{}}}s.getDefaultAccountTreeControllerState=J;class z extends L.BaseController{constructor({messenger:e,state:t,config:d}){super({messenger:e,name:s.controllerName,metadata:K,state:{accountTree:{wallets:{},selectedAccountGroup:""},isAccountTreeSyncingInProgress:!1,hasAccountTreeSyncingSyncedAtLeastOnce:!1,accountGroupsMetadata:{},accountWalletsMetadata:{},...t}}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),l.set(this,void 0),u.set(this,void 0),O(this,u,!1,"f"),O(this,n,new Map,"f"),O(this,r,new Map,"f"),O(this,o,[new q.EntropyRule(this.messagingSystem),new V.SnapRule(this.messagingSystem),new Y.KeyringRule(this.messagingSystem)],"f"),O(this,c,d?.trace??U.traceFallback,"f"),O(this,l,{emitAnalyticsEventFn:e=>d?.backupAndSync?.onBackupAndSyncEvent&&d.backupAndSync.onBackupAndSyncEvent((0,U.formatAnalyticsEvent)(e))},"f"),O(this,i,new G.BackupAndSyncService(j(this,a,"m",D).call(this)),"f"),this.messagingSystem.subscribe("AccountsController:accountAdded",e=>{j(this,a,"m",b).call(this,e)}),this.messagingSystem.subscribe("AccountsController:accountRemoved",e=>{j(this,a,"m",k).call(this,e)}),this.messagingSystem.subscribe("AccountsController:selectedAccountChange",e=>{j(this,a,"m",_).call(this,e)}),this.messagingSystem.subscribe("UserStorageController:stateChange",e=>{j(this,i,"f").handleUserStorageStateChange(e)}),this.messagingSystem.subscribe("MultichainAccountService:walletStatusChange",(e,t)=>{j(this,a,"m",P).call(this,e,t)}),j(this,a,"m",M).call(this)}init(){if(j(this,u,"f"))return;(0,H.projectLogger)("Initializing...");const e={};j(this,n,"f").clear(),j(this,r,"f").clear();const t=this.state.accountTree.selectedAccountGroup,i=j(this,a,"m",T).call(this).sort((e,t)=>e.metadata.importTime-t.metadata.importTime);for(const t of i)j(this,a,"m",A).call(this,e,t);let o=!1;this.update(s=>{s.accountTree.wallets=e;for(const e of Object.values(s.accountTree.wallets)){j(this,a,"m",p).call(this,s,e.id);let n=1;for(const r of Object.values(e.groups))j(this,a,"m",w).call(this,s,e.id,r.id,{allowComputedName:!0,nextNaturalNameIndex:n}),r.id===t&&(o=!0),n+=1}o&&""!==t||(s.accountTree.selectedAccountGroup=j(this,a,"m",I).call(this,e))}),t!==this.state.accountTree.selectedAccountGroup&&((0,H.projectLogger)(`Selected (initial) group is: [${this.state.accountTree.selectedAccountGroup}]`),this.messagingSystem.publish(`${s.controllerName}:selectedAccountGroupChange`,this.state.accountTree.selectedAccountGroup,t)),(0,H.projectLogger)("Initialized!"),O(this,u,!0,"f")}reinit(){(0,H.projectLogger)("Re-initializing..."),O(this,u,!1,"f"),this.init()}getAccountWalletObject(e){const t=this.state.accountTree.wallets[e];return t||undefined}getAccountWalletObjects(){return Object.values(this.state.accountTree.wallets)}getAccountsFromSelectedAccountGroup(e){const t=this.getSelectedAccountGroup();if(!t)return[];const s=this.getAccountGroupObject(t);if(!s)return[];const a=[];for(const e of s.accounts){const t=this.messagingSystem.call("AccountsController:getAccount",e);t&&a.push(t)}return e?(0,B.select)(a,e):a}getAccountGroupObject(e){const t=j(this,r,"f").get(e);if(!t)return undefined;const s=this.getAccountWalletObject(t);return s?.groups[e]}getSelectedAccountGroup(){return this.state.accountTree.selectedAccountGroup}setSelectedAccountGroup(e){const t=this.state.accountTree.selectedAccountGroup;if(t===e)return;const n=j(this,a,"m",x).call(this,e);if(!n)throw new Error(`No accounts found in group: ${e}`);this.update(t=>{t.accountTree.selectedAccountGroup=e}),(0,H.projectLogger)(`Selected group is now: [${this.state.accountTree.selectedAccountGroup}]`),this.messagingSystem.publish(`${s.controllerName}:selectedAccountGroupChange`,e,t),this.messagingSystem.call("AccountsController:setSelectedAccount",n)}resolveNameConflict(e,t,s){let a=2,n=`${s} (${a})`;for(;!(0,W.isAccountGroupNameUniqueFromWallet)(e,t,n);)a+=1,n=`${s} (${a})`;return n}setAccountGroupName(e,t,s=!1){j(this,a,"m",v).call(this,e);const n=j(this,r,"f").get(e);(0,$.assert)(n,`Account group with ID "${e}" not found in tree`);const o=this.state.accountTree.wallets[n];let c=t;s&&!(0,W.isAccountGroupNameUniqueFromWallet)(o,e,t)?c=this.resolveNameConflict(o,e,t):j(this,a,"m",C).call(this,e,c),(0,H.projectLogger)(`[${e}] Set new name to: "${c}" (auto handle conflict: ${s})`),this.update(t=>{t.accountGroupsMetadata[e]||(t.accountGroupsMetadata[e]={}),t.accountGroupsMetadata[e].name={value:c,lastUpdatedAt:Date.now()},t.accountTree.wallets[n].groups[e].metadata.name=c}),o.type===B.AccountWalletType.Entropy&&j(this,i,"f").enqueueSingleGroupSync(e)}setAccountWalletName(e,t){j(this,a,"m",E).call(this,e),this.update(s=>{var a;(a=s.accountWalletsMetadata)[e]??(a[e]={}),s.accountWalletsMetadata[e].name={value:t,lastUpdatedAt:Date.now()},s.accountTree.wallets[e].metadata.name=t}),this.state.accountTree.wallets[e].type===B.AccountWalletType.Entropy&&j(this,i,"f").enqueueSingleWalletSync(e)}setAccountGroupPinned(e,t){j(this,a,"m",v).call(this,e);const s=j(this,r,"f").get(e);this.update(a=>{a.accountGroupsMetadata[e]||(a.accountGroupsMetadata[e]={}),a.accountGroupsMetadata[e].pinned={value:t,lastUpdatedAt:Date.now()},s&&(a.accountTree.wallets[s].groups[e].metadata.pinned=t)}),s&&this.state.accountTree.wallets[s].type===B.AccountWalletType.Entropy&&j(this,i,"f").enqueueSingleGroupSync(e)}setAccountGroupHidden(e,t){j(this,a,"m",v).call(this,e);const s=j(this,r,"f").get(e);this.update(a=>{a.accountGroupsMetadata[e]||(a.accountGroupsMetadata[e]={}),a.accountGroupsMetadata[e].hidden={value:t,lastUpdatedAt:Date.now()},s&&(a.accountTree.wallets[s].groups[e].metadata.hidden=t)}),s&&this.state.accountTree.wallets[s].type===B.AccountWalletType.Entropy&&j(this,i,"f").enqueueSingleGroupSync(e)}clearState(){(0,H.projectLogger)("Clearing state"),this.update(()=>({accountTree:{wallets:{},selectedAccountGroup:""},isAccountTreeSyncingInProgress:!1,hasAccountTreeSyncingSyncedAtLeastOnce:!1,accountGroupsMetadata:{},accountWalletsMetadata:{}})),j(this,i,"f").clearState(),O(this,u,!1,"f")}async syncWithUserStorage(){return j(this,i,"f").performFullSync()}async syncWithUserStorageAtLeastOnce(){return j(this,i,"f").performFullSyncAtLeastOnce()}}s.AccountTreeController=z,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,l=new WeakMap,u=new WeakMap,a=new WeakSet,d=function(){return j(this,o,"f")[0]},m=function(){return j(this,o,"f")[1]},h=function(){return j(this,o,"f")[2]},p=function(e,t){const s=e.accountTree.wallets[t],n=e.accountWalletsMetadata[t];n?.name!==undefined?s.metadata.name=n.name.value:s.metadata.name||(s.type===B.AccountWalletType.Entropy?s.metadata.name=j(this,a,"m",d).call(this).getDefaultAccountWalletName(s):s.type===B.AccountWalletType.Snap?s.metadata.name=j(this,a,"m",m).call(this).getDefaultAccountWalletName(s):s.metadata.name=j(this,a,"m",h).call(this).getDefaultAccountWalletName(s),(0,H.projectLogger)(`[${s.id}] Set default name to: "${s.metadata.name}"`))},g=function(e){switch(e.type){case B.AccountWalletType.Entropy:return j(this,a,"m",d).call(this);case B.AccountWalletType.Snap:return j(this,a,"m",m).call(this);default:return j(this,a,"m",h).call(this)}},f=function(e,t){let s="";for(const e of t.accounts){const t=this.messagingSystem.call("AccountsController:getAccount",e);if(t&&t.metadata.name.length&&(s||(s=t.metadata.name),(0,F.isEvmAccountType)(t.type))){s=t.metadata.name;break}}return s.length&&!(0,W.isAccountGroupNameUniqueFromWallet)(e,t.id,s)&&(s=this.resolveNameConflict(e,t.id,s)),s},y=function(e,t,s,n){const r=j(this,a,"m",g).call(this,t).getDefaultAccountGroupPrefix(t);let i=0;for(const{id:a}of Object.values(t.groups)){if(a===s.id)continue;const t=(e.accountGroupsMetadata[a]?.name?.value??"").match(/account\s+(\d+)$/iu);if(t){const e=parseInt(t[1],10);e>i&&(i=e)}}let o,c=Math.max(i+1,n??Object.keys(t.groups).length),l="";do{l=`${r} ${c}`,o=!(0,W.isAccountGroupNameUniqueFromWallet)(t,s.id,l),o&&(c+=1)}while(o);return l},w=function(e,t,s,{allowComputedName:n,nextNaturalNameIndex:r}={}){var i;const o=e.accountTree.wallets[t],c=o.groups[s],l=e.accountGroupsMetadata[c.id];if(l?.name!==undefined)e.accountTree.wallets[t].groups[s].metadata.name=l.name.value;else if(!c.metadata.name){let l="";n&&(l=j(this,a,"m",f).call(this,o,c)),l.length||(l=j(this,a,"m",y).call(this,e,o,c,r)),e.accountTree.wallets[t].groups[s].metadata.name=l,(0,H.projectLogger)(`[${c.id}] Set default name to: "${c.metadata.name}"`),(i=e.accountGroupsMetadata)[s]??(i[s]={}),e.accountGroupsMetadata[s].name={value:l,lastUpdatedAt:0}}l?.pinned?.value!==undefined&&(c.metadata.pinned=l.pinned.value),l?.hidden?.value!==undefined&&(c.metadata.hidden=l.hidden.value)},b=function(e){j(this,u,"f")&&(j(this,n,"f").has(e.id)||(this.update(t=>{j(this,a,"m",A).call(this,t.accountTree.wallets,e);const s=j(this,n,"f").get(e.id);if(s){const{walletId:e,groupId:n}=s;t.accountTree.wallets[e]&&(j(this,a,"m",p).call(this,t,e),j(this,a,"m",w).call(this,t,e,n))}}),this.messagingSystem.publish(`${s.controllerName}:accountTreeChange`,this.state.accountTree)))},k=function(e){if(!j(this,u,"f"))return;const t=j(this,n,"f").get(e);if(t){const{walletId:r,groupId:i}=t,o=this.state.accountTree.selectedAccountGroup;let c=!1;this.update(t=>{const s=t.accountTree.wallets[r]?.groups[i]?.accounts;if(s){const n=s.indexOf(e);if(-1!==n&&(s.splice(n,1),t.accountTree.selectedAccountGroup===i&&0===s.length)){const e=j(this,a,"m",N).call(this,t.accountTree.wallets);t.accountTree.selectedAccountGroup=e,c=e!==o}0===s.length&&j(this,a,"m",S).call(this,t,r,i)}}),this.messagingSystem.publish(`${s.controllerName}:accountTreeChange`,this.state.accountTree),c&&this.messagingSystem.publish(`${s.controllerName}:selectedAccountGroupChange`,this.state.accountTree.selectedAccountGroup,o),j(this,n,"f").delete(e)}},S=function(e,t,s){const{wallets:a}=e.accountTree;return delete a[t].groups[s],j(this,r,"f").delete(s),delete e.accountGroupsMetadata[s],0===Object.keys(a[t].groups).length&&(delete a[t],delete e.accountWalletsMetadata[t]),e},A=function(e,t){const s=j(this,a,"m",d).call(this).match(t)??j(this,a,"m",m).call(this).match(t)??j(this,a,"m",h).call(this).match(t),o=s.wallet.id;let c=e[o];c||((0,H.projectLogger)(`[${o}] Added as new wallet`),e[o]={...s.wallet,status:"ready",groups:{},metadata:{name:"",...s.wallet.metadata}},c=e[o],c.type===B.AccountWalletType.Entropy&&j(this,i,"f").enqueueSingleWalletSync(o));const l=s.group.id;let u=c.groups[l];const{type:p,id:g}=t,f=W.ACCOUNT_TYPE_TO_SORT_ORDER[p];if(u){u.accounts.push(g);const{accounts:e}=u;e.sort((e,t)=>{const s=e===g?f:j(this,n,"f").get(e)?.sortOrder,a=t===g?f:j(this,n,"f").get(t)?.sortOrder;return(s??W.MAX_SORT_ORDER)-(a??W.MAX_SORT_ORDER)})}else(0,H.projectLogger)(`[${o}] Add new group: [${l}]`),c.groups[l]={...s.group,accounts:[g],metadata:{name:"",pinned:!1,hidden:!1,...s.group.metadata}},u=c.groups[l],j(this,r,"f").set(l,o),c.type===B.AccountWalletType.Entropy&&j(this,i,"f").enqueueSingleGroupSync(l);(0,H.projectLogger)(`[${l}] Add new account: { id: "${t.id}", type: "${t.type}", address: "${t.address}"`),j(this,n,"f").set(t.id,{walletId:c.id,groupId:u.id,sortOrder:f})},T=function(){return this.messagingSystem.call("AccountsController:listMultichainAccounts")},v=function(e){if(!j(this,r,"f").has(e))throw new Error(`Account group with ID "${e}" not found in tree`)},E=function(e){if(!Boolean(this.state.accountTree.wallets[e]))throw new Error(`Account wallet with ID "${e}" not found in tree`)},C=function(e,t){if(!(0,W.isAccountGroupNameUnique)(this.state,e,t))throw new Error("Account group name already exists")},I=function(e){const t=this.messagingSystem.call("AccountsController:getSelectedMultichainAccount");if(t&&t.id){const e=j(this,n,"f").get(t.id);if(e){const{groupId:t}=e;return t}}return j(this,a,"m",N).call(this,e)},_=function(e){const t=j(this,n,"f").get(e.id);if(!t)return;const{groupId:a}=t,r=this.state.accountTree.selectedAccountGroup;r!==a&&(this.update(e=>{e.accountTree.selectedAccountGroup=a}),this.messagingSystem.publish(`${s.controllerName}:selectedAccountGroupChange`,a,r))},P=function(e,t){this.update(s=>{const a=s.accountTree.wallets[e];a&&(a.status=t)})},R=function(e){const t=Object.values(this.state.accountTree.wallets).find(t=>t.groups[e]!==undefined);return t?.groups[e]},x=function(e){const t=j(this,a,"m",R).call(this,e);if(t){let e;for(const s of t.accounts){const t=this.messagingSystem.call("AccountsController:getAccount",s);if(e||(e=s),t&&(0,F.isEvmAccountType)(t.type))return t.id}return e}return undefined},N=function(e){let t="";for(const s of Object.values(e))for(const e of Object.values(s.groups)){""===t&&e.accounts.length>0&&(t=e.id);for(const t of e.accounts){const s=this.messagingSystem.call("AccountsController:getAccount",t);if(s&&(0,F.isEvmAccountType)(s.type))return e.id}}return t},M=function(){this.messagingSystem.registerActionHandler(`${s.controllerName}:getSelectedAccountGroup`,this.getSelectedAccountGroup.bind(this)),this.messagingSystem.registerActionHandler(`${s.controllerName}:setSelectedAccountGroup`,this.setSelectedAccountGroup.bind(this)),this.messagingSystem.registerActionHandler(`${s.controllerName}:getAccountsFromSelectedAccountGroup`,this.getAccountsFromSelectedAccountGroup.bind(this)),this.messagingSystem.registerActionHandler(`${s.controllerName}:setAccountWalletName`,this.setAccountWalletName.bind(this)),this.messagingSystem.registerActionHandler(`${s.controllerName}:setAccountGroupName`,this.setAccountGroupName.bind(this)),this.messagingSystem.registerActionHandler(`${s.controllerName}:setAccountGroupPinned`,this.setAccountGroupPinned.bind(this)),this.messagingSystem.registerActionHandler(`${s.controllerName}:setAccountGroupHidden`,this.setAccountGroupHidden.bind(this))},D=function(){return{...j(this,l,"f"),controller:this,messenger:this.messagingSystem,controllerStateUpdateFn:this.update.bind(this),traceFn:j(this,c,"f").bind(this),groupIdToWalletId:j(this,r,"f")}}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/AccountTreeController.cjs"}],[1085,{"./segment.cjs":1086,"./traces.cjs":1087},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./segment.cjs"),s),n(e("./traces.cjs"),s)}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/analytics/index.cjs"}],[1086,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.formatAnalyticsEvent=s.BackupAndSyncAnalyticsEvent=void 0,s.BackupAndSyncAnalyticsEvent={WalletRenamed:"wallet_renamed",GroupAdded:"group_added",GroupRenamed:"group_renamed",GroupHiddenStatusChanged:"group_hidden_status_changed",GroupPinnedStatusChanged:"group_pinned_status_changed",LegacySyncingDone:"legacy_syncing_done",LegacyGroupAddedFromAccount:"legacy_group_added_from_account",LegacyGroupRenamed:"legacy_group_renamed"};s.formatAnalyticsEvent=({action:e,profileId:t,additionalDescription:s})=>({feature_name:"Multichain Account Syncing",action:e,profile_id:t,...s!==undefined?{additional_description:s}:{}})}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/analytics/segment.cjs"}],[1087,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.traceFallback=s.TraceName=void 0,s.TraceName={AccountSyncFull:"Multichain Account Syncing - Full"};s.traceFallback=async(e,t)=>t?await Promise.resolve(t()):undefined}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/analytics/traces.cjs"}],[1088,{"./utils.cjs":1089},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./utils.cjs"),s)}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/authentication/index.cjs"}],[1089,{"../../logger.cjs":1108},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getProfileId=void 0;const a=e("../../logger.cjs");s.getProfileId=async(e,t)=>{try{return(await e.messenger.call("AuthenticationController:getSessionProfile",t)).profileId}catch(e){return(0,a.backupAndSyncLogger)("Failed to retrieve profile ID:",e),undefined}}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/authentication/utils.cjs"}],[1090,{"../../logger.cjs":1108,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},i=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s};Object.defineProperty(s,"__esModule",{value:!0}),s.AtomicSyncQueue=void 0;const o=e("@metamask/utils"),c=e("../../logger.cjs");s.AtomicSyncQueue=class{constructor(){a.set(this,[]),n.set(this,!1)}clearAndEnqueue(e){return this.clear(),this.enqueue(e)}enqueue(e){const{promise:t,resolve:s,reject:n}=(0,o.createDeferredPromise)(),i={execute:async()=>{try{await e(),s?.()}catch(e){n?.(e)}}};return r(this,a,"f").push(i),setTimeout(()=>{this.process().catch(e=>{(0,c.backupAndSyncLogger)("Error processing atomic sync queue:",e)})},0),t}async process(){if(!r(this,n,"f")&&0!==r(this,a,"f").length){i(this,n,!0,"f");try{for(;r(this,a,"f").length>0;){const e=r(this,a,"f").shift();if(!e)break;await e.execute()}}finally{i(this,n,!1,"f")}}}clear(){r(this,a,"f").length=0}get size(){return r(this,a,"f").length}get isProcessing(){return r(this,n,"f")}},a=new WeakMap,n=new WeakMap}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/service/atomic-sync-queue.cjs"}],[1091,{"../../logger.cjs":1108,"../analytics/index.cjs":1085,"../authentication/index.cjs":1088,"../syncing/index.cjs":1093,"../user-storage/index.cjs":1100,"../utils/index.cjs":1105,"./atomic-sync-queue.cjs":1090,"@metamask/account-api":1083},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},p=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.BackupAndSyncService=void 0;const g=e("@metamask/account-api"),f=e("./atomic-sync-queue.cjs"),y=e("../../logger.cjs"),w=e("../analytics/index.cjs"),b=e("../authentication/index.cjs"),k=e("../syncing/index.cjs"),S=e("../user-storage/index.cjs"),A=e("../utils/index.cjs");s.BackupAndSyncService=class{constructor(e){a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,null),o.set(this,null),h(this,n,e,"f"),h(this,r,new f.AtomicSyncQueue,"f")}get isInProgress(){return p(this,n,"f").controller.state.isAccountTreeSyncingInProgress}get hasSyncedAtLeastOnce(){return p(this,n,"f").controller.state.hasAccountTreeSyncingSyncedAtLeastOnce}get isBackupAndSyncEnabled(){const e=p(this,n,"f").messenger.call("UserStorageController:getState"),{isAccountSyncingEnabled:t,isBackupAndSyncEnabled:s}=e;return s&&t}clearState(){p(this,r,"f").clear(),h(this,i,null,"f"),h(this,o,null,"f")}handleUserStorageStateChange(e){e.isAccountSyncingEnabled&&e.isBackupAndSyncEnabled||this.clearState()}enqueueSingleWalletSync(e){this.isBackupAndSyncEnabled&&this.hasSyncedAtLeastOnce&&p(this,r,"f").enqueue(()=>p(this,a,"m",d).call(this,e))}enqueueSingleGroupSync(e){this.isBackupAndSyncEnabled&&this.hasSyncedAtLeastOnce&&!this.isInProgress&&p(this,r,"f").enqueue(()=>p(this,a,"m",m).call(this,e))}async performFullSync(){if(!this.isBackupAndSyncEnabled)return undefined;if(p(this,i,"f"))return p(this,i,"f");const e=p(this,r,"f").clearAndEnqueue(()=>p(this,a,"m",u).call(this));return p(this,o,"f")||h(this,o,e,"f"),p(this,a,"m",l).call(this,e)}async performFullSyncAtLeastOnce(){return this.isBackupAndSyncEnabled?(p(this,o,"f")||(h(this,o,p(this,r,"f").clearAndEnqueue(()=>p(this,a,"m",u).call(this)),"f"),p(this,a,"m",l).call(this,p(this,o,"f"))),p(this,o,"f")):undefined}},n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,a=new WeakSet,c=function(e){const t=p(this,n,"f").controller.state.accountTree.wallets[e];return t?.type===g.AccountWalletType.Entropy?t:undefined},l=function(e){return h(this,i,e,"f"),e.finally(()=>{h(this,i,null,"f")}).catch(()=>{}),e},u=async function(){if(this.isInProgress)return;p(this,n,"f").controllerStateUpdateFn(e=>{e.isAccountTreeSyncingInProgress=!0});const e=async()=>{try{const e=(0,A.getLocalEntropyWallets)(p(this,n,"f"));if(!e.length)return;for(const t of e){const e=t.metadata.entropy.id;let s,a,r,i;try{s=await(0,b.getProfileId)(p(this,n,"f"),e),[a,r]=await Promise.all([(0,S.getWalletFromUserStorage)(p(this,n,"f"),e),(0,S.getAllGroupsFromUserStorage)(p(this,n,"f"),e)]),a&&a.isLegacyAccountSyncingDisabled||await(0,k.performLegacyAccountSyncing)(p(this,n,"f"),e,s)}catch(e){const s=e instanceof Error?e.message:String(e),a=`Legacy syncing failed for wallet ${t.id}: ${s}`;throw(0,y.backupAndSyncLogger)(a),new Error(a)}try{if(i=(0,A.createStateSnapshot)(p(this,n,"f")),await(0,k.syncWalletMetadata)(p(this,n,"f"),t,a,s),!r.length){await(0,S.pushGroupToUserStorageBatch)(p(this,n,"f"),(0,A.getLocalGroupsForEntropyWallet)(p(this,n,"f"),t.id),e);continue}await(0,k.createLocalGroupsFromUserStorage)(p(this,n,"f"),r,e,s),await(0,k.syncGroupsMetadata)(p(this,n,"f"),t,r,e,s)}catch(e){const s=e instanceof Error?e.message:String(e),a=`Error during multichain account syncing for wallet ${t.id}: ${s}`;(0,y.backupAndSyncLogger)(a);try{if(!i)throw new Error(`State snapshot is missing for wallet ${t.id}`);(0,A.restoreStateFromSnapshot)(p(this,n,"f"),i),(0,y.backupAndSyncLogger)(`Rolled back state changes for wallet ${t.id}`)}catch(e){(0,y.backupAndSyncLogger)(`Failed to rollback state for wallet ${t.id}:`,e instanceof Error?e.message:String(e))}continue}}}catch(e){throw(0,y.backupAndSyncLogger)("Error during multichain account syncing:",e),e}p(this,n,"f").controllerStateUpdateFn(e=>{e.hasAccountTreeSyncingSyncedAtLeastOnce=!0})};try{await p(this,n,"f").traceFn({name:w.TraceName.AccountSyncFull},e)}finally{p(this,n,"f").controllerStateUpdateFn(e=>{e.isAccountTreeSyncingInProgress=!1})}},d=async function(e){try{const t=p(this,a,"m",c).call(this,e);if(!t)return;const s=t.metadata.entropy.id,r=await(0,b.getProfileId)(p(this,n,"f"),s),i=await(0,S.getWalletFromUserStorage)(p(this,n,"f"),s);await(0,k.syncWalletMetadata)(p(this,n,"f"),t,i,r)}catch(t){throw(0,y.backupAndSyncLogger)(`Error in single wallet sync for ${e}:`,t),t}},m=async function(e){try{const t=p(this,n,"f").groupIdToWalletId.get(e);if(!t)return;const s=p(this,a,"m",c).call(this,t);if(!s)return;const r=s.groups[e];if(!r)return;const i=s.metadata.entropy.id,o=await(0,b.getProfileId)(p(this,n,"f"),i),l=await(0,S.getGroupFromUserStorage)(p(this,n,"f"),i,r.metadata.entropy.groupIndex);await(0,k.syncGroupMetadata)(p(this,n,"f"),r,l,i,o)}catch(t){throw(0,y.backupAndSyncLogger)(`Error in single group sync for ${e}:`,t),t}}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/service/index.cjs"}],[1092,{"../../logger.cjs":1108,"../analytics/index.cjs":1085,"../types.cjs":1097,"../user-storage/network-operations.cjs":1101,"../utils/index.cjs":1105,"./metadata.cjs":1095},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.syncGroupsMetadata=s.syncGroupMetadata=s.createLocalGroupsFromUserStorage=s.createMultichainAccountGroup=void 0;const a=e("./metadata.cjs"),n=e("../../logger.cjs"),r=e("../analytics/index.cjs"),i=e("../types.cjs"),o=e("../user-storage/network-operations.cjs"),c=e("../utils/index.cjs");async function l(e,t,s,o){const c=e.controller.state.accountGroupsMetadata[t.id];if(!s)return(0,n.backupAndSyncLogger)(`Group ${t.id} did not exist in user storage, pushing to user storage...`),!0;let l=!1;const u=await(0,a.compareAndSyncMetadata)({context:e,localMetadata:c?.name,userStorageMetadata:s.name,validateUserStorageValue:e=>i.UserStorageSyncedWalletGroupSchema.schema.name.schema.value.is(e),applyLocalUpdate:s=>{e.controller.setAccountGroupName(t.id,s,!0)},analytics:{action:r.BackupAndSyncAnalyticsEvent.GroupRenamed,profileId:o}});l||(l=u);const d=await(0,a.compareAndSyncMetadata)({context:e,localMetadata:c?.pinned,userStorageMetadata:s.pinned,validateUserStorageValue:e=>i.UserStorageSyncedWalletGroupSchema.schema.pinned.schema.value.is(e),applyLocalUpdate:s=>{e.controller.setAccountGroupPinned(t.id,s)},analytics:{action:r.BackupAndSyncAnalyticsEvent.GroupPinnedStatusChanged,profileId:o}});l||(l=d);const m=await(0,a.compareAndSyncMetadata)({context:e,localMetadata:c?.hidden,userStorageMetadata:s.hidden,validateUserStorageValue:e=>i.UserStorageSyncedWalletGroupSchema.schema.hidden.schema.value.is(e),applyLocalUpdate:s=>{e.controller.setAccountGroupHidden(t.id,s)},analytics:{action:r.BackupAndSyncAnalyticsEvent.GroupHiddenStatusChanged,profileId:o}});return l||(l=m),l}s.createMultichainAccountGroup=async(e,t,s,a,r)=>{try{const n=(0,c.getLocalGroupForEntropyWallet)(e,t,s);await e.messenger.call("MultichainAccountService:createMultichainAccountGroup",{entropySource:t,groupIndex:s}),n||e.emitAnalyticsEventFn({action:r,profileId:a})}catch(e){(0,n.backupAndSyncLogger)(`Failed to create group ${s} for entropy ${t}:`,e instanceof Error?e.message:String(e))}},s.createLocalGroupsFromUserStorage=async function(e,t,a,n){const i=Math.max(...t.map(e=>e.groupIndex));for(let t=0;t<=i;t++)await(0,s.createMultichainAccountGroup)(e,a,t,n,r.BackupAndSyncAnalyticsEvent.GroupAdded)},s.syncGroupMetadata=async function(e,t,s,a,n){await l(e,t,s,n)&&await(0,o.pushGroupToUserStorage)(e,t,a)},s.syncGroupsMetadata=async function(e,t,s,a,n){const r=[],i=(0,c.getLocalGroupsForEntropyWallet)(e,t.id);for(const t of i){const a=s.find(e=>e.groupIndex===t.metadata.entropy.groupIndex);await l(e,t,a,n)&&r.push(t)}r.length>0&&await(0,o.pushGroupToUserStorageBatch)(e,r,a)}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/syncing/group.cjs"}],[1093,{"./group.cjs":1092,"./legacy.cjs":1094,"./metadata.cjs":1095,"./wallet.cjs":1096},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./group.cjs"),s),n(e("./legacy.cjs"),s),n(e("./wallet.cjs"),s),n(e("./metadata.cjs"),s)}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/syncing/index.cjs"}],[1094,{"../../logger.cjs":1108,"../analytics/index.cjs":1085,"../user-storage/index.cjs":1100,"../utils/index.cjs":1105,"./group.cjs":1092,"@metamask/account-api":1083,"@metamask/accounts-controller":1114},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.performLegacyAccountSyncing=void 0;const a=e("@metamask/account-api"),n=e("@metamask/accounts-controller"),r=e("./group.cjs"),i=e("../../logger.cjs"),o=e("../analytics/index.cjs"),c=e("../user-storage/index.cjs"),l=e("../utils/index.cjs");s.performLegacyAccountSyncing=async(e,t,s)=>{const u=await(0,c.getAllLegacyUserStorageAccounts)(e,t);if(0===u.length)return(0,i.backupAndSyncLogger)("No legacy accounts, skipping legacy account syncing"),void e.emitAnalyticsEventFn({action:o.BackupAndSyncAnalyticsEvent.LegacySyncingDone,profileId:s});const d=u.length;if((0,i.backupAndSyncLogger)(`Creating ${d} account groups for legacy accounts`),d>0)for(let a=0;a<d;a++)(0,i.backupAndSyncLogger)(`Creating account group ${a} for legacy account`),await(0,r.createMultichainAccountGroup)(e,t,a,s,o.BackupAndSyncAnalyticsEvent.LegacyGroupAddedFromAccount);const m=(0,l.getLocalGroupsForEntropyWallet)(e,(0,a.toMultichainAccountWalletId)(t));for(const t of u){const{n:a,a:r}=t;if(r&&a){if(a){const t=(0,n.getUUIDFromAddressOfNormalAccount)(r),i=m.find(e=>e.accounts.includes(t));i&&(e.controller.setAccountGroupName(i.id,a,!0),e.emitAnalyticsEventFn({action:o.BackupAndSyncAnalyticsEvent.LegacyGroupRenamed,profileId:s,additionalDescription:`Renamed legacy group ${i.id} to ${a}`}))}}else(0,i.backupAndSyncLogger)(`Legacy account data is missing name or address, skipping account: ${JSON.stringify(t)}`)}e.emitAnalyticsEventFn({action:o.BackupAndSyncAnalyticsEvent.LegacySyncingDone,profileId:s})}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/syncing/legacy.cjs"}],[1095,{"fast-deep-equal":4101},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.compareAndSyncMetadata=void 0;const n=a(e("fast-deep-equal"));s.compareAndSyncMetadata=async function({context:e,localMetadata:t,userStorageMetadata:s,applyLocalUpdate:a,validateUserStorageValue:r,analytics:i}){const o=t?.value,c=t?.lastUpdatedAt,l=s?.value,u=s?.lastUpdatedAt;if((0,n.default)(o,l))return!1;const d=c!==undefined&&u!==undefined&&c<u,m=r(l);return!((d||!t)&&m)||(await a(l),i&&e.emitAnalyticsEventFn({action:i.action,profileId:i.profileId}),!1)}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/syncing/metadata.cjs"}],[1096,{"../../logger.cjs":1108,"../analytics/index.cjs":1085,"../types.cjs":1097,"../user-storage/network-operations.cjs":1101,"./metadata.cjs":1095},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.syncWalletMetadata=s.syncWalletMetadataAndCheckIfPushNeeded=void 0;const a=e("./metadata.cjs"),n=e("../../logger.cjs"),r=e("../analytics/index.cjs"),i=e("../types.cjs"),o=e("../user-storage/network-operations.cjs");async function c(e,t,s,o){const c=e.controller.state.accountWalletsMetadata[t.id];if(!s||0===Object.keys(s).length)return(0,n.backupAndSyncLogger)(`Wallet ${t.id} did not exist in user storage, pushing to user storage...`),!0;let l=!1;const u=await(0,a.compareAndSyncMetadata)({context:e,localMetadata:c?.name,userStorageMetadata:s.name,validateUserStorageValue:e=>i.UserStorageSyncedWalletSchema.schema.name.schema.value.is(e),applyLocalUpdate:s=>{e.controller.setAccountWalletName(t.id,s)},analytics:{action:r.BackupAndSyncAnalyticsEvent.WalletRenamed,profileId:o}});l||(l=u);const d=!Object.prototype.hasOwnProperty.call(s,"isLegacyAccountSyncingDisabled");return l||(l=d),l}s.syncWalletMetadataAndCheckIfPushNeeded=c,s.syncWalletMetadata=async function(e,t,s,a){await c(e,t,s,a)&&await(0,o.pushWalletToUserStorage)(e,t)}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/syncing/wallet.cjs"}],[1097,{"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.LegacyUserStorageSyncedAccountSchema=s.UserStorageSyncedWalletGroupSchema=s.UserStorageSyncedWalletSchema=void 0;const a=e("@metamask/superstruct"),n=e=>(0,a.object)({value:e,lastUpdatedAt:(0,a.number)()});s.UserStorageSyncedWalletSchema=(0,a.object)({name:(0,a.optional)(n((0,a.string)())),isLegacyAccountSyncingDisabled:(0,a.optional)((0,a.boolean)())}),s.UserStorageSyncedWalletGroupSchema=(0,a.object)({name:(0,a.optional)(n((0,a.string)())),pinned:(0,a.optional)(n((0,a.boolean)())),hidden:(0,a.optional)(n((0,a.boolean)())),groupIndex:(0,a.number)()}),s.LegacyUserStorageSyncedAccountSchema=(0,a.object)({v:(0,a.optional)((0,a.string)()),i:(0,a.optional)((0,a.string)()),a:(0,a.optional)((0,a.string)()),n:(0,a.optional)((0,a.string)()),nlu:(0,a.optional)((0,a.number)())})}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/types.cjs"}],[1098,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.USER_STORAGE_GROUPS_FEATURE_KEY=s.USER_STORAGE_WALLETS_FEATURE_ENTRY_KEY=s.USER_STORAGE_WALLETS_FEATURE_KEY=s.USER_STORAGE_FEATURE_PREFIX=void 0,s.USER_STORAGE_FEATURE_PREFIX="multichain_accounts",s.USER_STORAGE_WALLETS_FEATURE_KEY=`${s.USER_STORAGE_FEATURE_PREFIX}_wallets`,s.USER_STORAGE_WALLETS_FEATURE_ENTRY_KEY="wallet",s.USER_STORAGE_GROUPS_FEATURE_KEY=`${s.USER_STORAGE_FEATURE_PREFIX}_groups`}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/user-storage/constants.cjs"}],[1099,{"./validation.cjs":1103},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.parseLegacyAccountFromUserStorageResponse=s.parseGroupFromUserStorageResponse=s.parseWalletFromUserStorageResponse=s.formatGroupForUserStorageUsage=s.formatWalletForUserStorageUsage=void 0;const a=e("./validation.cjs");s.formatWalletForUserStorageUsage=(e,t)=>({...e.controller.state.accountWalletsMetadata[t.id]??{},isLegacyAccountSyncingDisabled:!0});s.formatGroupForUserStorageUsage=(e,t)=>({...e.controller.state.accountGroupsMetadata[t.id]??{},groupIndex:t.metadata.entropy.groupIndex});s.parseWalletFromUserStorageResponse=e=>{try{const t=JSON.parse(e);return(0,a.assertValidUserStorageWallet)(t),t}catch(e){throw new Error(`Error trying to parse wallet from user storage response: ${e instanceof Error?e.message:String(e)}`)}};s.parseGroupFromUserStorageResponse=e=>{try{const t=JSON.parse(e);return(0,a.assertValidUserStorageGroup)(t),t}catch(e){throw new Error(`Error trying to parse group from user storage response: ${e instanceof Error?e.message:String(e)}`)}};s.parseLegacyAccountFromUserStorageResponse=e=>{try{const t=JSON.parse(e);return(0,a.assertValidLegacyUserStorageAccount)(t),t}catch(e){throw new Error(`Error trying to parse legacy account from user storage response: ${e instanceof Error?e.message:String(e)}`)}}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/user-storage/format-utils.cjs"}],[1100,{"./format-utils.cjs":1099,"./network-operations.cjs":1101,"./network-utils.cjs":1102,"./validation.cjs":1103},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./format-utils.cjs"),s),n(e("./network-utils.cjs"),s),n(e("./network-operations.cjs"),s),n(e("./validation.cjs"),s)}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/user-storage/index.cjs"}],[1101,{"../../logger.cjs":1108,"./constants.cjs":1098,"./format-utils.cjs":1099,"./network-utils.cjs":1102,"@metamask/profile-sync-controller":2311},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getAllLegacyUserStorageAccounts=s.pushGroupToUserStorageBatch=s.pushGroupToUserStorage=s.getGroupFromUserStorage=s.getAllGroupsFromUserStorage=s.pushWalletToUserStorage=s.getWalletFromUserStorage=void 0;const a=e("@metamask/profile-sync-controller"),n=e("./constants.cjs"),r=e("./format-utils.cjs"),i=e("./network-utils.cjs"),o=e("../../logger.cjs");s.getWalletFromUserStorage=async(e,t)=>(0,i.executeWithRetry)(async()=>{const s=await e.messenger.call("UserStorageController:performGetStorage",`${n.USER_STORAGE_WALLETS_FEATURE_KEY}.${n.USER_STORAGE_WALLETS_FEATURE_ENTRY_KEY}`,t);if(!s)return null;try{return(0,o.backupAndSyncLogger)(`Retrieved wallet data from user storage: ${JSON.stringify(s)}`),(0,r.parseWalletFromUserStorageResponse)(s)}catch(e){return(0,o.backupAndSyncLogger)(`Failed to parse wallet data from user storage: ${e instanceof Error?e.message:String(e)}`),null}});s.pushWalletToUserStorage=async(e,t)=>(0,i.executeWithRetry)(async()=>{const s=(0,r.formatWalletForUserStorageUsage)(e,t),a=JSON.stringify(s),i=t.metadata.entropy.id;return(0,o.backupAndSyncLogger)(`Pushing wallet to user storage: ${a}`),await e.messenger.call("UserStorageController:performSetStorage",`${n.USER_STORAGE_WALLETS_FEATURE_KEY}.${n.USER_STORAGE_WALLETS_FEATURE_ENTRY_KEY}`,a,i)});s.getAllGroupsFromUserStorage=async(e,t)=>(0,i.executeWithRetry)(async()=>{const s=await e.messenger.call("UserStorageController:performGetStorageAllFeatureEntries",`${n.USER_STORAGE_GROUPS_FEATURE_KEY}`,t);if(!s)return[];const a=s.map(e=>{try{return(0,r.parseGroupFromUserStorageResponse)(e)}catch(e){return(0,o.backupAndSyncLogger)(`Failed to parse group data from user storage: ${e instanceof Error?e.message:String(e)}`),null}}).filter(e=>null!==e);return(0,o.backupAndSyncLogger)(`Retrieved groups from user storage: ${JSON.stringify(a)}`),a});s.getGroupFromUserStorage=async(e,t,s)=>(0,i.executeWithRetry)(async()=>{const a=await e.messenger.call("UserStorageController:performGetStorage",`${n.USER_STORAGE_GROUPS_FEATURE_KEY}.${s}`,t);if(!a)return null;try{return(0,r.parseGroupFromUserStorageResponse)(a)}catch(e){return(0,o.backupAndSyncLogger)(`Failed to parse group data from user storage: ${e instanceof Error?e.message:String(e)}`),null}});s.pushGroupToUserStorage=async(e,t,s)=>(0,i.executeWithRetry)(async()=>{const a=(0,r.formatGroupForUserStorageUsage)(e,t),i=JSON.stringify(a);return(0,o.backupAndSyncLogger)(`Pushing group to user storage: ${i}`),await e.messenger.call("UserStorageController:performSetStorage",`${n.USER_STORAGE_GROUPS_FEATURE_KEY}.${a.groupIndex}`,i,s)});s.pushGroupToUserStorageBatch=async(e,t,s)=>(0,i.executeWithRetry)(async()=>{const a=t.map(t=>(0,r.formatGroupForUserStorageUsage)(e,t)).map(e=>[String(e.groupIndex),JSON.stringify(e)]);return(0,o.backupAndSyncLogger)(`Pushing groups to user storage: ${a.map(([e,t])=>t).join(", ")}`),await e.messenger.call("UserStorageController:performBatchSetStorage",n.USER_STORAGE_GROUPS_FEATURE_KEY,a,s)});s.getAllLegacyUserStorageAccounts=async(e,t)=>(0,i.executeWithRetry)(async()=>{const s=await e.messenger.call("UserStorageController:performGetStorageAllFeatureEntries",a.SDK.USER_STORAGE_FEATURE_NAMES.accounts,t);if(!s)return[];const n=s.map(e=>{try{return(0,r.parseLegacyAccountFromUserStorageResponse)(e)}catch(e){return(0,o.backupAndSyncLogger)(`Failed to parse legacy account data from user storage: ${e instanceof Error?e.message:String(e)}`),null}}).filter(e=>null!==e);return(0,o.backupAndSyncLogger)(`Retrieved legacy accounts from user storage: ${JSON.stringify(n)}`),n})}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/user-storage/network-operations.cjs"}],[1102,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.executeWithRetry=void 0,s.executeWithRetry=async function(e,t=3,s=1e3){let a=new Error("Unknown error");for(let n=0;n<=t;n++)try{return await e()}catch(e){if(a=e instanceof Error?e:new Error(String(e)),n===t)break;const r=s*Math.pow(2,n);await new Promise(e=>setTimeout(e,r))}throw a}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/user-storage/network-utils.cjs"}],[1103,{"../types.cjs":1097,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.assertValidLegacyUserStorageAccount=s.assertValidUserStorageGroup=s.assertValidUserStorageWallet=void 0;const a=e("@metamask/superstruct"),n=e("../types.cjs"),r=e=>`Invalid user storage data: ${e.failures().map(({path:e,message:t})=>`[${e.join(".")}] ${t}`).join(", ")}`;s.assertValidUserStorageWallet=function(e){try{(0,a.assert)(e,n.UserStorageSyncedWalletSchema)}catch(e){if(e instanceof a.StructError)throw new Error(`Invalid user storage wallet data: ${r(e)}`);throw e}},s.assertValidUserStorageGroup=function(e){try{(0,a.assert)(e,n.UserStorageSyncedWalletGroupSchema)}catch(e){if(e instanceof a.StructError)throw new Error(`Invalid user storage group data: ${r(e)}`);throw e}},s.assertValidLegacyUserStorageAccount=function(e){try{(0,a.assert)(e,n.LegacyUserStorageSyncedAccountSchema)}catch(e){if(e instanceof a.StructError)throw new Error(`Invalid legacy user storage account data: ${r(e)}`);throw e}}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/user-storage/validation.cjs"}],[1104,{"../../logger.cjs":1108,"@metamask/account-api":1083},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.restoreStateFromSnapshot=s.createStateSnapshot=s.getLocalGroupsForEntropyWallet=s.getLocalGroupForEntropyWallet=s.getLocalEntropyWallets=void 0;const a=e("@metamask/account-api"),n=e("../../logger.cjs");s.getLocalEntropyWallets=function(e){return Object.values(e.controller.state.accountTree.wallets).filter(e=>e.type===a.AccountWalletType.Entropy)};s.getLocalGroupForEntropyWallet=(e,t,s)=>{const r=(0,a.toMultichainAccountWalletId)(t),i=e.controller.state.accountTree.wallets[r];if(!i||i.type!==a.AccountWalletType.Entropy)return(0,n.backupAndSyncLogger)(`Wallet ${r} not found or is not an entropy wallet`),undefined;const o=(0,a.toMultichainAccountGroupId)(r,s);return i.groups[o]},s.getLocalGroupsForEntropyWallet=function(e,t){const s=e.controller.state.accountTree.wallets[t];return s&&s.type===a.AccountWalletType.Entropy?Object.values(s.groups):((0,n.backupAndSyncLogger)(`Wallet ${t} not found or is not an entropy wallet`),[])},s.createStateSnapshot=function(e){return{accountGroupsMetadata:JSON.parse(JSON.stringify(e.controller.state.accountGroupsMetadata)),accountWalletsMetadata:JSON.parse(JSON.stringify(e.controller.state.accountWalletsMetadata)),selectedAccountGroup:e.controller.state.accountTree.selectedAccountGroup,accountTreeWallets:JSON.parse(JSON.stringify(e.controller.state.accountTree.wallets))}},s.restoreStateFromSnapshot=function(e,t){e.controllerStateUpdateFn(e=>{e.accountGroupsMetadata=t.accountGroupsMetadata,e.accountWalletsMetadata=t.accountWalletsMetadata,e.accountTree.selectedAccountGroup=t.selectedAccountGroup,e.accountTree.wallets=t.accountTreeWallets}),e.controller.init()}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/utils/controller.cjs"}],[1105,{"./controller.cjs":1104},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./controller.cjs"),s)}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/backup-and-sync/utils/index.cjs"}],[1106,{"@metamask/keyring-api":1994},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isAccountGroupNameUnique=s.isAccountGroupNameUniqueFromWallet=s.ACCOUNT_TYPE_TO_SORT_ORDER=s.MAX_SORT_ORDER=void 0;const a=e("@metamask/keyring-api");function n(e,t,s){const a=s.trim();for(const s of Object.values(e.groups))if(s.id!==t&&s.metadata.name.trim()===a)return!1;return!0}s.MAX_SORT_ORDER=9999,s.ACCOUNT_TYPE_TO_SORT_ORDER={[a.EthAccountType.Eoa]:0,[a.EthAccountType.Erc4337]:1,[a.SolAccountType.DataAccount]:2,[a.BtcAccountType.P2pkh]:3,[a.BtcAccountType.P2sh]:4,[a.BtcAccountType.P2wpkh]:5,[a.BtcAccountType.P2tr]:6,[a.TrxAccountType.Eoa]:7,[a.AnyAccountType.Account]:s.MAX_SORT_ORDER},s.isAccountGroupNameUniqueFromWallet=n,s.isAccountGroupNameUnique=function(e,t,s){for(const a of Object.values(e.accountTree.wallets))if(a.groups[t])return n(a,t,s);throw new Error(`Account group with ID "${t}" not found in tree`)}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/group.cjs"}],[1107,{"./AccountTreeController.cjs":1084,"./backup-and-sync/user-storage/constants.cjs":1098,"./group.cjs":1106},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getDefaultAccountTreeControllerState=s.AccountTreeController=s.USER_STORAGE_WALLETS_FEATURE_KEY=s.USER_STORAGE_GROUPS_FEATURE_KEY=s.isAccountGroupNameUnique=void 0;var a=e("./group.cjs");Object.defineProperty(s,"isAccountGroupNameUnique",{enumerable:!0,get:function(){return a.isAccountGroupNameUnique}});var n=e("./backup-and-sync/user-storage/constants.cjs");Object.defineProperty(s,"USER_STORAGE_GROUPS_FEATURE_KEY",{enumerable:!0,get:function(){return n.USER_STORAGE_GROUPS_FEATURE_KEY}}),Object.defineProperty(s,"USER_STORAGE_WALLETS_FEATURE_KEY",{enumerable:!0,get:function(){return n.USER_STORAGE_WALLETS_FEATURE_KEY}});var r=e("./AccountTreeController.cjs");Object.defineProperty(s,"AccountTreeController",{enumerable:!0,get:function(){return r.AccountTreeController}}),Object.defineProperty(s,"getDefaultAccountTreeControllerState",{enumerable:!0,get:function(){return r.getDefaultAccountTreeControllerState}})}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/index.cjs"}],[1108,{"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.backupAndSyncLogger=s.projectLogger=void 0;const a=e("@metamask/utils");s.projectLogger=(0,a.createProjectLogger)("account-tree-controller"),s.backupAndSyncLogger=(0,a.createModuleLogger)(s.projectLogger,"Backup and sync")}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/logger.cjs"}],[1109,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.BaseRule=void 0;s.BaseRule=class{constructor(e){this.messenger=e}getComputedAccountGroupName(e){const t=this.messenger.call("AccountsController:getAccount",e.accounts[0]);return t?.metadata.name??""}getDefaultAccountGroupPrefix(e){return"Account"}}}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/rule.cjs"}],[1110,{"../rule.cjs":1109,"@metamask/account-api":1083,"@metamask/keyring-api":1994,"@metamask/keyring-controller":2004},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.EntropyRule=void 0;const a=e("@metamask/account-api"),n=e("@metamask/keyring-api"),r=e("@metamask/keyring-controller"),i=e("../rule.cjs");class o extends i.BaseRule{constructor(){super(...arguments),this.walletType=a.AccountWalletType.Entropy,this.groupType=a.AccountGroupType.MultichainAccount}getEntropySourceIndex(e){const{keyrings:t}=this.messenger.call("KeyringController:getState");return t.filter(e=>e.type===r.KeyringTypes.hd).findIndex(t=>t.metadata.id===e)}match(e){if(!(0,a.isBip44Account)(e))return undefined;const t=e.options.entropy.id;if(-1===this.getEntropySourceIndex(t))return console.warn(`! Found an unknown entropy ID: "${t}", account "${e.id}" won't be grouped by entropy.`),undefined;const s=(0,a.toMultichainAccountWalletId)(t),n=(0,a.toMultichainAccountGroupId)(s,e.options.entropy.groupIndex);return{wallet:{type:this.walletType,id:s,metadata:{entropy:{id:t}}},group:{type:this.groupType,id:n,metadata:{entropy:{groupIndex:e.options.entropy.groupIndex},pinned:!1,hidden:!1}}}}getDefaultAccountWalletName(e){return`Wallet ${this.getEntropySourceIndex(e.metadata.entropy.id)+1}`}getComputedAccountGroupName(e){for(const t of e.accounts){const e=this.messenger.call("AccountsController:getAccount",t);if(e&&(0,n.isEvmAccountType)(e.type))return e.metadata.name}return""}getDefaultAccountGroupPrefix(e){return"Account"}}s.EntropyRule=o}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/rules/entropy.cjs"}],[1111,{"../rule.cjs":1109,"@metamask/account-api":1083,"@metamask/keyring-controller":2004},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.KeyringRule=s.getAccountGroupPrefixFromKeyringType=s.getAccountWalletNameFromKeyringType=void 0;const a=e("@metamask/account-api"),n=e("@metamask/account-api"),r=e("@metamask/account-api"),i=e("@metamask/keyring-controller"),o=e("../rule.cjs");function c(e){switch(e){case i.KeyringTypes.simple:return"Imported accounts";case i.KeyringTypes.trezor:return"Trezor";case i.KeyringTypes.oneKey:return"OneKey";case i.KeyringTypes.ledger:return"Ledger";case i.KeyringTypes.lattice:return"Lattice";case i.KeyringTypes.qr:return"QR";case i.KeyringTypes.hd:return"HD Wallet";case i.KeyringTypes.snap:return"Snap Wallet";default:return"Unknown"}}function l(e){switch(e){case i.KeyringTypes.simple:return"Imported Account";case i.KeyringTypes.trezor:return"Trezor Account";case i.KeyringTypes.oneKey:return"OneKey Account";case i.KeyringTypes.ledger:return"Ledger Account";case i.KeyringTypes.lattice:return"Lattice Account";case i.KeyringTypes.qr:return"QR Account";case i.KeyringTypes.hd:return"Account";case i.KeyringTypes.snap:return"Snap Account";default:return"Unknown Account"}}s.getAccountWalletNameFromKeyringType=c,s.getAccountGroupPrefixFromKeyringType=l;class u extends o.BaseRule{constructor(){super(...arguments),this.walletType=n.AccountWalletType.Keyring,this.groupType=a.AccountGroupType.SingleAccount}match(e){const t=e.metadata.keyring.type,s=(0,r.toAccountWalletId)(this.walletType,t),a=(0,r.toAccountGroupId)(s,e.address);return{wallet:{type:this.walletType,id:s,metadata:{keyring:{type:t}}},group:{type:this.groupType,id:a,metadata:{pinned:!1,hidden:!1}}}}getDefaultAccountWalletName(e){return c(e.metadata.keyring.type)}getComputedAccountGroupName(e){return super.getComputedAccountGroupName(e)}getDefaultAccountGroupPrefix(e){return l(e.metadata.keyring.type)}}s.KeyringRule=u}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/rules/keyring.cjs"}],[1112,{"../rule.cjs":1109,"./keyring.cjs":1111,"@metamask/account-api":1083,"@metamask/keyring-controller":2004,"@metamask/snaps-utils":2677},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.SnapRule=void 0;const a=e("@metamask/account-api"),n=e("@metamask/account-api"),r=e("@metamask/keyring-controller"),i=e("@metamask/snaps-utils"),o=e("./keyring.cjs"),c=e("../rule.cjs");class l extends c.BaseRule{constructor(){super(...arguments),this.walletType=a.AccountWalletType.Snap,this.groupType=a.AccountGroupType.SingleAccount}match(e){if(!function(e){return e.metadata.keyring.type===r.KeyringTypes.snap&&e.metadata.snap!==undefined&&e.metadata.snap.enabled}(e))return undefined;const{id:t}=e.metadata.snap,s=(0,n.toAccountWalletId)(this.walletType,t),a=(0,n.toAccountGroupId)(s,e.address);return{wallet:{type:this.walletType,id:s,metadata:{snap:{id:t}}},group:{type:this.groupType,id:a,metadata:{pinned:!1,hidden:!1}}}}getDefaultAccountWalletName(e){const t=e.metadata.snap.id,s=this.messenger.call("SnapController:get",t);return s?s.manifest.proposedName:(0,i.stripSnapPrefix)(t)}getDefaultAccountGroupPrefix(e){return(0,o.getAccountGroupPrefixFromKeyringType)(r.KeyringTypes.snap)}}s.SnapRule=l}}},{package:"@metamask/account-tree-controller",file:"node_modules/@metamask/account-tree-controller/dist/rules/snap.cjs"}],[1113,{"./utils.cjs":1115,"@metamask/base-controller":1222,"@metamask/eth-snap-keyring":1864,"@metamask/keyring-api":1994,"@metamask/keyring-controller":2004,"@metamask/keyring-utils":2040,"@metamask/utils":2799,lodash:4534},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g,f,y,w=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.AccountsController=s.EMPTY_ACCOUNT=void 0;const b=e("@metamask/base-controller"),k=e("@metamask/eth-snap-keyring"),S=e("@metamask/keyring-api"),A=e("@metamask/keyring-controller"),T=e("@metamask/keyring-utils"),v=e("@metamask/utils"),E=e("lodash"),C=e("./utils.cjs"),I="AccountsController",_={internalAccounts:{includeInStateLogs:!0,persist:!0,anonymous:!1,usedInUi:!0}},P={internalAccounts:{accounts:{},selectedAccount:""}};s.EMPTY_ACCOUNT={id:"",address:"",options:{},methods:[],type:S.EthAccountType.Eoa,scopes:[S.EthScope.Eoa],metadata:{name:"",keyring:{type:""},importTime:0}};class R extends b.BaseController{constructor({messenger:e,state:t}){super({messenger:e,name:I,metadata:_,state:{...P,...t}}),a.add(this),w(this,a,"m",f).call(this),w(this,a,"m",y).call(this)}getAccount(e){return this.state.internalAccounts.accounts[e]}listAccounts(){return Object.values(this.state.internalAccounts.accounts).filter(e=>(0,S.isEvmAccountType)(e.type))}listMultichainAccounts(e){const t=Object.values(this.state.internalAccounts.accounts);if(!e)return t;if(!(0,v.isCaipChainId)(e))throw new Error(`Invalid CAIP-2 chain ID: ${String(e)}`);return t.filter(t=>(0,T.isScopeEqualToAny)(e,t.scopes))}getAccountExpect(e){const t=this.getAccount(e);if(t===undefined)throw new Error(`Account Id "${e}" not found`);return t}getSelectedAccount(){const{internalAccounts:{selectedAccount:e}}=this.state;if(""===e)return s.EMPTY_ACCOUNT;const t=this.getAccountExpect(e);if((0,S.isEvmAccountType)(t.type))return t;const n=this.listAccounts();if(!n.length)throw new Error("No EVM accounts");return w(this,a,"m",m).call(this,n)}getSelectedMultichainAccount(e){const{internalAccounts:{selectedAccount:t}}=this.state;if(""===t)return s.EMPTY_ACCOUNT;if(!e)return this.getAccountExpect(t);const n=this.listMultichainAccounts(e);return w(this,a,"m",m).call(this,n)}getAccountByAddress(e){return this.listMultichainAccounts().find(t=>t.address.toLowerCase()===e.toLowerCase())}setSelectedAccount(e){const t=this.getAccountExpect(e);this.state.internalAccounts.selectedAccount!==t.id&&w(this,a,"m",l).call(this,e=>{const{internalAccounts:s}=e;s.accounts[t.id].metadata.lastSelected=Date.now(),s.selectedAccount=t.id})}setAccountName(e,t){this.updateAccountMetadata(e,{name:t,nameLastUpdatedAt:Date.now()})}setAccountNameAndSelectAccount(e,t){const s=this.getAccountExpect(e);w(this,a,"m",n).call(this,s,t);const r={...s,metadata:{...s.metadata,name:t,nameLastUpdatedAt:Date.now(),lastSelected:w(this,a,"m",h).call(this)}};w(this,a,"m",l).call(this,e=>{e.internalAccounts.accounts[s.id]=r,e.internalAccounts.selectedAccount=s.id}),this.messagingSystem.publish("AccountsController:accountRenamed",r)}updateAccountMetadata(e,t){const s=this.getAccountExpect(e);t.name&&w(this,a,"m",n).call(this,s,t.name);const r={...s,metadata:{...s.metadata,...t}};w(this,a,"m",l).call(this,t=>{t.internalAccounts.accounts[e]=r}),t.name&&this.messagingSystem.publish("AccountsController:accountRenamed",r)}async updateAccounts(){const e=new Map,t=this.state.internalAccounts.accounts,s={},{keyrings:n}=this.messagingSystem.call("KeyringController:getState");for(const r of n){const n=(0,C.keyringTypeToName)(r.type);for(const i of r.accounts){const o=w(this,a,"m",p).call(this,i,r);if(!o)continue;const c=e.get(n)??1,l=t[o.id];s[o.id]={...o,metadata:{...o.metadata,name:l?.metadata.name??`${n} ${c}`,importTime:l?.metadata.importTime??Date.now(),lastSelected:l?.metadata.lastSelected??0}},e.set(n,c+1)}}w(this,a,"m",l).call(this,e=>{e.internalAccounts.accounts=s})}loadBackup(e){e.internalAccounts&&this.update(t=>{t.internalAccounts=e.internalAccounts})}getNextAvailableAccountName(e=A.KeyringTypes.hd,t){const s=(0,C.keyringTypeToName)(e),n=w(this,a,"m",d).call(this,e,t),r=n.reduce((e,t)=>{const a=new RegExp(`${s} ([0-9]+)$`,"u").exec(t.metadata.name);if(a){const t=parseInt(a[1],10);return Math.max(e,t)}return e},0),i=Math.max(n.length+1,r+1);return`${s} ${i}`}}s.AccountsController=R,a=new WeakSet,n=function(e,t){if(this.listMultichainAccounts().find(s=>s.metadata.name===t&&s.id!==e.id))throw new Error("Account name already exists")},r=function(e,t){const s=(0,C.getUUIDFromAddressOfNormalAccount)(e),a=this.getAccount(s),n={name:a?.metadata.name??"",...a?.metadata.nameLastUpdatedAt?{nameLastUpdatedAt:a?.metadata.nameLastUpdatedAt}:{},importTime:a?.metadata.importTime??Date.now(),lastSelected:a?.metadata.lastSelected??0,keyring:{type:t.type}};let r={};if((0,C.isHdKeyringType)(t.type)){const s=(0,C.getEvmGroupIndexFromAddressIndex)(t,e);if(s!==undefined){const e=(0,C.getEvmDerivationPathForIndex)(s);r={...{entropySource:t.metadata.id,derivationPath:e,groupIndex:s},...{entropy:{type:S.KeyringAccountEntropyTypeOption.Mnemonic,id:t.metadata.id,derivationPath:e,groupIndex:s}}}}}return{id:s,address:e,options:r,methods:[S.EthMethod.PersonalSign,S.EthMethod.Sign,S.EthMethod.SignTransaction,S.EthMethod.SignTypedDataV1,S.EthMethod.SignTypedDataV3,S.EthMethod.SignTypedDataV4],scopes:[S.EthScope.Eoa],type:S.EthAccountType.Eoa,metadata:n}},i=function(){const[e]=this.messagingSystem.call("KeyringController:getKeyringsByType",k.SnapKeyring.type);return e},o=function(e,...t){this.messagingSystem.publish(e,...t)},c=function({isUnlocked:e,keyrings:t}){if(!e||0===t.length)return;const s={snap:{previous:{},added:[],updated:[],removed:[]},normal:{previous:{},added:[],updated:[],removed:[]}},n=e=>(0,C.isSnapKeyringType)(e)?s.snap:s.normal;for(const e of this.listMultichainAccounts()){const t=e.address.toLowerCase();n(e.metadata.keyring.type).previous[t]=e}const r=new Set;for(const e of t){const t=n(e.type);for(const s of e.accounts){const a=s.toLowerCase(),n=t.previous[a];n?t.updated.push(n):t.added.push({address:a,keyring:e}),r.add(a)}}for(const e of[s.snap,s.normal])for(const[t,s]of Object.entries(e.previous))r.has(t)||e.removed.push(s);const i={removed:[],added:[]};w(this,a,"m",l).call(this,e=>{const{internalAccounts:t}=e;for(const e of[s.snap,s.normal]){for(const s of e.removed)delete t.accounts[s.id],i.removed.push(s.id);for(const s of e.added){const e=w(this,a,"m",p).call(this,s.address,s.keyring);if(e){const s=Object.values(t.accounts),n=this.getNextAvailableAccountName(e.metadata.keyring.type,s),r=0===s.length?w(this,a,"m",h).call(this):0;t.accounts[e.id]={...e,metadata:{...e.metadata,name:n,importTime:Date.now(),lastSelected:r}},i.added.push(t.accounts[e.id])}}}},()=>{for(const e of i.removed)this.messagingSystem.publish("AccountsController:accountRemoved",e);for(const e of i.added)this.messagingSystem.publish("AccountsController:accountAdded",e)})},l=function(e,t){const s=this.state.internalAccounts.selectedAccount;this.update(t=>{e(t);const{internalAccounts:n}=t;if(!n.accounts[s]){const e=Object.values(n.accounts),t=w(this,a,"m",m).call(this,e);t?(n.selectedAccount=t.id,n.accounts[t.id].metadata.lastSelected=w(this,a,"m",h).call(this)):n.selectedAccount=""}}),t?.();const{selectedAccount:n}=this.state.internalAccounts;if(n&&n!==s){const e=this.getSelectedMultichainAccount();e&&((0,S.isEvmAccountType)(e.type)&&this.messagingSystem.publish("AccountsController:selectedEvmAccountChange",e),this.messagingSystem.publish("AccountsController:selectedAccountChange",e))}},u=function(e){const{snaps:t}=e,s=[];for(const e of this.listMultichainAccounts())if(e.metadata.snap){const a=t[e.metadata.snap.id];if(a){const t=a.enabled&&!a.blocked;e.metadata.snap.enabled!==t&&s.push({id:e.id,enabled:t})}else s.push({id:e.id,enabled:!1})}s.length>0&&this.update(e=>{for(const{id:t,enabled:a}of s){const s=e.internalAccounts.accounts[t];s.metadata.snap&&(s.metadata.snap.enabled=a)}})},d=function(e,t){return(t??this.listMultichainAccounts()).filter(t=>(0,C.isHdKeyringType)(e)||(0,C.isSimpleKeyringType)(e)?(0,C.isHdKeyringType)(t.metadata.keyring.type)||(0,C.isSimpleKeyringType)(t.metadata.keyring.type):t.metadata.keyring.type===e)},m=function(e){const[t]=e.sort((e,t)=>(t.metadata.lastSelected??0)-(e.metadata.lastSelected??0));return t},h=function(){return Date.now()},p=function(e,t){if((0,C.isSnapKeyringType)(t.type)){const t=w(this,a,"m",i).call(this);if(!t)return undefined;let s=t.getAccountByAddress(e);if(s&&(s=(0,E.cloneDeep)(s),(0,C.isHdSnapKeyringAccount)(s))){const e={...s.options,entropy:{type:S.KeyringAccountEntropyTypeOption.Mnemonic,id:s.options.entropySource,groupIndex:s.options.index,derivationPath:s.options.derivationPath}};s.options=e}return s}return w(this,a,"m",r).call(this,e,t)},g=function(e){let t;if((0,v.isCaipChainId)(e)){const s=this.getSelectedMultichainAccount(e);t=s.id}else{const e=this.getSelectedAccount();t=e.id}this.state.internalAccounts.selectedAccount!==t&&this.update(e=>{e.internalAccounts.accounts[t].metadata.lastSelected=Date.now(),e.internalAccounts.selectedAccount=t})},f=function(){this.messagingSystem.subscribe("SnapController:stateChange",e=>w(this,a,"m",u).call(this,e)),this.messagingSystem.subscribe("KeyringController:stateChange",e=>w(this,a,"m",c).call(this,e)),this.messagingSystem.subscribe("SnapKeyring:accountAssetListUpdated",e=>w(this,a,"m",o).call(this,"AccountsController:accountAssetListUpdated",e)),this.messagingSystem.subscribe("SnapKeyring:accountBalancesUpdated",e=>w(this,a,"m",o).call(this,"AccountsController:accountBalancesUpdated",e)),this.messagingSystem.subscribe("SnapKeyring:accountTransactionsUpdated",e=>w(this,a,"m",o).call(this,"AccountsController:accountTransactionsUpdated",e)),this.messagingSystem.subscribe("MultichainNetworkController:networkDidChange",e=>w(this,a,"m",g).call(this,e))},y=function(){this.messagingSystem.registerActionHandler(`${I}:setSelectedAccount`,this.setSelectedAccount.bind(this)),this.messagingSystem.registerActionHandler(`${I}:listAccounts`,this.listAccounts.bind(this)),this.messagingSystem.registerActionHandler(`${I}:listMultichainAccounts`,this.listMultichainAccounts.bind(this)),this.messagingSystem.registerActionHandler(`${I}:setAccountName`,this.setAccountName.bind(this)),this.messagingSystem.registerActionHandler(`${I}:setAccountNameAndSelectAccount`,this.setAccountNameAndSelectAccount.bind(this)),this.messagingSystem.registerActionHandler(`${I}:updateAccounts`,this.updateAccounts.bind(this)),this.messagingSystem.registerActionHandler(`${I}:getSelectedAccount`,this.getSelectedAccount.bind(this)),this.messagingSystem.registerActionHandler(`${I}:getSelectedMultichainAccount`,this.getSelectedMultichainAccount.bind(this)),this.messagingSystem.registerActionHandler(`${I}:getAccountByAddress`,this.getAccountByAddress.bind(this)),this.messagingSystem.registerActionHandler(`${I}:getNextAvailableAccountName`,this.getNextAvailableAccountName.bind(this)),this.messagingSystem.registerActionHandler("AccountsController:getAccount",this.getAccount.bind(this)),this.messagingSystem.registerActionHandler("AccountsController:updateAccountMetadata",this.updateAccountMetadata.bind(this))}}}},{package:"@metamask/accounts-controller",file:"node_modules/@metamask/accounts-controller/dist/AccountsController.cjs"}],[1114,{"./AccountsController.cjs":1113,"./utils.cjs":1115},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isNormalKeyringType=s.getUUIDFromAddressOfNormalAccount=s.getUUIDOptionsFromAddressOfNormalAccount=s.keyringTypeToName=s.AccountsController=s.EMPTY_ACCOUNT=void 0;var a=e("./AccountsController.cjs");Object.defineProperty(s,"EMPTY_ACCOUNT",{enumerable:!0,get:function(){return a.EMPTY_ACCOUNT}}),Object.defineProperty(s,"AccountsController",{enumerable:!0,get:function(){return a.AccountsController}});var n=e("./utils.cjs");Object.defineProperty(s,"keyringTypeToName",{enumerable:!0,get:function(){return n.keyringTypeToName}}),Object.defineProperty(s,"getUUIDOptionsFromAddressOfNormalAccount",{enumerable:!0,get:function(){return n.getUUIDOptionsFromAddressOfNormalAccount}}),Object.defineProperty(s,"getUUIDFromAddressOfNormalAccount",{enumerable:!0,get:function(){return n.getUUIDFromAddressOfNormalAccount}}),Object.defineProperty(s,"isNormalKeyringType",{enumerable:!0,get:function(){return n.isNormalKeyringType}})}}},{package:"@metamask/accounts-controller",file:"node_modules/@metamask/accounts-controller/dist/index.cjs"}],[1115,{"@metamask/keyring-controller":2004,"@metamask/superstruct":2705,"@metamask/utils":2799,"ethereum-cryptography/sha256":4010,uuid:5366},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isHdSnapKeyringAccount=s.HdSnapKeyringAccountOptionsStruct=s.getEvmGroupIndexFromAddressIndex=s.getEvmDerivationPathForIndex=s.isHdKeyringType=s.isSimpleKeyringType=s.isSnapKeyringType=s.isNormalKeyringType=s.getUUIDFromAddressOfNormalAccount=s.getUUIDOptionsFromAddressOfNormalAccount=s.keyringTypeToName=void 0;const a=e("@metamask/keyring-controller"),n=e("@metamask/superstruct"),r=e("@metamask/utils"),i=e("ethereum-cryptography/sha256"),o=e("uuid");function c(e){return{random:(0,i.sha256)((0,r.hexToBytes)(e)).slice(0,16)}}function l(e){return e===a.KeyringTypes.hd}s.keyringTypeToName=function(e){switch(e){case a.KeyringTypes.simple:case a.KeyringTypes.hd:return"Account";case a.KeyringTypes.trezor:return"Trezor";case a.KeyringTypes.oneKey:return"OneKey";case a.KeyringTypes.ledger:return"Ledger";case a.KeyringTypes.lattice:return"Lattice";case a.KeyringTypes.qr:return"QR";case a.KeyringTypes.snap:return"Snap Account";default:throw new Error(`Unknown keyring ${e}`)}},s.getUUIDOptionsFromAddressOfNormalAccount=c,s.getUUIDFromAddressOfNormalAccount=function(e){return(0,o.v4)(c(e))},s.isNormalKeyringType=function(e){return e!==a.KeyringTypes.snap},s.isSnapKeyringType=function(e){return e===a.KeyringTypes.snap},s.isSimpleKeyringType=function(e){return e===a.KeyringTypes.simple},s.isHdKeyringType=l,s.getEvmDerivationPathForIndex=function(e){return`m/44'/60'/0'/0/${e}`},s.getEvmGroupIndexFromAddressIndex=function(e,t){if(!l(e.type))return undefined;const s=e.accounts.findIndex(e=>e.toLowerCase()===t.toLowerCase());return-1===s?(console.warn(`! Unable to get group index for HD account: "${t}"`),undefined):s},s.HdSnapKeyringAccountOptionsStruct=(0,n.type)({entropySource:(0,n.string)(),index:(0,n.number)(),derivationPath:(0,n.string)()}),s.isHdSnapKeyringAccount=function(e){return(0,n.is)(e.options,s.HdSnapKeyringAccountOptionsStruct)}}}},{package:"@metamask/accounts-controller",file:"node_modules/@metamask/accounts-controller/dist/utils.cjs"}],[1120,{"./errors.cjs":1121,"@metamask/base-controller":1222,"@metamask/rpc-errors":2384,nanoid:4718},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},f=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.ApprovalController=s.APPROVAL_TYPE_RESULT_SUCCESS=s.APPROVAL_TYPE_RESULT_ERROR=s.ORIGIN_METAMASK=void 0;const y=e("@metamask/base-controller"),w=e("@metamask/rpc-errors"),b=e("nanoid"),k=e("./errors.cjs");s.ORIGIN_METAMASK="metamask",s.APPROVAL_TYPE_RESULT_ERROR="result_error",s.APPROVAL_TYPE_RESULT_SUCCESS="result_success";const S="ApprovalController",A={pendingApprovals:{persist:!1,anonymous:!0},pendingApprovalCount:{persist:!1,anonymous:!1},approvalFlows:{persist:!1,anonymous:!1}};class T extends y.BaseController{constructor({messenger:e,showApprovalRequest:t,state:s={},typesExcludedFromRateLimiting:c=[]}){super({name:S,metadata:A,messenger:e,state:{pendingApprovals:{},pendingApprovalCount:0,approvalFlows:[],...s}}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),g(this,n,new Map,"f"),g(this,r,new Map,"f"),g(this,i,t,"f"),g(this,o,c,"f"),this.registerMessageHandlers()}registerMessageHandlers(){this.messagingSystem.registerActionHandler(`${S}:clearRequests`,this.clear.bind(this)),this.messagingSystem.registerActionHandler(`${S}:addRequest`,(e,t)=>t?this.addAndShowApprovalRequest(e):this.add(e)),this.messagingSystem.registerActionHandler(`${S}:hasRequest`,this.has.bind(this)),this.messagingSystem.registerActionHandler(`${S}:acceptRequest`,this.accept.bind(this)),this.messagingSystem.registerActionHandler(`${S}:rejectRequest`,this.reject.bind(this)),this.messagingSystem.registerActionHandler(`${S}:updateRequestState`,this.updateRequestState.bind(this)),this.messagingSystem.registerActionHandler(`${S}:startFlow`,this.startFlow.bind(this)),this.messagingSystem.registerActionHandler(`${S}:endFlow`,this.endFlow.bind(this)),this.messagingSystem.registerActionHandler(`${S}:setFlowLoadingText`,this.setFlowLoadingText.bind(this)),this.messagingSystem.registerActionHandler(`${S}:showSuccess`,this.success.bind(this)),this.messagingSystem.registerActionHandler(`${S}:showError`,this.error.bind(this))}addAndShowApprovalRequest(e){const t=f(this,a,"m",c).call(this,e.origin,e.type,e.id,e.requestData,e.requestState,e.expectsResult);return f(this,i,"f").call(this),t}add(e){return f(this,a,"m",c).call(this,e.origin,e.type,e.id,e.requestData,e.requestState,e.expectsResult)}get(e){return this.state.pendingApprovals[e]}getApprovalCount(e={}){if(!e.origin&&!e.type)throw new Error("Must specify origin, type, or both.");const{origin:t,type:s}=e;if(t&&s)return f(this,r,"f").get(t)?.get(s)||0;if(t)return Array.from((f(this,r,"f").get(t)||new Map).values()).reduce((e,t)=>e+t,0);let a=0;for(const e of Object.values(this.state.pendingApprovals))e.type===s&&(a+=1);return a}getTotalApprovalCount(){return this.state.pendingApprovalCount}has(e={}){const{id:t,origin:s,type:a}=e;if(t){if("string"!=typeof t)throw new Error("May not specify non-string id.");return f(this,n,"f").has(t)}if(a&&"string"!=typeof a)throw new Error("May not specify non-string type.");if(s){if("string"!=typeof s)throw new Error("May not specify non-string origin.");return a?Boolean(f(this,r,"f").get(s)?.get(a)):f(this,r,"f").has(s)}if(a){for(const e of Object.values(this.state.pendingApprovals))if(e.type===a)return!0;return!1}throw new Error("Must specify a valid combination of id, origin, and type.")}accept(e,t,s){const n=this.get(e),r=f(this,a,"m",h).call(this,e);let i=!1;return s?.deleteAfterResult&&s.waitForResult||(f(this,a,"m",m).call(this,e),i=!0),new Promise((a,i)=>{const o={success:e=>a({value:e}),error:i};if(s?.waitForResult&&!n.expectsResult)return void i(new k.ApprovalRequestNoResultSupportError(e));const c=s?.waitForResult?o:undefined,l=n.expectsResult?{value:t,resultCallbacks:c}:t;r.resolve(l),s?.waitForResult||a({value:undefined})}).finally(()=>{i||f(this,a,"m",m).call(this,e)})}reject(e,t){const s=f(this,a,"m",h).call(this,e);f(this,a,"m",m).call(this,e),s.reject(t)}clear(e){for(const t of f(this,n,"f").keys())this.reject(t,e);f(this,r,"f").clear(),this.update(e=>{e.pendingApprovals={},e.pendingApprovalCount=0})}updateRequestState(e){if(!this.state.pendingApprovals[e.id])throw new k.ApprovalRequestNotFoundError(e.id);this.update(t=>{t.pendingApprovals[e.id].requestState=e.requestState})}startFlow(e={}){const t=e.id??(0,b.nanoid)(),s=e.loadingText??null;return this.update(e=>{e.approvalFlows.push({id:t,loadingText:s})}),!1!==e.show&&f(this,i,"f").call(this),{id:t,loadingText:s}}endFlow({id:e}){if(!this.state.approvalFlows.length)throw new k.NoApprovalFlowsError;if(e!==this.state.approvalFlows.slice(-1)[0].id)throw new k.EndInvalidFlowError(e,this.state.approvalFlows.map(e=>e.id));this.update(e=>{e.approvalFlows.pop()})}setFlowLoadingText({id:e,loadingText:t}){const s=this.state.approvalFlows.findIndex(t=>t.id===e);if(-1===s)throw new k.MissingApprovalFlowError(e);this.update(e=>{e.approvalFlows[s].loadingText=t})}async success(e={}){return await f(this,a,"m",p).call(this,s.APPROVAL_TYPE_RESULT_SUCCESS,e,{message:e.message,header:e.header,title:e.title,icon:e.icon}),{}}async error(e={}){return await f(this,a,"m",p).call(this,s.APPROVAL_TYPE_RESULT_ERROR,e,{error:e.error,header:e.header,title:e.title,icon:e.icon}),{}}}s.ApprovalController=T,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,a=new WeakSet,c=function(e,t,s=(0,b.nanoid)(),r,i,c){if(f(this,a,"m",l).call(this,s,e,t,r,i),!f(this,o,"f").includes(t)&&this.has({origin:e,type:t}))throw w.rpcErrors.resourceUnavailable(((e,t)=>`Request of type '${t}' already pending for origin ${e}. Please wait.`)(e,t));return new Promise((o,l)=>{f(this,n,"f").set(s,{resolve:o,reject:l}),f(this,a,"m",u).call(this,e,t),f(this,a,"m",d).call(this,s,e,t,r,i,c)})},l=function(e,t,s,a,r){let i=null;if(e&&"string"==typeof e?f(this,n,"f").has(e)?i=`Approval request with id '${e}' already exists.`:t&&"string"==typeof t?s&&"string"==typeof s?a&&("object"!=typeof a||Array.isArray(a))?i="Request data must be a plain object if specified.":r&&("object"!=typeof r||Array.isArray(r))&&(i="Request state must be a plain object if specified."):i="Must specify non-empty string type.":i="Must specify non-empty string origin.":i="Must specify non-empty string id.",i)throw w.rpcErrors.internal(i)},u=function(e,t){let s=f(this,r,"f").get(e);s||(s=new Map,f(this,r,"f").set(e,s));const a=s.get(t)||0;s.set(t,a+1)},d=function(e,t,s,a,n,r){const i={id:e,origin:t,type:s,time:Date.now(),requestData:a||null,requestState:n||null,expectsResult:r||!1};this.update(t=>{t.pendingApprovals[e]=i,t.pendingApprovalCount=Object.keys(t.pendingApprovals).length})},m=function(e){if(!f(this,n,"f").has(e))throw new k.ApprovalRequestNotFoundError(e);f(this,n,"f").delete(e);const{origin:t,type:s}=this.state.pendingApprovals[e],a=f(this,r,"f").get(t),i=this.getApprovalCount({origin:t}),o=a.get(s);1===i?f(this,r,"f").delete(t):a.set(s,o-1),this.update(t=>{delete t.pendingApprovals[e],t.pendingApprovalCount=Object.keys(t.pendingApprovals).length})},h=function(e){const t=f(this,n,"f").get(e);if(!t)throw new k.ApprovalRequestNotFoundError(e);return t},p=async function(e,t,a){try{await this.addAndShowApprovalRequest({origin:s.ORIGIN_METAMASK,type:e,requestData:a})}catch(e){console.info("Failed to display result page",e)}finally{if(t.flowToEnd)try{this.endFlow({id:t.flowToEnd})}catch(e){console.info("Failed to end flow",{id:t.flowToEnd,error:e})}}},s.default=T}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/ApprovalController.cjs"}],[1121,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MissingApprovalFlowError=s.EndInvalidFlowError=s.NoApprovalFlowsError=s.ApprovalRequestNoResultSupportError=s.ApprovalRequestNotFoundError=void 0;class a extends Error{constructor(e){super(`Approval request with id '${e}' not found.`)}}s.ApprovalRequestNotFoundError=a;class n extends Error{constructor(e){super(`Approval acceptance requested result but request with id '${e}' does not support it.`)}}s.ApprovalRequestNoResultSupportError=n;class r extends Error{constructor(){super("No approval flows found.")}}s.NoApprovalFlowsError=r;class i extends Error{constructor(e,t){super(`Attempted to end flow with id '${e}' which does not match current flow with id '${t.slice(-1)[0]}'. All Flows: ${t.join(", ")}`)}}s.EndInvalidFlowError=i;class o extends Error{constructor(e){super(`No approval flows found with id '${e}'.`)}}s.MissingApprovalFlowError=o}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/errors.cjs"}],[1122,{"./ApprovalController.cjs":1120,"./errors.cjs":1121},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./ApprovalController.cjs"),s),n(e("./errors.cjs"),s)}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/index.cjs"}],[1123,{"./multi-chain-accounts-service/api-balance-fetcher.cjs":1158,"./rpc-service/rpc-balance-fetcher.cjs":1162,"@ethersproject/providers":692,"@metamask/controller-utils":1301,"@metamask/eth-query":1831,"@metamask/polling-controller":2280,"@metamask/utils":2799,"async-mutex":3582,lodash:4534},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},f=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},y=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.AccountTrackerController=void 0;const w=e("@ethersproject/providers"),b=e("@metamask/controller-utils"),k=y(e("@metamask/eth-query")),S=e("@metamask/polling-controller"),A=e("@metamask/utils"),T=e("async-mutex"),v=e("lodash"),E=e("./multi-chain-accounts-service/api-balance-fetcher.cjs"),C=e("./rpc-service/rpc-balance-fetcher.cjs"),I="AccountTrackerController",_="0x0000000000000000000000000000000000000000";function P(e,t,s){const a=new C.RpcBalanceFetcher(e,t,()=>({allTokens:{},allDetectedTokens:{}}));return{supports:e=>a.supports(),async fetch(e){const t=await a.fetch(e);return s?t:t.filter(e=>e.token===_)}}}const R={accountsByChainId:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0}};class x extends((0,S.StaticIntervalPollingController)()){constructor({interval:e=1e4,state:t,messenger:s,getStakedBalanceForChain:m,includeStakedAssets:y=!1,accountsApiChainIds:b=()=>[],allowExternalServices:k=()=>!0}){const{selectedNetworkClientId:S}=s.call("NetworkController:getState"),{configuration:{chainId:A}}=s.call("NetworkController:getNetworkClientById",S);super({name:I,messenger:s,state:{accountsByChainId:{[A]:{}},...t},metadata:R}),a.add(this),n.set(this,new T.Mutex),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),l.set(this,e=>{const{networkConfigurationsByChainId:t}=this.messagingSystem.call("NetworkController:getState"),s=t[e],{networkClientId:a}=s.rpcEndpoints[s.defaultRpcEndpointIndex],n=this.messagingSystem.call("NetworkController:getNetworkClientById",a);return new w.Web3Provider(n.provider)}),u.set(this,e=>{const{networkConfigurationsByChainId:t}=this.messagingSystem.call("NetworkController:getState"),s=t[e],{networkClientId:a}=s.rpcEndpoints[s.defaultRpcEndpointIndex];return this.messagingSystem.call("NetworkController:getNetworkClientById",a)}),d.set(this,()=>{const e=new E.AccountsApiBalanceFetcher("extension",f(this,l,"f"));return{supports:t=>f(this,i,"f").call(this).includes(t)&&e.supports(t),fetch:e.fetch.bind(e)}}),g(this,o,m,"f"),g(this,r,y,"f"),g(this,i,b,"f"),g(this,c,[...b().length>0&&k()?[f(this,d,"f").call(this)]:[],P(f(this,l,"f"),f(this,u,"f"),f(this,r,"f"))],"f"),this.setIntervalLength(e),this.messagingSystem.subscribe("AccountsController:selectedEvmAccountChange",(e,t)=>{e!==t&&this.refresh(f(this,a,"m",h).call(this))},e=>e.address),f(this,a,"m",p).call(this)}syncAccounts(e){const t=(0,v.cloneDeep)(this.state.accountsByChainId),{selectedNetworkClientId:s}=this.messagingSystem.call("NetworkController:getState"),{configuration:{chainId:a}}=this.messagingSystem.call("NetworkController:getNetworkClientById",s),n=Object.keys(t?.[a]??{});e.forEach(e=>{t[e]||(t[e]={},n.forEach(s=>{t[e][s]={balance:"0x0"}}))});const r=Object.values(this.messagingSystem.call("AccountsController:listAccounts").map(e=>(0,b.toChecksumHexAddress)(e.address))),i=r.filter(e=>!n.includes(e)),o=n.filter(e=>!r.includes(e));Object.keys(t).forEach(e=>{i.forEach(s=>{t[e][s]={balance:"0x0"}})}),Object.keys(t).forEach(e=>{o.forEach(s=>{delete t[e][s]})}),(0,v.isEqual)(this.state.accountsByChainId,t)||this.update(e=>{e.accountsByChainId=t})}async _executePoll({networkClientIds:e,queryAllAccounts:t=!1}){this.refresh(e,t)}async refresh(e,t=!1){const s=this.messagingSystem.call("AccountsController:getSelectedAccount"),r=this.messagingSystem.call("AccountsController:listAccounts"),{isMultiAccountBalancesEnabled:i}=this.messagingSystem.call("PreferencesController:getState"),o=await f(this,n,"f").acquire();try{const n=e.map(e=>{const{chainId:t}=f(this,a,"m",m).call(this,e);return t});this.syncAccounts(n);const o=[];let l=[...n];for(const e of f(this,c,"f")){const a=l.filter(t=>e.supports(t));if(a.length){try{const n=await e.fetch({chainIds:a,queryAllAccounts:t??i,selectedAccount:(0,b.toChecksumHexAddress)(s.address),allAccounts:r});if(n&&n.length>0){o.push(...n);const e=new Set(n.map(e=>e.chainId));l=l.filter(t=>!e.has(t))}}catch(e){console.warn(`Balance fetcher failed for chains ${a.join(", ")}: ${String(e)}`)}if(0===l.length)break}}const u=(0,v.cloneDeep)(this.state.accountsByChainId);let d=!1;const h={};o.forEach(({success:e,value:t,account:s,token:a,chainId:n})=>{if(e&&t!==undefined){const e=(0,b.toChecksumHexAddress)(s),r=`0x${t.toString(16)}`;a===_?(u[n]||(u[n]={}),u[n][e]||(u[n][e]={balance:"0x0"}),u[n][e].balance!==r&&(u[n][e].balance=r,d=!0)):(h[n]||(h[n]={}),h[n][e]=r)}}),Object.entries(h).forEach(([e,t])=>{Object.entries(t).forEach(([t,s])=>{u[e]||(u[e]={}),u[e][t]||(u[e][t]={balance:"0x0"}),u[e][t].stakedBalance!==s&&(u[e][t].stakedBalance=s,d=!0)})}),d&&this.update(e=>{e.accountsByChainId=u})}finally{o()}}async syncBalanceWithAddresses(e,t){const{ethQuery:s}=f(this,a,"m",m).call(this,t);return await Promise.all(e.map(e=>(0,b.safelyExecuteWithTimeout)(async()=>{(0,A.assert)(s,"Provider not set.");const a=await(0,b.query)(s,"getBalance",[e]);let n;return f(this,r,"f")&&(n=(await f(this,o,"f").call(this,[e],t))[e]),[e,a,n]}))).then(e=>e.reduce((e,t)=>{if(!t)return e;const[s,a,n]=t;return{...e,[s]:{balance:a,stakedBalance:n}}},{}))}updateNativeBalances(e){const t=(0,v.cloneDeep)(this.state.accountsByChainId);let s=!1;e.forEach(({address:e,chainId:a,balance:n})=>{const r=(0,b.toChecksumHexAddress)(e);t[a]||(t[a]={},s=!0);const i=Boolean(t[a][r]);i||(t[a][r]={balance:"0x0"},s=!0);const o=t[a][r].balance;i&&o===n||(t[a][r].balance=n,s=!0)}),s&&this.update(e=>{e.accountsByChainId=t})}updateStakedBalances(e){const t=(0,v.cloneDeep)(this.state.accountsByChainId);let s=!1;e.forEach(({address:e,chainId:a,stakedBalance:n})=>{const r=(0,b.toChecksumHexAddress)(e);t[a]||(t[a]={},s=!0);const i=Boolean(t[a][r]);i||(t[a][r]={balance:"0x0"},s=!0);const o=t[a][r].stakedBalance;i&&(0,v.isEqual)(o,n)||(t[a][r].stakedBalance=n,s=!0)}),s&&this.update(e=>{e.accountsByChainId=t})}}s.AccountTrackerController=x,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,l=new WeakMap,u=new WeakMap,d=new WeakMap,a=new WeakSet,m=function(e){const t=e??this.messagingSystem.call("NetworkController:getState").selectedNetworkClientId,{configuration:{chainId:s},provider:a,blockTracker:n}=this.messagingSystem.call("NetworkController:getNetworkClientById",t);return{chainId:s,provider:a,ethQuery:new k.default(a),blockTracker:n}},h=function(){const{networkConfigurationsByChainId:e}=this.messagingSystem.call("NetworkController:getState");return Object.values(e).flatMap(e=>e.rpcEndpoints.map(e=>e.networkClientId))},p=function(){this.messagingSystem.registerActionHandler(`${I}:updateNativeBalances`,this.updateNativeBalances.bind(this)),this.messagingSystem.registerActionHandler(`${I}:updateStakedBalances`,this.updateStakedBalances.bind(this))},s.default=x}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/AccountTrackerController.cjs"}],[1124,{"./Standards/ERC20Standard.cjs":1142,"./Standards/NftStandards/ERC1155/ERC1155Standard.cjs":1143,"./Standards/NftStandards/ERC721/ERC721Standard.cjs":1144,"./assetsUtil.cjs":1152,"./multicall.cjs":1161,"@ethersproject/contracts":654,"@ethersproject/providers":692,"@metamask/controller-utils":1301,"@metamask/utils":2799,"single-call-balance-checker-abi":5285},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},m=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},h=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.AssetsContractController=s.MISSING_PROVIDER_ERROR=s.STAKING_CONTRACT_ADDRESS_BY_CHAINID=s.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID=void 0;const p=e("@ethersproject/contracts"),g=e("@ethersproject/providers"),f=e("@metamask/controller-utils"),y=e("@metamask/utils"),w=h(e("single-call-balance-checker-abi")),b=e("./assetsUtil.cjs"),k=e("./multicall.cjs"),S=e("./Standards/ERC20Standard.cjs"),A=e("./Standards/NftStandards/ERC1155/ERC1155Standard.cjs"),T=e("./Standards/NftStandards/ERC721/ERC721Standard.cjs");s.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID={[b.SupportedTokenDetectionNetworks.mainnet]:"0xb1f8e55c7f64d203c1400b9d8555d050f94adf39",[b.SupportedTokenDetectionNetworks.bsc]:"0x2352c63A83f9Fd126af8676146721Fa00924d7e4",[b.SupportedTokenDetectionNetworks.polygon]:"0x2352c63A83f9Fd126af8676146721Fa00924d7e4",[b.SupportedTokenDetectionNetworks.avax]:"0xD023D153a0DFa485130ECFdE2FAA7e612EF94818",[b.SupportedTokenDetectionNetworks.aurora]:"0x1286415D333855237f89Df27D388127181448538",[b.SupportedTokenDetectionNetworks.linea_goerli]:"0x10dAd7Ca3921471f616db788D9300DC97Db01783",[b.SupportedTokenDetectionNetworks.linea_mainnet]:"0xF62e6a41561b3650a69Bb03199C735e3E3328c0D",[b.SupportedTokenDetectionNetworks.arbitrum]:"0x151E24A486D7258dd7C33Fb67E4bB01919B7B32c",[b.SupportedTokenDetectionNetworks.optimism]:"0xB1c568e9C3E6bdaf755A60c7418C269eb11524FC",[b.SupportedTokenDetectionNetworks.base]:"0x6AA75276052D96696134252587894ef5FFA520af",[b.SupportedTokenDetectionNetworks.zksync]:"0x458fEd3144680a5b8bcfaa0F9594aa19B4Ea2D34",[b.SupportedTokenDetectionNetworks.cronos]:"0x768ca200f0fc702ac9ea502498c18f5eff176378",[b.SupportedTokenDetectionNetworks.celo]:"0x6aa75276052d96696134252587894ef5ffa520af",[b.SupportedTokenDetectionNetworks.gnosis]:"0x6aa75276052d96696134252587894ef5ffa520af",[b.SupportedTokenDetectionNetworks.fantom]:"0x6aa75276052d96696134252587894ef5ffa520af",[b.SupportedTokenDetectionNetworks.polygon_zkevm]:"0x6aa75276052d96696134252587894ef5ffa520af",[b.SupportedTokenDetectionNetworks.moonbeam]:"0x6aa75276052d96696134252587894ef5ffa520af",[b.SupportedTokenDetectionNetworks.moonriver]:"0x6aa75276052d96696134252587894ef5ffa520af",[b.SupportedTokenDetectionNetworks.monad_mainnet]:"0xC856736BFe4DcB217F6678Ff2C4D7A7939B29A88"},s.STAKING_CONTRACT_ADDRESS_BY_CHAINID={[b.SupportedStakedBalanceNetworks.mainnet]:"0x4fef9d741011476750a243ac70b9789a63dd47df",[b.SupportedStakedBalanceNetworks.hoodi]:"0xe96ac18cfe5a7af8fe1fe7bc37ff110d88bc67ff"},s.MISSING_PROVIDER_ERROR="AssetsContractController failed to set the provider correctly. A provider must be set for this method to be available";const v="AssetsContractController";class E{constructor({messenger:e,chainId:t}){a.add(this),this.name=v,n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),this.messagingSystem=e,d(this,n,undefined,"f"),d(this,r,f.IPFS_DEFAULT_GATEWAY_URL,"f"),d(this,i,t,"f"),m(this,a,"m",o).call(this),m(this,a,"m",c).call(this)}setProvider(e){d(this,n,e,"f")}get ipfsGateway(){return m(this,r,"f")}get chainId(){return m(this,i,"f")}getERC20Standard(e){const t=m(this,a,"m",l).call(this,e);return new S.ERC20Standard(t)}getERC721Standard(e){const t=m(this,a,"m",l).call(this,e);return new T.ERC721Standard(t)}getERC1155Standard(e){const t=m(this,a,"m",l).call(this,e);return new A.ERC1155Standard(t)}async getERC20BalanceOf(e,t,s){return this.getERC20Standard(s).getBalanceOf(e,t)}async getERC20TokenDecimals(e,t){return this.getERC20Standard(t).getTokenDecimals(e)}async getERC20TokenName(e,t){return this.getERC20Standard(t).getTokenName(e)}async getERC721NftTokenId(e,t,s,a){return this.getERC721Standard(a).getNftTokenId(e,t,s)}async getTokenStandardAndDetails(e,t,s,n){m(this,a,"m",l).call(this,n);try{const t=this.getERC721Standard(n);return{...await t.getDetails(e,m(this,r,"f"),s)}}catch{}try{const t=this.getERC1155Standard(n);return{...await t.getDetails(e,m(this,r,"f"),s)}}catch{}try{const s=this.getERC20Standard(n);return{...await s.getDetails(e,t)}}catch{}throw new Error("Unable to determine contract standard")}async getERC721TokenURI(e,t,s){return this.getERC721Standard(s).getTokenURI(e,t)}async getERC721AssetName(e,t){return this.getERC721Standard(t).getAssetName(e)}async getERC721AssetSymbol(e,t){return this.getERC721Standard(t).getAssetSymbol(e)}async getERC721OwnerOf(e,t,s){return this.getERC721Standard(s).getOwnerOf(e,t)}async getERC1155TokenURI(e,t,s){return this.getERC1155Standard(s).getTokenURI(e,t)}async getERC1155BalanceOf(e,t,s,a){return this.getERC1155Standard(a).getBalanceOf(t,e,s)}async transferSingleERC1155(e,t,s,a,n,r){return this.getERC1155Standard(r).transferSingle(e,t,s,a,n)}async getBalancesInSingleCall(e,t,n){const r=m(this,a,"m",u).call(this,n),i=m(this,a,"m",l).call(this,n);if(!(r in s.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID))return{};const o=s.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID[r],c=new p.Contract(o,w.default,i),d=await c.balances([e],t),h={};return d.length>0&&t.forEach((e,t)=>{const s=d[t];"0"!==String(s)&&(h[e]=s)}),h}async getStakedBalanceForChain(e,t){const n=m(this,a,"m",u).call(this,t),r=m(this,a,"m",l).call(this,t),i=e.reduce((e,t)=>(e[t]="0x00",e),{});if(![b.SupportedStakedBalanceNetworks.mainnet,b.SupportedStakedBalanceNetworks.hoodi].includes(n))return{};if(!(n in s.STAKING_CONTRACT_ADDRESS_BY_CHAINID))return{};const o=s.STAKING_CONTRACT_ADDRESS_BY_CHAINID[n],c=[{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"shares",type:"uint256"}],name:"convertToAssets",outputs:[{internalType:"uint256",name:"assets",type:"uint256"}],stateMutability:"view",type:"function"}];try{const t=e.map(e=>({contract:new p.Contract(o,c,r),functionSignature:"getShares(address)",arguments:[e]})),s=(await(0,k.multicallOrFallback)(t,n,r)).map((t,s)=>t.success&&t.value.gt(0)?{address:e[s],call:{contract:new p.Contract(o,c,r),functionSignature:"convertToAssets(uint256)",arguments:[t.value.toString()]}}:null).filter(Boolean);(await(0,k.multicallOrFallback)(s.map(e=>e.call),n,r)).forEach((e,t)=>{if(e.success&&e.value){const{address:a}=s[t];i[a]=e.value.toHexString()}})}catch(e){console.error(e)}return i}}s.AssetsContractController=E,n=new WeakMap,r=new WeakMap,i=new WeakMap,a=new WeakSet,o=function(){const e=["constructor","messagingSystem","setProvider","provider","ipfsGateway","chainId"];(0,y.getKnownPropertyNames)(Object.getPrototypeOf(this)).forEach(t=>{(t=>!e.find(e=>e===t)&&"function"==typeof this[t])(t)&&this.messagingSystem.registerActionHandler(`${v}:${t}`,this[t].bind(this))})},c=function(){this.messagingSystem.subscribe("PreferencesController:stateChange",({ipfsGateway:e})=>{d(this,r,e,"f")}),this.messagingSystem.subscribe("NetworkController:networkDidChange",({selectedNetworkClientId:e})=>{const t=m(this,a,"m",u).call(this,e);m(this,i,"f")!==t&&(d(this,i,t,"f"),d(this,n,m(this,a,"m",l).call(this),"f"))})},l=function(e){const t=e?this.messagingSystem.call("NetworkController:getNetworkClientById",e).provider:this.messagingSystem.call("NetworkController:getSelectedNetworkClient")?.provider??m(this,n,"f");if(t===undefined)throw new Error(s.MISSING_PROVIDER_ERROR);return new g.Web3Provider(t)},u=function(e){if(e){const t=this.messagingSystem.call("NetworkController:getNetworkConfigurationByNetworkClientId",e);if(t)return t.chainId}const{selectedNetworkClientId:t}=this.messagingSystem.call("NetworkController:getState"),s=this.messagingSystem.call("NetworkController:getNetworkClientById",t);return s.configuration?.chainId??m(this,i,"f")},s.default=E}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/AssetsContractController.cjs"}],[1125,{"./crypto-compare-service/index.cjs":1156,"@metamask/controller-utils":1301,"@metamask/polling-controller":2280,"async-mutex":3582},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.CurrencyRateController=void 0;const a=e("@metamask/controller-utils"),n=e("@metamask/polling-controller"),r=e("async-mutex"),i=e("./crypto-compare-service/index.cjs"),o={currentCurrency:{includeInStateLogs:!0,persist:!0,anonymous:!0,usedInUi:!0},currencyRates:{includeInStateLogs:!0,persist:!0,anonymous:!0,usedInUi:!0}},c={currentCurrency:"usd",currencyRates:{ETH:{conversionDate:0,conversionRate:0,usdConversionRate:null}}};class l extends((0,n.StaticIntervalPollingController)()){constructor({includeUsdRate:e=!1,interval:t=18e4,useExternalServices:s=()=>!0,messenger:a,state:n,fetchMultiExchangeRate:l=i.fetchMultiExchangeRate}){super({name:"CurrencyRateController",metadata:o,messenger:a,state:{...c,...n}}),this.mutex=new r.Mutex,this.includeUsdRate=e,this.useExternalServices=s,this.setIntervalLength(t),this.fetchMultiExchangeRate=l}async setCurrentCurrency(e){const t=await this.mutex.acquire(),s=Object.keys(this.state.currencyRates);try{this.update(()=>({...c,currentCurrency:e}))}finally{t()}this.updateExchangeRate(s)}async updateExchangeRate(e){if(!this.useExternalServices())return;const t=await this.mutex.acquire();try{const{currentCurrency:t}=this.state,s=Object.values(a.TESTNET_TICKER_SYMBOLS),n=e.reduce((e,t)=>t?(e[t]=s.includes(t)?a.FALL_BACK_VS_CURRENCY:t,e):e,{}),r=await this.fetchMultiExchangeRate(t,[...new Set(Object.values(n))],this.includeUsdRate),i=Object.entries(n).reduce((e,[s,a])=>{const n=r[a.toLowerCase()];return e[s]={conversionDate:n!==undefined?Date.now()/1e3:null,conversionRate:n?.[t.toLowerCase()]??null,usdConversionRate:n?.usd??null},e},{});this.update(e=>{e.currencyRates={...e.currencyRates,...i}})}catch(e){throw console.error("Failed to fetch exchange rates.",e),e}finally{t()}}destroy(){super.destroy(),this.stopAllPolling()}async _executePoll({nativeCurrencies:e}){await this.updateExchangeRate(e)}}s.CurrencyRateController=l,s.default=l}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/CurrencyRateController.cjs"}],[1126,{"../assetsUtil.cjs":1152,"./calculate-defi-metrics.cjs":1127,"./fetch-positions.cjs":1128,"./group-defi-positions.cjs":1129,"@metamask/polling-controller":2280},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},d=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.DeFiPositionsController=s.getDefaultDefiPositionsControllerState=void 0;const m=e("@metamask/polling-controller"),h=e("./calculate-defi-metrics.cjs"),p=e("./fetch-positions.cjs"),g=e("./group-defi-positions.cjs"),f=e("../assetsUtil.cjs"),y={allDeFiPositions:{includeInStateLogs:!1,persist:!1,anonymous:!1,usedInUi:!0},allDeFiPositionsCount:{includeInStateLogs:!1,persist:!1,anonymous:!1,usedInUi:!1}};s.getDefaultDefiPositionsControllerState=()=>({allDeFiPositions:{},allDeFiPositionsCount:{}});class w extends((0,m.StaticIntervalPollingController)()){constructor({messenger:e,isEnabled:t=()=>!0,trackEvent:c}){super({name:"DeFiPositionsController",metadata:y,messenger:e,state:(0,s.getDefaultDefiPositionsControllerState)()}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),this.setIntervalLength(6e5),u(this,n,(0,p.buildPositionFetcher)(),"f"),u(this,r,t,"f"),this.messagingSystem.subscribe("KeyringController:unlock",()=>{this.startPolling(null)}),this.messagingSystem.subscribe("KeyringController:lock",()=>{this.stopAllPolling()}),this.messagingSystem.subscribe("TransactionController:transactionConfirmed",async e=>{d(this,r,"f").call(this)&&await d(this,a,"m",o).call(this,e.txParams.from)}),this.messagingSystem.subscribe("AccountsController:accountAdded",async e=>{d(this,r,"f").call(this)&&e.type.startsWith("eip155:")&&await d(this,a,"m",o).call(this,e.address)}),u(this,i,c,"f")}async _executePoll(){if(!d(this,r,"f").call(this))return;const e=this.messagingSystem.call("AccountsController:listAccounts"),t=(await(0,f.reduceInBatchesSerially)({initialResult:[],values:e,batchSize:10,eachBatch:async(e,t)=>[...e,...(await Promise.all(t.map(async({address:e,type:t})=>{if(t.startsWith("eip155:")){return{accountAddress:e,positions:await d(this,a,"m",c).call(this,e)}}return undefined}))).filter(Boolean)]})).reduce((e,{accountAddress:t,positions:s})=>(e[t]=s,e),{});this.update(e=>{e.allDeFiPositions=t})}}s.DeFiPositionsController=w,n=new WeakMap,r=new WeakMap,i=new WeakMap,a=new WeakSet,o=async function(e){const t=await d(this,a,"m",c).call(this,e);this.update(s=>{s.allDeFiPositions[e]=t})},c=async function(e){try{const t=await d(this,n,"f").call(this,e),s=(0,g.groupDeFiPositions)(t);try{d(this,a,"m",l).call(this,s,e)}catch(t){console.error(`Failed to update positions count for account ${e}:`,t)}return s}catch{return null}},l=function(e,t){if(!d(this,i,"f"))return;const s=(0,h.calculateDeFiPositionMetrics)(e),{totalPositions:a}=s.properties;a!==this.state.allDeFiPositionsCount[t]&&(this.update(e=>{e.allDeFiPositionsCount[t]=a}),d(this,i,"f")?.call(this,s))}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/DeFiPositionsController/DeFiPositionsController.cjs"}],[1127,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.calculateDeFiPositionMetrics=void 0,s.calculateDeFiPositionMetrics=function(e){let t=0,s=0;const a=[];return Object.entries(e).forEach(([e,n])=>{const r=n.aggregatedMarketValue;t+=r,Object.entries(n.protocols).forEach(([t,n])=>{const r=n.aggregatedMarketValue,i=Object.values(n.positionTypes).reduce((e,t)=>e+(t?.positions?.flat().length||0),0);s+=i,a.push({protocolId:t,marketValueUSD:r,chainId:e,count:i})})}),{category:"DeFi",event:"DeFi Stats",properties:{totalMarketValueUSD:t,totalPositions:s,breakdown:a}}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/DeFiPositionsController/calculate-defi-metrics.cjs"}],[1128,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.buildPositionFetcher=s.DEFI_POSITIONS_API_URL=void 0,s.DEFI_POSITIONS_API_URL="https://defiadapters.api.cx.metamask.io",s.buildPositionFetcher=function(){return async e=>{const t=await fetch(`${s.DEFI_POSITIONS_API_URL}/positions/${e}`);if(200!==t.status)throw new Error(`Unable to fetch defi positions - HTTP ${t.status}`);return(await t.json()).data}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/DeFiPositionsController/fetch-positions.cjs"}],[1129,{"@metamask/controller-utils":1301},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.groupDeFiPositions=void 0;const a=e("@metamask/controller-utils");function n(e){if(!e.tokens)return{...e,marketValue:e.price?e.balance*e.price:undefined};const t=e.tokens.map(e=>{const{tokens:t,...s}=n(e);return s}),s=t.reduce((e,t)=>e===undefined||t.marketValue===undefined?undefined:e+t.marketValue,0);return{...e,marketValue:s,tokens:t}}s.groupDeFiPositions=function(e){const t={};for(const s of e){if(!s.success)continue;const{chainId:e,protocolId:r,iconUrl:i,positionType:o,protocolDisplayName:c}=s,l=(0,a.toHex)(e);t[l]||(t[l]={aggregatedMarketValue:0,protocols:{}});const u=t[l];u.protocols[r]||(u.protocols[r]={protocolDetails:{name:c,iconUrl:i},aggregatedMarketValue:0,positionTypes:{}});const d=u.protocols[r];let m=d.positionTypes[o];m||(m={aggregatedMarketValue:0,positions:[]},d.positionTypes[o]=m);for(const e of s.tokens){const t=n(e);if(s.metadata?.groupPositions?0===m.positions.length?m.positions.push([t]):m.positions[0].push(t):m.positions.push([t]),t.marketValue){const e="borrow"===s.positionType?-1:1;m.aggregatedMarketValue+=t.marketValue,d.aggregatedMarketValue+=t.marketValue*e,u.aggregatedMarketValue+=t.marketValue*e}}}return t}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/DeFiPositionsController/group-defi-positions.cjs"}],[1130,{"./utils.cjs":1132,"@metamask/base-controller":1222,"@metamask/keyring-api":1994,"@metamask/keyring-snap-client":2015,"@metamask/snaps-utils":2677,"@metamask/utils":2799,"async-mutex":3582},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g,f,y,w,b,k,S,A,T,v=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},E=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainAssetsController=s.getDefaultMultichainAssetsControllerState=void 0;const C=e("@metamask/base-controller"),I=e("@metamask/keyring-api"),_=e("@metamask/keyring-snap-client"),P=e("@metamask/snaps-utils"),R=e("@metamask/utils"),x=e("async-mutex"),N=e("./utils.cjs"),M="MultichainAssetsController";function D(){return{accountsAssets:{},assetsMetadata:{}}}s.getDefaultMultichainAssetsControllerState=D;const O={assetsMetadata:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0},accountsAssets:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0}};class j extends C.BaseController{constructor({messenger:e,state:t={}}){super({messenger:e,name:M,metadata:O,state:{accountsAssets:{},assetsMetadata:{},...t}}),a.add(this),n.set(this,void 0),r.set(this,new x.Mutex),v(this,n,{},"f"),this.messagingSystem.subscribe("AccountsController:accountAdded",async e=>await E(this,a,"m",o).call(this,e)),this.messagingSystem.subscribe("AccountsController:accountRemoved",async e=>await E(this,a,"m",m).call(this,e)),this.messagingSystem.subscribe("AccountsController:accountAssetListUpdated",async e=>await E(this,a,"m",i).call(this,e)),E(this,a,"m",c).call(this)}getAssetMetadata(e){return this.state.assetsMetadata[e]}}s.MultichainAssetsController=j,n=new WeakMap,r=new WeakMap,a=new WeakSet,i=async function(e){return E(this,a,"m",T).call(this,async()=>E(this,a,"m",l).call(this,e))},o=async function(e){return E(this,a,"m",T).call(this,async()=>E(this,a,"m",d).call(this,e))},c=function(){this.messagingSystem.registerActionHandler("MultichainAssetsController:getAssetMetadata",this.getAssetMetadata.bind(this))},l=async function(e){E(this,a,"m",A).call(this);const t=new Set([]),s={};for(const[a,{added:n,removed:r}]of Object.entries(e.assets))if(n.length>0||r.length>0){const e=this.state.accountsAssets[a]||[],i=n.filter(t=>!e.includes(t)&&(0,R.isCaipAssetType)(t)),o=r.filter(t=>e.includes(t)&&(0,R.isCaipAssetType)(t));(i.length>0||o.length>0)&&(s[a]={added:i,removed:o});for(const s of e)t.add(s);for(const e of i)t.add(e);for(const e of o)t.delete(e)}this.update(e=>{for(const[t,{added:a,removed:n}]of Object.entries(s)){const s=new Set([...e.accountsAssets[t]||[],...a]);for(const e of n)s.delete(e);e.accountsAssets[t]=Array.from(s)}}),await E(this,a,"m",h).call(this,Array.from(t)),this.messagingSystem.publish(`${M}:accountAssetListUpdated`,{assets:s})},u=function(e){return!(0,I.isEvmAccountType)(e.type)&&e.metadata.snap!==undefined},d=async function(e){if(E(this,a,"m",u).call(this,e)&&(E(this,a,"m",A).call(this),e.metadata.snap)){const t=await E(this,a,"m",k).call(this,e.id,e.metadata.snap.id);await E(this,a,"m",h).call(this,t),this.update(s=>{s.accountsAssets[e.id]=t}),this.messagingSystem.publish(`${M}:accountAssetListUpdated`,{assets:{[e.id]:{added:t,removed:[]}}})}},m=async function(e){this.state.accountsAssets[e]&&this.update(t=>{delete t.accountsAssets[e]})},h=async function(e){E(this,a,"m",A).call(this);const t=e.filter(e=>!this.state.assetsMetadata[e]);t.length>0&&(t.every(e=>{const{chainId:t}=(0,R.parseCaipAssetType)(e);return Boolean(E(this,a,"m",f).call(this,t))})||v(this,n,E(this,a,"m",g).call(this),"f"),await E(this,a,"m",p).call(this,t))},p=async function(e){const t={};for(const s of e){const{chainId:e}=(0,R.parseCaipAssetType)(s);t[e]||(t[e]=[]),t[e].push(s)}let s={};for(const e of Object.keys(t)){const n=t[e],r=E(this,a,"m",f).call(this,e);if(r){const e=await E(this,a,"m",b).call(this,n,r.id);s={...s,...e?.assets??{}}}}this.update(e=>{e.assetsMetadata={...this.state.assetsMetadata,...s}})},g=function(){const e={},t=E(this,a,"m",y).call(this),s=t.map(e=>E(this,a,"m",w).call(this,e.id));for(const[a,n]of s.entries()){let s;for(const r of Object.values(n))if(s=(0,N.getChainIdsCaveat)(r),s)for(const n of s)e[n]||(e[n]=[]),e[n].push(t[a])}return e},f=function(e){const t=E(this,n,"f")[e];return t?.[0]},y=function(){return this.messagingSystem.call("SnapController:getAll").filter(e=>e.enabled&&!e.blocked)},w=function(e){return this.messagingSystem.call("PermissionController:getPermissions",e)},b=async function(e,t){try{return await this.messagingSystem.call("SnapController:handleRequest",{snapId:t,origin:"metamask",handler:P.HandlerType.OnAssetsLookup,request:{jsonrpc:"2.0",method:"onAssetLookup",params:{assets:e}}})}catch(e){return console.error(e),undefined}},k=async function(e,t){return await E(this,a,"m",S).call(this,t).listAccountAssets(e)},S=function(e){return new _.KeyringClient({send:async t=>await this.messagingSystem.call("SnapController:handleRequest",{snapId:e,origin:"metamask",handler:P.HandlerType.OnKeyringRequest,request:t})})},A=function(){if(!E(this,r,"f").isLocked())throw new Error("MultichainAssetsControllerError - Attempt to update state")},T=async function(e){return async function(e,t){const s=await e.acquire();try{return await t({releaseLock:s})}finally{s()}}(E(this,r,"f"),e)}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsController/MultichainAssetsController.cjs"}],[1131,{"./MultichainAssetsController.cjs":1130},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getDefaultMultichainAssetsControllerState=s.MultichainAssetsController=void 0;var a=e("./MultichainAssetsController.cjs");Object.defineProperty(s,"MultichainAssetsController",{enumerable:!0,get:function(){return a.MultichainAssetsController}}),Object.defineProperty(s,"getDefaultMultichainAssetsControllerState",{enumerable:!0,get:function(){return a.getDefaultMultichainAssetsControllerState}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsController/index.cjs"}],[1132,{"@metamask/snaps-utils":2677},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getChainIdsCaveat=void 0;const a=e("@metamask/snaps-utils");s.getChainIdsCaveat=function(e){if(!e?.caveats)return null;const t=e.caveats.find(e=>e.type===a.SnapCaveatType.ChainIds);return t?t.value:null}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsController/utils.cjs"}],[1133,{"./constant.cjs":1134,"@metamask/keyring-api":1994,"@metamask/polling-controller":2280,"@metamask/snaps-utils":2677,"async-mutex":3582,lodash:4534},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g,f,y,w,b,k,S=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},A=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainAssetsRatesController=s.getDefaultMultichainAssetsRatesControllerState=void 0;const T=e("@metamask/keyring-api"),v=e("@metamask/polling-controller"),E=e("@metamask/snaps-utils"),C=e("async-mutex"),I=e("lodash"),_=e("./constant.cjs");function P(){return{conversionRates:{},historicalPrices:{}}}s.getDefaultMultichainAssetsRatesControllerState=P;const R={conversionRates:{includeInStateLogs:!1,persist:!0,anonymous:!0,usedInUi:!0},historicalPrices:{includeInStateLogs:!1,persist:!1,anonymous:!0,usedInUi:!0}};class x extends((0,v.StaticIntervalPollingController)()){constructor({interval:e=18e3,state:t={},messenger:s}){var c,l;super({name:"MultichainAssetsRatesController",messenger:s,state:{conversionRates:{},historicalPrices:{},...t},metadata:R}),a.add(this),n.set(this,new C.Mutex),r.set(this,void 0),i.set(this,void 0),o.set(this,!0),this.setIntervalLength(e),this.messagingSystem.subscribe("KeyringController:lock",()=>{S(this,o,!1,"f")}),this.messagingSystem.subscribe("KeyringController:unlock",()=>{S(this,o,!0,"f")}),c=this,({accountsAssets:{set value(e){S(c,i,e,"f")}}.value}=this.messagingSystem.call("MultichainAssetsController:getState")),l=this,({currentCurrency:{set value(e){S(l,r,e,"f")}}.value}=this.messagingSystem.call("CurrencyRateController:getState")),this.messagingSystem.subscribe("CurrencyRateController:stateChange",async e=>{S(this,r,e,"f"),await this.updateAssetsRates()},e=>e.currentCurrency),this.messagingSystem.subscribe("MultichainAssetsController:accountAssetListUpdated",async({assets:e})=>{const t=Object.entries(e).map(([e,{added:t}])=>({accountId:e,assets:[...t]}));await A(this,a,"m",m).call(this,t)})}async _executePoll(){await this.updateAssetsRates()}get isActive(){return A(this,o,"f")}async updateAssetsRates(){const e=await A(this,n,"f").acquire();return(async()=>{if(!this.isActive)return;const e=A(this,a,"m",u).call(this);for(const t of e){const e=A(this,a,"m",p).call(this,t.id);if(0===e?.length)continue;const s=await A(this,a,"m",d).call(this,t,e);A(this,a,"m",w).call(this,s)}})().finally(()=>{e()})}async fetchHistoricalPricesForAsset(e,t){const s=await A(this,n,"f").acquire();return(async()=>{const s=_.MAP_CAIP_CURRENCIES[A(this,r,"f")]??_.MAP_CAIP_CURRENCIES.usd,a=this.state.historicalPrices[e]?.[A(this,r,"f")]?.expirationTime;if(!1===(a&&a<Date.now()))return;const n=t??this.messagingSystem.call("AccountsController:getSelectedMultichainAccount");try{const t=await this.messagingSystem.call("SnapController:handleRequest",{snapId:n?.metadata.snap?.id,origin:"metamask",handler:E.HandlerType.OnAssetHistoricalPrice,request:{jsonrpc:"2.0",method:E.HandlerType.OnAssetHistoricalPrice,params:{from:e,to:s}}});if(!t)return;this.update(s=>{s.historicalPrices={...s.historicalPrices,[e]:{...s.historicalPrices[e],[A(this,r,"f")]:t?.historicalPrice}}})}catch{throw new Error(`Failed to fetch historical prices for asset: ${e}`)}})().finally(()=>{s()})}}s.MultichainAssetsRatesController=x,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,a=new WeakSet,c=function(e){return!(0,T.isEvmAccountType)(e.type)&&e.metadata.snap!==undefined},l=function(){return this.messagingSystem.call("AccountsController:listMultichainAccounts")},u=function(){return A(this,a,"m",l).call(this).filter(e=>A(this,a,"m",c).call(this,e))},d=async function(e,t){if(!t.length)return{};const s=A(this,a,"m",g).call(this,t),n=await A(this,a,"m",b).call(this,{snapId:e?.metadata.snap?.id,handler:E.HandlerType.OnAssetsConversion,params:s});if(!n)return{};const i=_.MAP_CAIP_CURRENCIES[A(this,r,"f")]??_.MAP_CAIP_CURRENCIES.usd,o={assets:t.map(e=>({asset:e,unit:i}))},c=await A(this,a,"m",b).call(this,{snapId:e?.metadata.snap?.id,handler:E.HandlerType.OnAssetsMarketData,params:o}),l=A(this,a,"m",k).call(this,n,c),u=A(this,a,"m",f).call(this,l);return A(this,a,"m",y).call(this,t,u)},m=async function(e){const t=await A(this,n,"f").acquire();return(async()=>{if(!this.isActive)return;const t={};for(const{accountId:s,assets:n}of e){const e=A(this,a,"m",h).call(this,s),r=await A(this,a,"m",d).call(this,e,n);for(const[e,s]of Object.entries(r))t[e]=s}A(this,a,"m",w).call(this,t)})().finally(()=>{t()})},h=function(e){const t=A(this,a,"m",u).call(this).find(t=>t.id===e);if(!t)throw new Error(`Unknown account: ${e}`);return t},p=function(e){return A(this,i,"f")?.[e]??[]},g=function(e){const t=_.MAP_CAIP_CURRENCIES[A(this,r,"f")]??_.MAP_CAIP_CURRENCIES.usd;return{conversions:e.map(e=>({from:e,to:t}))}},f=function(e){if(!e?.conversionRates)return{};const{conversionRates:t}=e;return Object.fromEntries(Object.entries(t).map(([e,t])=>[e,Object.values(t)[0]]))},y=function(e,t){const s={};for(const a of e)t[a]&&(s[a]={...t[a],currency:_.MAP_CAIP_CURRENCIES[A(this,r,"f")]??_.MAP_CAIP_CURRENCIES.usd});return s},w=function(e){0!==Object.keys(e).length&&this.update(t=>{t.conversionRates={...t.conversionRates,...e}})},b=async function({snapId:e,handler:t,params:s}){try{return await this.messagingSystem.call("SnapController:handleRequest",{snapId:e,origin:"metamask",handler:t,request:{jsonrpc:"2.0",method:t,params:s}})}catch(a){return console.error(`Snap request failed for ${t}:`,{snapId:e,handler:t,message:a.message,params:s}),undefined}},k=function(e,t){if(!t?.marketData)return e;const s=(0,I.cloneDeep)(e),{conversionRates:a}=s,{marketData:n}=t;for(const[e,t]of Object.entries(n)){const s=e;for(const[e,n]of Object.entries(t)){const t=e,r=a[s][t];r&&(a[s][t]={...r,marketData:n??undefined})}}return s}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsRatesController/MultichainAssetsRatesController.cjs"}],[1134,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MAP_CAIP_CURRENCIES=void 0,s.MAP_CAIP_CURRENCIES={btc:"bip122:000000000019d6689c085ae165831e93/slip44:0",eth:"eip155:1/slip44:60",ltc:"bip122:12a765e31ffd4059bada1e25190f6e98/slip44:2",bch:"bip122:000000000000000000651ef99cb9fcbe/slip44:145",bnb:"cosmos:Binance-Chain-Tigris/slip44:714",eos:"eos:aca376f2/slip44:194",xrp:"xrpl:mainnet/slip44:144",xlm:"stellar:pubnet/slip44:148",link:"eip155:1/erc20:0x514910771af9Ca656af840dff83E8264EcF986CA",dot:"polkadot:91b171bb158e2d3848fa23a9f1c25182/slip44:354",yfi:"eip155:1/erc20:0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e",usd:"swift:0/iso4217:USD",aed:"swift:0/iso4217:AED",ars:"swift:0/iso4217:ARS",aud:"swift:0/iso4217:AUD",bdt:"swift:0/iso4217:BDT",bhd:"swift:0/iso4217:BHD",bmd:"swift:0/iso4217:BMD",brl:"swift:0/iso4217:BRL",cad:"swift:0/iso4217:CAD",chf:"swift:0/iso4217:CHF",clp:"swift:0/iso4217:CLP",cny:"swift:0/iso4217:CNY",czk:"swift:0/iso4217:CZK",dkk:"swift:0/iso4217:DKK",eur:"swift:0/iso4217:EUR",gbp:"swift:0/iso4217:GBP",hkd:"swift:0/iso4217:HKD",huf:"swift:0/iso4217:HUF",idr:"swift:0/iso4217:IDR",ils:"swift:0/iso4217:ILS",inr:"swift:0/iso4217:INR",jpy:"swift:0/iso4217:JPY",krw:"swift:0/iso4217:KRW",kwd:"swift:0/iso4217:KWD",lkr:"swift:0/iso4217:LKR",mmk:"swift:0/iso4217:MMK",mxn:"swift:0/iso4217:MXN",myr:"swift:0/iso4217:MYR",ngn:"swift:0/iso4217:NGN",nok:"swift:0/iso4217:NOK",nzd:"swift:0/iso4217:NZD",php:"swift:0/iso4217:PHP",pkr:"swift:0/iso4217:PKR",pln:"swift:0/iso4217:PLN",rub:"swift:0/iso4217:RUB",sar:"swift:0/iso4217:SAR",sek:"swift:0/iso4217:SEK",sgd:"swift:0/iso4217:SGD",thb:"swift:0/iso4217:THB",try:"swift:0/iso4217:TRY",twd:"swift:0/iso4217:TWD",uah:"swift:0/iso4217:UAH",vef:"swift:0/iso4217:VEF",vnd:"swift:0/iso4217:VND",zar:"swift:0/iso4217:ZAR",xdr:"swift:0/iso4217:XDR",xag:"swift:0/iso4217:XAG",xau:"swift:0/iso4217:XAU"}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsRatesController/constant.cjs"}],[1135,{"./MultichainAssetsRatesController.cjs":1133},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getDefaultMultichainAssetsRatesControllerState=s.MultichainAssetsRatesController=void 0;var a=e("./MultichainAssetsRatesController.cjs");Object.defineProperty(s,"MultichainAssetsRatesController",{enumerable:!0,get:function(){return a.MultichainAssetsRatesController}}),Object.defineProperty(s,"getDefaultMultichainAssetsRatesControllerState",{enumerable:!0,get:function(){return a.getDefaultMultichainAssetsRatesControllerState}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsRatesController/index.cjs"}],[1136,{"@metamask/base-controller":1222,"@metamask/keyring-api":1994,"@metamask/keyring-snap-client":2015,"@metamask/snaps-utils":2677},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainBalancesController=s.getDefaultMultichainBalancesControllerState=void 0;const f=e("@metamask/base-controller"),y=e("@metamask/keyring-api"),w=e("@metamask/keyring-snap-client"),b=e("@metamask/snaps-utils");function k(){return{balances:{}}}s.getDefaultMultichainBalancesControllerState=k;const S={balances:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0}};class A extends f.BaseController{constructor({messenger:e,state:t={}}){super({messenger:e,name:"MultichainBalancesController",metadata:S,state:{balances:{},...t}}),a.add(this);for(const e of g(this,a,"m",o).call(this))this.updateBalance(e.id);this.messagingSystem.subscribe("AccountsController:accountRemoved",e=>g(this,a,"m",m).call(this,e)),this.messagingSystem.subscribe("AccountsController:accountBalancesUpdated",e=>g(this,a,"m",d).call(this,e)),this.messagingSystem.subscribe("MultichainAssetsController:accountAssetListUpdated",async({assets:e})=>{const t=Object.entries(e).map(([e,{added:t}])=>({accountId:e,assets:[...t]}));await g(this,a,"m",n).call(this,t)})}async updateBalance(e){await g(this,a,"m",r).call(this,e,g(this,a,"m",c).call(this,e))}}s.MultichainBalancesController=A,a=new WeakSet,n=async function(e){const{isUnlocked:t}=this.messagingSystem.call("KeyringController:getState");if(!t)return;const s={};for(const{accountId:t,assets:n}of e){const e=g(this,a,"m",l).call(this,t);if(e.metadata.snap){const r=await g(this,a,"m",h).call(this,e.id,e.metadata.snap.id,n);s[t]=r}}0!==Object.keys(s).length&&this.update(e=>{for(const[t,a]of Object.entries(s))if(e.balances[t]&&0!==Object.keys(e.balances[t]).length)for(const s in a)e.balances[t][s]||(e.balances[t][s]=a[s]);else e.balances[t]=a})},r=async function(e,t){const{isUnlocked:s}=this.messagingSystem.call("KeyringController:getState");if(s)try{const s=g(this,a,"m",l).call(this,e);if(s.metadata.snap){const n=await g(this,a,"m",h).call(this,s.id,s.metadata.snap.id,t);this.update(t=>{t.balances[e]=n})}}catch(t){console.error(`Failed to fetch balances for account ${e}:`,t)}},i=function(){return this.messagingSystem.call("AccountsController:listMultichainAccounts")},o=function(){return g(this,a,"m",i).call(this).filter(e=>g(this,a,"m",u).call(this,e))},c=function(e){return this.messagingSystem.call("MultichainAssetsController:getState").accountsAssets[e]??[]},l=function(e){const t=g(this,a,"m",o).call(this).find(t=>t.id===e);if(!t)throw new Error(`Unknown account: ${e}`);return t},u=function(e){return!(0,y.isEvmAccountType)(e.type)&&e.metadata.snap!==undefined},d=function(e){this.update(t=>{Object.entries(e.balances).forEach(([e,s])=>{e in t.balances&&Object.assign(t.balances[e],s)})})},m=async function(e){e in this.state.balances&&this.update(t=>{delete t.balances[e]})},h=async function(e,t,s){return await g(this,a,"m",p).call(this,t).getAccountBalances(e,s)},p=function(e){return new w.KeyringClient({send:async t=>await this.messagingSystem.call("SnapController:handleRequest",{snapId:e,origin:"metamask",handler:b.HandlerType.OnKeyringRequest,request:t})})}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainBalancesController/MultichainBalancesController.cjs"}],[1137,{"./MultichainBalancesController.cjs":1136},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainBalancesController=void 0;var a=e("./MultichainBalancesController.cjs");Object.defineProperty(s,"MultichainBalancesController",{enumerable:!0,get:function(){return a.MultichainBalancesController}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainBalancesController/index.cjs"}],[1138,{"./assetsUtil.cjs":1152,"./constants.cjs":1154,"@ethersproject/address":638,"@metamask/base-controller":1222,"@metamask/controller-utils":1301,"@metamask/phishing-controller":2274,"@metamask/rpc-errors":2384,"@metamask/utils":2799,"async-mutex":3582,"bn.js":3699,uuid:5366},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g,f,y,w,b,k,S,A,T,v,E,C,I,_,P,R,x=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},N=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},M=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.NftController=s.getDefaultNftControllerState=void 0;const D=e("@ethersproject/address"),O=e("@metamask/base-controller"),j=e("@metamask/controller-utils"),B=e("@metamask/phishing-controller"),L=e("@metamask/rpc-errors"),F=e("@metamask/utils"),$=e("async-mutex"),U=M(e("bn.js")),G=e("uuid"),W=e("./assetsUtil.cjs"),H=e("./constants.cjs"),q={allNftContracts:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0},allNfts:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0},ignoredNfts:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!1}},Y="allNfts",V="allNftContracts";s.getDefaultNftControllerState=()=>({allNftContracts:{},allNfts:{},ignoredNfts:[]});class K extends O.BaseController{constructor({ipfsGateway:e=j.IPFS_DEFAULT_GATEWAY_URL,displayNftMedia:t=!1,useIpfsSubdomains:h=!0,isIpfsGatewayEnabled:p=!0,onNftAdded:g,messenger:f,state:y={}}){super({name:"NftController",metadata:q,messenger:f,state:{...(0,s.getDefaultNftControllerState)(),...y}}),a.add(this),n.set(this,new $.Mutex),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),l.set(this,void 0),u.set(this,void 0),x(this,r,this.messagingSystem.call("AccountsController:getSelectedAccount").id,"f"),x(this,i,e,"f"),x(this,o,t,"f"),x(this,c,h,"f"),x(this,l,p,"f"),x(this,u,g,"f"),this.messagingSystem.subscribe("PreferencesController:stateChange",N(this,a,"m",d).bind(this)),this.messagingSystem.subscribe("AccountsController:selectedEvmAccountChange",N(this,a,"m",m).bind(this))}getNftApi(){return`${j.NFT_API_BASE_URL}/tokens`}async watchNft(e,t,s,n,{userAddress:r}={}){const i=N(this,a,"m",I).call(this,r);if(!i)return;if(!n)throw L.rpcErrors.invalidParams("Network client id is required");await N(this,a,"m",C).call(this,e,t,i,n);const o=await N(this,a,"m",w).call(this,e.address,e.tokenId,n),c=await N(this,a,"m",R).call(this,o);if(c.standard&&c.standard!==t)throw L.rpcErrors.invalidInput(`Suggested NFT of type ${c.standard} does not match received type ${t}`);const l={asset:{...e,...c},type:t,id:(0,G.v4)(),time:Date.now(),interactingAddress:i,origin:s};await this._requestApproval(l);const{address:u,tokenId:d}=e,{name:m,standard:h,description:p,image:g}=c;await this.addNft(u,d,n,{nftMetadata:{name:m??null,description:p??null,image:g??null,standard:h??null},userAddress:r,source:H.Source.Dapp})}async isNftOwner(e,t,s,a){try{const n=await this.messagingSystem.call("AssetsContractController:getERC721OwnerOf",t,s,a);return e.toLowerCase()===n.toLowerCase()}catch{}try{return!(await this.messagingSystem.call("AssetsContractController:getERC1155BalanceOf",e,t,s,a)).isZero()}catch{}throw new Error("Unable to verify ownership. Possibly because the standard is not supported or the user's currently selected network does not match the chain of the asset in question.")}async addNftVerifyOwnership(e,t,s,{userAddress:n,source:r}={}){const i=N(this,a,"m",I).call(this,n);if(!await this.isNftOwner(i,e,t,s))throw new Error("This NFT is not owned by the user");await this.addNft(e,t,s,{userAddress:i,source:r})}async addNft(e,t,s,{nftMetadata:n,userAddress:r,source:i=H.Source.Custom}={}){const o=N(this,a,"m",I).call(this,r);if(!o)return;const c=(0,j.toChecksumHexAddress)(e);if(n)n=await N(this,a,"m",R).call(this,n);else{const e=await N(this,a,"m",w).call(this,c,t,s);n=await N(this,a,"m",R).call(this,e)}const l=(await N(this,a,"m",A).call(this,s,{tokenAddress:c,userAddress:o,source:i,nftMetadata:n})).find(e=>e.address.toLowerCase()===c.toLowerCase()),{configuration:{chainId:u}}=this.messagingSystem.call("NetworkController:getNetworkClientById",s);n.chainId||(n.chainId=(0,j.convertHexToDecimal)(u)),l&&await N(this,a,"m",S).call(this,c,t,n,l,u,o,i)}async updateNftMetadata({nfts:e,userAddress:t}){const s=N(this,a,"m",I).call(this,t),r=await N(this,n,"f").acquire();try{const t=e.map(e=>({...e,address:(0,j.toChecksumHexAddress)(e.address)})),n=await Promise.all(t.map(async e=>{const t=this.messagingSystem.call("NetworkController:findNetworkClientIdByChainId",(0,j.toHex)(e.chainId));return{nft:e,newMetadata:t?await N(this,a,"m",w).call(this,e.address,e.tokenId,t):undefined}})),r=n.map(e=>e.newMetadata),i=await N(this,a,"m",P).call(this,r),o=n.map((e,t)=>({nft:e.nft,newMetadata:i[t]})),c=[],{allNfts:l}=this.state,u=t.map(e=>l[s]?.[(0,j.toHex)(e.chainId)]?.find(t=>t.address.toLowerCase()===e.address.toLowerCase()&&t.tokenId===e.tokenId));o.forEach(e=>{const t=u.find(t=>t?.address.toLowerCase()===e.nft.address.toLowerCase()&&t?.tokenId===e.nft.tokenId);if(t&&e.newMetadata){(0,W.compareNftMetadata)(e.newMetadata,t)&&c.push({nft:e.nft,newMetadata:e.newMetadata})}}),0!==c.length&&c.forEach(e=>this.updateNft(e.nft,e.newMetadata,s,(0,j.toHex)(e.nft.chainId)))}finally{r()}}removeNft(e,t,s,{userAddress:n}={}){const r=N(this,a,"m",I).call(this,n),{configuration:{chainId:i}}=this.messagingSystem.call("NetworkController:getNetworkClientById",s),o=(0,j.toChecksumHexAddress)(e);N(this,a,"m",v).call(this,o,t,{chainId:i,userAddress:r});const{allNfts:c}=this.state;(c[r]?.[i]||[]).find(e=>e.address.toLowerCase()===o.toLowerCase())||N(this,a,"m",E).call(this,o,{chainId:i,userAddress:r})}removeAndIgnoreNft(e,t,s,{userAddress:n}={}){const r=N(this,a,"m",I).call(this,n),{configuration:{chainId:i}}=this.messagingSystem.call("NetworkController:getNetworkClientById",s),o=(0,j.toChecksumHexAddress)(e);N(this,a,"m",T).call(this,o,t,{chainId:i,userAddress:r});const{allNfts:c}=this.state;(c[r]?.[i]||[]).find(e=>e.address.toLowerCase()===o.toLowerCase())||N(this,a,"m",E).call(this,o,{chainId:i,userAddress:r})}clearIgnoredNfts(){this.update(e=>{e.ignoredNfts=[]})}async checkAndUpdateSingleNftOwnershipStatus(e,t,s,{userAddress:n}={}){const r=N(this,a,"m",I).call(this,n),{configuration:{chainId:i}}=this.messagingSystem.call("NetworkController:getNetworkClientById",s),{address:o,tokenId:c}=e;let l=e.isCurrentlyOwned;try{l=await this.isNftOwner(r,o,c,s)}catch{}const u={...e,isCurrentlyOwned:l};if(t)return u;const{allNfts:d}=this.state,m=[...d[r]?.[i]||[]],p=m.findIndex(e=>e.tokenId===c&&e.address.toLowerCase()===o.toLowerCase());return-1!==p&&(m[p]=u,this.update(e=>{e.allNfts[r]=Object.assign({},e.allNfts[r],{[i]:m})}),N(this,a,"m",h).call(this,m,Y,{userAddress:r,chainId:i})),u}async checkAndUpdateAllNftsOwnershipStatus(e,{userAddress:t}={}){const s=N(this,a,"m",I).call(this,t),{configuration:{chainId:n}}=this.messagingSystem.call("NetworkController:getNetworkClientById",e),{allNfts:r}=this.state,i=r[s]?.[n]||[],o=await Promise.all(i.map(async s=>await this.checkAndUpdateSingleNftOwnershipStatus(s,!0,e,{userAddress:t})??s));N(this,a,"m",h).call(this,o,Y,{userAddress:s,chainId:n})}updateNftFavoriteStatus(e,t,s,n,{userAddress:r}={}){const i=N(this,a,"m",I).call(this,r),{configuration:{chainId:o}}=this.messagingSystem.call("NetworkController:getNetworkClientById",n),{allNfts:c}=this.state,l=[...c[i]?.[o]||[]],u=l.findIndex(s=>s.address===e&&s.tokenId===t);if(-1===u)return;const d={...l[u],favorite:s};l[u]=d,N(this,a,"m",h).call(this,l,Y,{chainId:o,userAddress:i})}findNftByAddressAndTokenId(e,t,s,a){const{allNfts:n}=this.state,r=n[s]?.[a]||[],i=r.findIndex(s=>s.address.toLowerCase()===e.toLowerCase()&&s.tokenId===t);return-1===i?null:{nft:r[i],index:i}}updateNft(e,t,s,n){const{allNfts:r}=this.state,i=r[s]?.[n]||[],o=this.findNftByAddressAndTokenId(e.address,e.tokenId,s,n);if(!o)return;const c={...e,...t},l=[...i.slice(0,o.index),c,...i.slice(o.index+1)];N(this,a,"m",h).call(this,l,Y,{chainId:n,userAddress:s})}resetNftTransactionStatusByTransactionId(e,t,s){const{allNfts:n}=this.state,r=n[t]?.[s]||[],i=r.findIndex(t=>t.transactionId===e);if(-1===i)return!1;const o={...r[i],transactionId:undefined},c=[...r.slice(0,i),o,...r.slice(i+1)];return N(this,a,"m",h).call(this,c,Y,{chainId:s,userAddress:t}),!0}async getNFTContractInfo(e,t){const s=new URL(N(this,a,"m",p).call(this));s.searchParams.append("chainId",t);for(const t of e)s.searchParams.append("contract",t);return await(0,j.handleFetch)(s,{headers:{Version:j.NFT_API_VERSION}})}async _requestApproval(e){return this.messagingSystem.call("ApprovalController:addRequest",{id:e.id,origin:e.origin,type:j.ApprovalType.WatchAsset,requestData:{id:e.id,interactingAddress:e.interactingAddress,asset:{address:e.asset.address,tokenId:e.asset.tokenId,name:e.asset.name,description:e.asset.description,image:e.asset.image,standard:e.asset.standard}}},!0)}resetState(){this.update(()=>(0,s.getDefaultNftControllerState)())}}s.NftController=K,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,l=new WeakMap,u=new WeakMap,a=new WeakSet,d=async function({ipfsGateway:e,isIpfsGatewayEnabled:t,displayNftMedia:s,openSeaEnabled:n}){const c=this.messagingSystem.call("AccountsController:getSelectedAccount");x(this,r,c.id,"f");const u=Boolean(s||n);if(N(this,i,"f")!==e||N(this,o,"f")!==u||N(this,l,"f")!==t){x(this,i,e,"f"),x(this,o,u,"f"),x(this,l,t,"f");(t&&""!==e||u)&&c&&await N(this,a,"m",_).call(this,c)}},m=async function(e){const t=N(this,r,"f");x(this,r,e.id,"f");(N(this,l,"f")&&""!==N(this,i,"f")||N(this,o,"f"))&&t!==e.id&&await N(this,a,"m",_).call(this,e)},h=function(e,t,{userAddress:s,chainId:a}){s&&this.update(n=>{const r=n[t],i={...r[s]||{},[a]:e};n[t]={...r,[s]:i}})},p=function(){return`${j.NFT_API_BASE_URL}/collections`},g=async function(e,t){const s=new URLSearchParams({chainIds:"1",tokens:`${e}:${t}`,includeTopBid:"true",includeAttributes:"true",includeLastSale:"true"}).toString(),a=await(0,j.fetchWithErrorHandling)({url:`${this.getNftApi()}?${s}`,options:{headers:{Version:j.NFT_API_VERSION}}}),n=new URLSearchParams({chainId:"1",id:`${a?.tokens[0]?.token?.collection?.id}`}).toString(),r=await(0,j.fetchWithErrorHandling)({url:`${j.NFT_API_BASE_URL}/collections?${n}`,options:{headers:{Version:j.NFT_API_VERSION}}});if(!a?.tokens?.[0]?.token)return{name:null,description:null,image:null,standard:null};const{image:i,metadata:{imageOriginal:o}={},name:c,description:l,collection:u,kind:d,rarityRank:m,rarity:h,attributes:p,lastSale:g,imageSmall:f}=a.tokens[0].token;return Object.assign({},{name:c||null},{description:l||null},{image:i||null},u?.creator&&{creator:u.creator},o&&{imageOriginal:o},f&&{imageThumbnail:f},d&&{standard:d.toUpperCase()},g&&{lastSale:g},p&&{attributes:p},a.tokens[0].market?.topBid&&{topBid:a.tokens[0].market?.topBid},m&&{rarityRank:m},h&&{rarity:h},(u||r)&&{collection:{...u||{},creator:u?.creator||r?.collections[0].creator,openseaVerificationStatus:r?.collections[0].openseaVerificationStatus,contractDeployedAt:r?.collections[0].contractDeployedAt,ownerCount:r?.collections[0].ownerCount,topBid:r?.collections[0].topBid}})},f=async function(e,t,s){const n=await N(this,a,"m",y).call(this,e,t,s);let r=n[0];const u=n[1],d=r.startsWith("ipfs://");if(d&&!N(this,l,"f"))return{image:null,name:null,description:null,standard:u||null,favorite:!1,tokenURI:r??null};const m=N(this,o,"f");if(!d&&!m)return{image:null,name:null,description:null,standard:u||null,favorite:!1,tokenURI:r??null};if(d&&(r=await(0,W.getFormattedIpfsUrl)(N(this,i,"f"),r,N(this,c,"f"))),r.startsWith("data:image/"))return{image:r,name:null,description:null,standard:u||null,favorite:!1,tokenURI:r??null};try{const e=await(0,j.handleFetch)(r);return{image:e[Object.prototype.hasOwnProperty.call(e,"image")?"image":"image_url"],name:e.name,description:e.description,standard:u,favorite:!1,tokenURI:r??null}}catch{return{image:null,name:null,description:null,standard:u||null,favorite:!1,tokenURI:r??null}}},y=async function(e,t,s){try{return[await this.messagingSystem.call("AssetsContractController:getERC721TokenURI",e,t,s),j.ERC721]}catch{}try{const a=await this.messagingSystem.call("AssetsContractController:getERC1155TokenURI",e,t,s);if(!a.includes("{id}"))return[a,j.ERC1155];const n=(0,F.remove0x)((0,j.BNToHex)(new U.default(t))).padStart(64,"0").toLowerCase();return[a.replace("{id}",n),j.ERC1155]}catch{}return["",""]},w=async function(e,t,s){const{configuration:{chainId:n}}=this.messagingSystem.call("NetworkController:getNetworkClientById",s),[r,i]=await Promise.all([(0,j.safelyExecute)(()=>N(this,a,"m",f).call(this,e,t,s)),N(this,o,"f")&&"0x1"===n?(0,j.safelyExecute)(()=>N(this,a,"m",g).call(this,e,t)):undefined]),c={...i,name:r?.name??i?.name??null,description:r?.description??i?.description??null,image:i?.image??r?.image??null,standard:r?.standard??i?.standard??null,tokenURI:r?.tokenURI??null};return await N(this,a,"m",R).call(this,c)},b=async function(e,t){const[s,a]=await Promise.all([this.messagingSystem.call("AssetsContractController:getERC721AssetName",e,t),this.messagingSystem.call("AssetsContractController:getERC721AssetSymbol",e,t)]);return{collection:{name:s},symbol:a,address:e}},k=async function(e,t,s){const n=await(0,j.safelyExecute)(()=>N(this,a,"m",b).call(this,e,s));return n||!Object.values(t).every(e=>null===e)?{address:e,...n,schema_name:t?.standard??null,collection:{name:null,image_url:t?.collection?.image??t?.collection?.imageUrl??null,tokenCount:t?.collection?.tokenCount??null,...t?.collection,...n?.collection}}:{address:e,asset_contract_type:null,created_date:null,schema_name:null,symbol:null,total_supply:null,description:null,external_link:null,collection:{name:null,image_url:null}}},S=async function(e,t,s,r,i,o,c){const l=await N(this,n,"f").acquire();try{const n=(0,j.toChecksumHexAddress)(e),{allNfts:l}=this.state,d=[...l[o]?.[i]??[]],m=d.find(e=>e.address.toLowerCase()===n.toLowerCase()&&e.tokenId===t);if(m){const e=(0,W.compareNftMetadata)(s,m),a=(0,W.hasNewCollectionFields)(s,m);if(!e&&m.isCurrentlyOwned&&!a)return;const r=d.findIndex(e=>e.address.toLowerCase()===n.toLowerCase()&&e.tokenId===t);-1!==r&&(d[r]={...m,...s})}else{const e={address:n,tokenId:t,favorite:!1,isCurrentlyOwned:!0,...s};d.push(e)}N(this,a,"m",h).call(this,d,Y,{chainId:i,userAddress:o}),N(this,u,"f")&&N(this,u,"f").call(this,{address:n,symbol:r.symbol,tokenId:t.toString(),standard:s.standard,source:c})}finally{l()}},A=async function(e,{tokenAddress:t,userAddress:s,source:r,nftMetadata:i}){const o=await N(this,n,"f").acquire();try{const n=(0,j.toChecksumHexAddress)(t),{allNftContracts:o}=this.state,{configuration:{chainId:c}}=this.messagingSystem.call("NetworkController:getNetworkClientById",e),l=o[s]?.[c]||[];if(l.find(e=>e.address.toLowerCase()===n.toLowerCase()))return l;const u=await N(this,a,"m",k).call(this,n,i,e),{asset_contract_type:d,created_date:m,symbol:p,description:g,external_link:f,schema_name:y,collection:{name:w,image_url:b,tokenCount:S}}=u;if(r===H.Source.Detected&&"address"in u&&"string"==typeof u.address&&"collection"in u&&null===u.collection.name&&"image_url"in u.collection&&null===u.collection.image_url&&Object.entries(u).every(([e,t])=>"address"===e||"collection"===e||!t))return l;const A=Object.assign({},{address:n},g&&{description:g},w&&{name:w},b&&{logo:b},p&&{symbol:p},null!=S&&{totalSupply:S},d&&{assetContractType:d},m&&{createdDate:m},y&&{schemaName:y},f&&{externalLink:f}),T=[...l,A];return N(this,a,"m",h).call(this,T,V,{chainId:c,userAddress:s}),T}finally{o()}},T=function(e,t,{chainId:s,userAddress:n}){const r=(0,j.toChecksumHexAddress)(e),{allNfts:i,ignoredNfts:o}=this.state,c=[...o],l=(i[n]?.[s]||[]).filter(e=>{if(e.address.toLowerCase()===r.toLowerCase()&&e.tokenId===t){return!c.find(e=>e.address===r&&e.tokenId===t)&&c.push(e),!1}return!0});N(this,a,"m",h).call(this,l,Y,{userAddress:n,chainId:s}),this.update(e=>{e.ignoredNfts=c})},v=function(e,t,{chainId:s,userAddress:n}){const r=(0,j.toChecksumHexAddress)(e),{allNfts:i}=this.state,o=(i[n]?.[s]||[]).filter(e=>!(e.address.toLowerCase()===r.toLowerCase()&&e.tokenId===t));N(this,a,"m",h).call(this,o,Y,{userAddress:n,chainId:s})},E=function(e,{chainId:t,userAddress:s}){const n=(0,j.toChecksumHexAddress)(e),{allNftContracts:r}=this.state,i=(r[s]?.[t]||[]).filter(e=>!(e.address.toLowerCase()===n.toLowerCase()));return N(this,a,"m",h).call(this,i,V,{chainId:t,userAddress:s}),i},C=async function(e,t,s,a){const{address:n,tokenId:r}=e;if(!t)throw L.rpcErrors.invalidParams("Asset type is required");if(t!==j.ERC721&&t!==j.ERC1155)throw L.rpcErrors.invalidParams(`Non NFT asset type ${t} not supported by watchNft`);if(!n||!r)throw L.rpcErrors.invalidParams("Both address and tokenId are required");if(!(0,D.isAddress)(n))throw L.rpcErrors.invalidParams("Invalid address");if(!/^\d+$/u.test(r))throw L.rpcErrors.invalidParams("Invalid tokenId");try{if(!await this.isNftOwner(s,n,r,a))throw L.rpcErrors.invalidInput("Suggested NFT is not owned by the selected account")}catch(e){if(e instanceof Error)throw L.rpcErrors.resourceUnavailable(e.message);throw e}},I=function(e){if(e)return e;const t=this.messagingSystem.call("AccountsController:getAccount",N(this,r,"f"));return t?.address||""},_=async function(e){const t=Object.values(this.state.allNfts[e.address]||{}).flat().filter(e=>!e.name&&!e.description&&!e.image);0!==t.length&&t.length<500&&await this.updateNftMetadata({nfts:t,userAddress:e.address})},P=async function(e){const t=e.map(e=>({...e})),s={},a=["externalLink","image","imagePreview","imageThumbnail","imageOriginal","animation","animationOriginal"];t.forEach((e,t)=>{for(const n of a){const a=e[n];"string"==typeof a&&a&&a.startsWith("http")&&(s[a]||(s[a]=[]),s[a].push({metadataIndex:t,fieldName:n}))}if(e.collection){const{collection:a}=e;if("externalLink"in a&&"string"==typeof a.externalLink){const e=a.externalLink;s[e]||(s[e]=[]),s[e].push({metadataIndex:t,fieldName:"collection.externalLink"})}}});const n=Object.keys(s);if(0===n.length)return t;try{const e=await this.messagingSystem.call("PhishingController:bulkScanUrls",n);Object.entries(e.results).forEach(([e,a])=>{a.recommendedAction===B.RecommendedAction.Block&&s[e].forEach(({metadataIndex:e,fieldName:s})=>{if("collection.externalLink"===s&&t[e].collection){const{collection:s}=t[e];s&&"externalLink"in s&&delete s.externalLink}else delete t[e][s]})})}catch(e){console.error("Error during bulk URL scanning:",e)}return t},R=async function(e){return(await N(this,a,"m",P).call(this,[e]))[0]},s.default=K}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/NftController.cjs"}],[1139,{"./assetsUtil.cjs":1152,"./constants.cjs":1154,"@metamask/base-controller":1222,"@metamask/controller-utils":1301,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},m=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.NftDetectionController=s.MAX_GET_COLLECTION_BATCH_SIZE=s.BlockaidResultType=void 0;const h=e("@metamask/base-controller"),p=e("@metamask/controller-utils"),g=e("@metamask/utils"),f=e("./assetsUtil.cjs"),y=e("./constants.cjs"),w=new Set(["0x1","0xe708","0x531"]);var b;!function(e){e.Benign="Benign",e.Spam="Spam",e.Warning="Warning",e.Malicious="Malicious"}(b||(s.BlockaidResultType=b={})),s.MAX_GET_COLLECTION_BATCH_SIZE=20;class k extends h.BaseController{constructor({messenger:e,disabled:t=!1,addNft:s,getNftState:l}){super({name:"NftDetectionController",messenger:e,metadata:{},state:{}}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),d(this,n,t,"f"),d(this,o,{},"f"),d(this,i,l,"f"),d(this,r,s,"f"),this.messagingSystem.subscribe("PreferencesController:stateChange",m(this,a,"m",c).bind(this))}isMainnet(){const{selectedNetworkClientId:e}=this.messagingSystem.call("NetworkController:getState"),{configuration:{chainId:t}}=this.messagingSystem.call("NetworkController:getNetworkClientById",e);return t===p.ChainId.mainnet}isMainnetByNetworkClientId(e){return e.configuration.chainId===p.ChainId.mainnet}async detectNfts(e,t){const c=t?.userAddress??this.messagingSystem.call("AccountsController:getSelectedAccount").address,l=e.filter(e=>w.has(e));if(0===l.length||m(this,n,"f"))return;if(!c)return;const d=`${e.join(",")}:${c}`;if(d in m(this,o,"f"))return void await m(this,o,"f")[d];const{promise:h,resolve:k,reject:S}=(0,g.createDeferredPromise)({suppressUnhandledRejection:!0});let A;m(this,o,"f")[d]=h;let T,v=[];try{do{T=await m(this,a,"m",u).call(this,c,l,A),v=T.tokens.filter(e=>!1===e.token.isSpam&&(!e.blockaidResult?.result_type||e.blockaidResult?.result_type===b.Benign));const e=v.reduce((e,t)=>(e[t.token.chainId]?.includes(t.token.contract)||t.token.contract!==t?.token?.collection?.id||(e[t.token.chainId]||(e[t.token.chainId]=[]),e[t.token.chainId].push(t.token.contract)),e),{});if(Object.values(e).some(e=>e.length>0)){const t=await Promise.all(Object.entries(e).map(([e,t])=>(0,f.reduceInBatchesSerially)({values:t,batchSize:s.MAX_GET_COLLECTION_BATCH_SIZE,eachBatch:async(t,s)=>{const a=new URLSearchParams(s.map(e=>["contract",e]));a.append("chainId",e);return{...t,...await(0,p.fetchWithErrorHandling)({url:`${p.NFT_API_BASE_URL}/collections?${a.toString()}`,options:{headers:{Version:p.NFT_API_VERSION}},timeout:p.NFT_API_TIMEOUT})}},initialResult:{}}))),a={collections:[]};t.forEach(e=>{e?.collections&&a?.collections.push(...e.collections)}),a.collections?.length&&v.forEach(e=>{const t=a.collections.find(t=>t.id?.toLowerCase()===e.token.contract.toLowerCase()&&e.token.chainId===t.chainId);t&&(e.token={...e.token,collection:{...e.token.collection??{},openseaVerificationStatus:t?.openseaVerificationStatus,contractDeployedAt:t.contractDeployedAt,creator:t?.creator,ownerCount:t.ownerCount,topBid:t.topBid}})})}const t=v.map(async e=>{const{tokenId:t,contract:s,kind:a,image:n,imageSmall:o,metadata:l,name:u,description:d,attributes:h,topBid:g,lastSale:f,rarityRank:w,rarityScore:b,collection:k,chainId:S}=e.token,{imageOriginal:A}=l||{};let T;const{ignoredNfts:v}=m(this,i,"f").call(this);if(v.length&&(T=v.find(e=>e.address===(0,p.toChecksumHexAddress)(s)&&e.tokenId===t)),!T){const e=Object.assign({},{name:u},d&&{description:d},n&&{image:n},o&&{imageThumbnail:o},A&&{imageOriginal:A},a&&{standard:a.toUpperCase()},f&&{lastSale:f},h&&{attributes:h},g&&{topBid:g},w&&{rarityRank:w},b&&{rarityScore:b},k&&{collection:k},S&&{chainId:S}),i=this.messagingSystem.call("NetworkController:findNetworkClientIdByChainId",(0,p.toHex)(S));await m(this,r,"f").call(this,s,t,i,{nftMetadata:e,userAddress:c,source:y.Source.Detected})}});await Promise.all(t)}while(A=T.continuation);k()}catch(e){throw S(e),e}finally{delete m(this,o,"f")[d]}}}s.NftDetectionController=k,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,a=new WeakSet,c=function({useNftDetection:e}){!e!==m(this,n,"f")&&d(this,n,!e,"f")},l=function({chainIds:e,address:t,next:s}){const a=e.join("&chainIds=");return`${p.NFT_API_BASE_URL}/users/${t}/tokens?chainIds=${a}&limit=50&includeTopBid=true&continuation=${s??""}`},u=async function(e,t,s){const n=t.map(e=>(0,p.convertHexToDecimal)(e).toString()),r=m(this,a,"m",l).call(this,{chainIds:n,address:e,next:s});return await(0,p.handleFetch)(r,{headers:{Version:p.NFT_API_VERSION}})},s.default=k}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/NftDetectionController.cjs"}],[1140,{"../crypto-compare-service/index.cjs":1156,"@metamask/base-controller":1222,"async-mutex":3582},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},h=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.RatesController=s.Cryptocurrency=s.name=void 0;const p=e("@metamask/base-controller"),g=e("async-mutex"),f=e("../crypto-compare-service/index.cjs");var y;s.name="RatesController",function(e){e.Btc="btc",e.Solana="sol"}(y||(s.Cryptocurrency=y={}));const w={fiatCurrency:{includeInStateLogs:!0,persist:!0,anonymous:!0,usedInUi:!0},rates:{includeInStateLogs:!1,persist:!0,anonymous:!0,usedInUi:!0},cryptocurrencies:{includeInStateLogs:!0,persist:!0,anonymous:!0,usedInUi:!1}},b={fiatCurrency:"usd",rates:{[y.Btc]:{conversionDate:0,conversionRate:0},[y.Solana]:{conversionDate:0,conversionRate:0}},cryptocurrencies:[y.Btc,y.Solana]};class k extends p.BaseController{constructor({interval:e=18e4,messenger:t,state:l,includeUsdRate:u,fetchMultiExchangeRate:d=f.fetchMultiExchangeRate}){super({name:s.name,metadata:w,messenger:t,state:{...b,...l}}),a.add(this),n.set(this,new g.Mutex),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),m(this,i,u,"f"),m(this,r,d,"f"),m(this,o,e,"f")}async start(){h(this,c,"f")||(this.messagingSystem.publish(`${s.name}:pollingStarted`),await h(this,a,"m",d).call(this),m(this,c,setInterval(()=>{h(this,a,"m",u).call(this).catch(console.error)},h(this,o,"f")),"f"))}async stop(){h(this,c,"f")&&(clearInterval(h(this,c,"f")),m(this,c,undefined,"f"),this.messagingSystem.publish(`${s.name}:pollingStopped`))}getCryptocurrencyList(){const{cryptocurrencies:e}=this.state;return e}async setCryptocurrencyList(e){await h(this,a,"m",l).call(this,()=>{this.update(t=>({...t,cryptocurrencies:e}))})}async setFiatCurrency(e){if(""===e)throw new Error("The currency can not be an empty string");await h(this,a,"m",l).call(this,()=>{this.update(t=>({...t,fiatCurrency:e}))}),await h(this,a,"m",d).call(this)}}s.RatesController=k,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,a=new WeakSet,l=async function(e){const t=await h(this,n,"f").acquire();try{return e()}finally{t()}},u=async function(){await h(this,a,"m",d).call(this)},d=async function(){await h(this,a,"m",l).call(this,async()=>{const{fiatCurrency:e,cryptocurrencies:t}=this.state,s=await h(this,r,"f").call(this,e,t,h(this,i,"f")),a={};for(const[t,n]of Object.entries(s))a[t]={conversionDate:Date.now(),conversionRate:n[e],...h(this,i,"f")&&{usdConversionRate:n.usd}};this.update(e=>({...e,rates:a}))})}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/RatesController/RatesController.cjs"}],[1141,{"./RatesController.cjs":1140},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.Cryptocurrency=s.RatesController=void 0;var a=e("./RatesController.cjs");Object.defineProperty(s,"RatesController",{enumerable:!0,get:function(){return a.RatesController}}),Object.defineProperty(s,"Cryptocurrency",{enumerable:!0,get:function(){return a.Cryptocurrency}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/RatesController/index.cjs"}],[1142,{"../assetsUtil.cjs":1152,"@ethereumjs/util":605,"@ethersproject/contracts":654,"@metamask/abi-utils":1171,"@metamask/controller-utils":1301,"@metamask/metamask-eth-abis":2064,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ERC20Standard=void 0;const a=e("@ethereumjs/util"),n=e("@ethersproject/contracts"),r=e("@metamask/abi-utils"),i=e("@metamask/controller-utils"),o=e("@metamask/metamask-eth-abis"),c=e("@metamask/utils"),l=e("../assetsUtil.cjs");s.ERC20Standard=class{constructor(e){this.provider=e}async getBalanceOf(e,t){const s=new n.Contract(e,o.abiERC20,this.provider),a=await s.balanceOf(t);return(0,l.ethersBigNumberToBN)(a)}async getTokenDecimals(e){const t=new n.Contract(e,o.abiERC20,this.provider);try{return(await t.decimals()).toString()}catch(e){if(e instanceof Error&&e.message.includes("call revert exception"))throw new Error("Failed to parse token decimals");throw e}}async getTokenName(e){const t=new n.Contract(e,o.abiERC20,this.provider);try{return(await t.name()).toString()}catch(e){if(e instanceof Error&&e.message.includes("call revert exception"))throw new Error("Failed to parse token name");throw e}}async getTokenSymbol(e){const t={to:e,data:"0x95d89b41"},s=await this.provider.call(t);(0,c.assertIsStrictHexString)(s);try{const e=(0,r.decodeSingle)("string",s);if(e?.length>0)return e}catch{}try{const e=/^(00)+|(00)+$/gu,t=s?.replace(e,""),n=(0,a.bytesToUtf8)((0,c.hexToBytes)(t));if(n.length>0)return n}catch{}throw new Error("Failed to parse token symbol")}async getDetails(e,t){const[s,a,n]=await Promise.all([this.getTokenDecimals(e),this.getTokenSymbol(e),t?this.getBalanceOf(e,t):undefined]);return{decimals:s,symbol:a,balance:n,standard:i.ERC20}}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/Standards/ERC20Standard.cjs"}],[1143,{"../../../assetsUtil.cjs":1152,"@ethersproject/contracts":654,"@metamask/controller-utils":1301,"@metamask/metamask-eth-abis":2064},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ERC1155Standard=void 0;const a=e("@ethersproject/contracts"),n=e("@metamask/controller-utils"),r=e("@metamask/metamask-eth-abis"),i=e("../../../assetsUtil.cjs");s.ERC1155Standard=class{constructor(e){this.provider=e}async contractSupportsURIMetadataInterface(e){return this.contractSupportsInterface(e,n.ERC1155_METADATA_URI_INTERFACE_ID)}async contractSupportsTokenReceiverInterface(e){return this.contractSupportsInterface(e,n.ERC1155_TOKEN_RECEIVER_INTERFACE_ID)}async contractSupportsBase1155Interface(e){return this.contractSupportsInterface(e,n.ERC1155_INTERFACE_ID)}async getTokenURI(e,t){return new a.Contract(e,r.abiERC1155,this.provider).uri(t)}async getBalanceOf(e,t,s){const n=new a.Contract(e,r.abiERC1155,this.provider),o=await n.balanceOf(t,s);return(0,i.ethersBigNumberToBN)(o)}async transferSingle(e,t,s,n,i){const o=new a.Contract(e,r.abiERC1155,this.provider);return new Promise((a,r)=>{o.transferSingle(e,t,s,n,i,(e,t)=>{e?r(e):a(t)})})}async getAssetSymbol(e){return new a.Contract(e,[{inputs:[],name:"symbol",outputs:[{name:"_symbol",type:"string"}],stateMutability:"view",type:"function",payable:!1}],this.provider).symbol()}async getAssetName(e){return new a.Contract(e,[{inputs:[],name:"name",outputs:[{name:"_name",type:"string"}],stateMutability:"view",type:"function",payable:!1}],this.provider).name()}async contractSupportsInterface(e,t){return new a.Contract(e,r.abiERC1155,this.provider).supportsInterface(t)}async getDetails(e,t,s){if(!await this.contractSupportsBase1155Interface(e))throw new Error("This isn't a valid ERC1155 contract");let a;const[r,o,c]=await Promise.all([(0,n.safelyExecute)(()=>this.getAssetSymbol(e)),(0,n.safelyExecute)(()=>this.getAssetName(e)),s?(0,n.safelyExecute)(()=>this.getTokenURI(e,s).then(e=>e.startsWith("ipfs://")?(0,i.getFormattedIpfsUrl)(t,e,!0):e)):undefined]);if(c)try{const e=await(0,n.timeoutFetch)(c),s=await e.json();a=s?.image,a?.startsWith("ipfs://")&&(a=(0,i.getFormattedIpfsUrl)(t,a,!0))}catch{}return{standard:n.ERC1155,tokenURI:c,image:a,symbol:r,name:o}}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/Standards/NftStandards/ERC1155/ERC1155Standard.cjs"}],[1144,{"../../../assetsUtil.cjs":1152,"@ethersproject/contracts":654,"@metamask/controller-utils":1301,"@metamask/metamask-eth-abis":2064},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ERC721Standard=void 0;const a=e("@ethersproject/contracts"),n=e("@metamask/controller-utils"),r=e("@metamask/metamask-eth-abis"),i=e("../../../assetsUtil.cjs");s.ERC721Standard=class{constructor(e){this.contractSupportsMetadataInterface=async e=>this.contractSupportsInterface(e,n.ERC721_METADATA_INTERFACE_ID),this.contractSupportsEnumerableInterface=async e=>this.contractSupportsInterface(e,n.ERC721_ENUMERABLE_INTERFACE_ID),this.contractSupportsBase721Interface=async e=>this.contractSupportsInterface(e,n.ERC721_INTERFACE_ID),this.getNftTokenId=async(e,t,s)=>new a.Contract(e,r.abiERC721,this.provider).tokenOfOwnerByIndex(t,s),this.getTokenURI=async(e,t)=>{const s=new a.Contract(e,r.abiERC721,this.provider);return await this.contractSupportsMetadataInterface(e)||console.error("Contract does not support ERC721 metadata interface."),s.tokenURI(t)},this.getAssetName=async e=>new a.Contract(e,r.abiERC721,this.provider).name(),this.getAssetSymbol=async e=>new a.Contract(e,r.abiERC721,this.provider).symbol(),this.contractSupportsInterface=async(e,t)=>{const s=new a.Contract(e,r.abiERC721,this.provider);try{return await s.supportsInterface(t)}catch(e){if(e instanceof Error&&e.message.includes("call revert exception"))return!1;throw e}},this.getDetails=async(e,t,s)=>{if(!await this.contractSupportsBase721Interface(e))throw new Error("This isn't a valid ERC721 contract");const[a,r,o]=await Promise.all([(0,n.safelyExecute)(()=>this.getAssetSymbol(e)),(0,n.safelyExecute)(()=>this.getAssetName(e)),s?(0,n.safelyExecute)(()=>this.getTokenURI(e,s).then(e=>e.startsWith("ipfs://")?(0,i.getFormattedIpfsUrl)(t,e,!0):e)):undefined]);let c;if(o)try{const e=await(0,n.timeoutFetch)(o),s=await e.json();c=s?.image,c?.startsWith("ipfs://")&&(c=await(0,i.getFormattedIpfsUrl)(t,c,!0))}catch{}return{standard:n.ERC721,tokenURI:o,symbol:a,name:r,image:c}},this.provider=e}async getOwnerOf(e,t){return new a.Contract(e,r.abiERC721,this.provider).ownerOf(t)}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/Standards/NftStandards/ERC721/ERC721Standard.cjs"}],[1145,{"./AssetsContractController.cjs":1124,"./multi-chain-accounts-service/api-balance-fetcher.cjs":1158,"./rpc-service/rpc-balance-fetcher.cjs":1162,"@ethersproject/providers":692,"@metamask/controller-utils":1301,"@metamask/polling-controller":2280,"@metamask/utils":2799,immer:4327,lodash:4534},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g,f,y,w,b,k,S,A,T,v,E=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},C=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.TokenBalancesController=void 0;const I=e("@ethersproject/providers"),_=e("@metamask/controller-utils"),P=e("@metamask/polling-controller"),R=e("@metamask/utils"),x=e("immer"),N=e("lodash"),M=e("./AssetsContractController.cjs"),D=e("./multi-chain-accounts-service/api-balance-fetcher.cjs"),O=e("./rpc-service/rpc-balance-fetcher.cjs"),j={tokenBalances:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0}},B="0x0000000000000000000000000000000000000000",L=e=>(0,_.toChecksumHexAddress)(e);class F extends((0,P.StaticIntervalPollingController)()){constructor({messenger:e,interval:t=18e4,chainPollingIntervals:s={},state:g={},queryMultipleAccounts:b=!0,accountsApiChainIds:k=()=>[],allowExternalServices:S=()=>!0,platform:P}){super({name:"TokenBalancesController",messenger:e,metadata:j,state:{tokenBalances:{},...g}}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,{}),l.set(this,{}),u.set(this,void 0),d.set(this,void 0),m.set(this,new Map),h.set(this,!1),p.set(this,[]),f.set(this,e=>{const{networkConfigurationsByChainId:t}=this.messagingSystem.call("NetworkController:getState"),s=t[e],{networkClientId:a}=s.rpcEndpoints[s.defaultRpcEndpointIndex],n=this.messagingSystem.call("NetworkController:getNetworkClientById",a);return new I.Web3Provider(n.provider)}),y.set(this,e=>{const{networkConfigurationsByChainId:t}=this.messagingSystem.call("NetworkController:getState"),s=t[e],{networkClientId:a}=s.rpcEndpoints[s.defaultRpcEndpointIndex];return this.messagingSystem.call("NetworkController:getNetworkClientById",a)}),w.set(this,()=>{const e=new D.AccountsApiBalanceFetcher(C(this,n,"f"),C(this,f,"f"));return{supports:t=>C(this,i,"f").call(this).includes(t)&&e.supports(t),fetch:e.fetch.bind(e)}}),A.set(this,async e=>{const t=[];let s=!1;const a=new Set;for(const e of Object.keys(this.state.tokenBalances)){const t=e;for(const e of Object.keys(this.state.tokenBalances[t]||{}))a.add(e)}const n=new Set([...Object.keys(e.allTokens),...Object.keys(e.allDetectedTokens)]),r=Array.from(n).filter(t=>{const s=t,a=e.allTokens[s]&&Object.keys(e.allTokens[s]).length>0||e.allDetectedTokens[s]&&Object.keys(e.allDetectedTokens[s]).length>0,n=C(this,c,"f")[s]&&Object.keys(C(this,c,"f")[s]).length>0||C(this,l,"f")[s]&&Object.keys(C(this,l,"f")[s]).length>0;return!(0,N.isEqual)(e.allTokens[s],C(this,c,"f")[s])||!(0,N.isEqual)(e.allDetectedTokens[s],C(this,l,"f")[s])||!n&&a});if(0===r.length)return E(this,c,e.allTokens,"f"),void E(this,l,e.allDetectedTokens,"f");this.update(a=>{for(const n of r){const r=n,i=e.allTokens[r]&&Object.keys(e.allTokens[r]).length>0||e.allDetectedTokens[r]&&Object.keys(e.allDetectedTokens[r]).length>0,o=C(this,c,"f")[r]&&Object.keys(C(this,c,"f")[r]).length>0||C(this,l,"f")[r]&&Object.keys(C(this,l,"f")[r]).length>0;if(!(0,N.isEqual)(e.allTokens[r],C(this,c,"f")[r])||!(0,N.isEqual)(e.allDetectedTokens[r],C(this,l,"f")[r]))if(i)t.push(r);else if(o)for(const e of Object.keys(a.tokenBalances)){const t=e;a.tokenBalances[t]?.[r]&&(a.tokenBalances[t][r]={},s=!0)}}}),E(this,c,e.allTokens,"f"),E(this,l,e.allDetectedTokens,"f"),t.length&&!s&&this.updateBalances({chainIds:t}).catch(e=>{console.warn("Error updating balances after token change:",e)})}),T.set(this,e=>{const t=new Set(Object.keys(e.networkConfigurationsByChainId)),s=new Set;for(const e of Object.keys(this.state.tokenBalances)){const t=e;for(const e of Object.keys(this.state.tokenBalances[t]||{}))s.add(e)}const a=Array.from(s).filter(e=>!t.has(e));a.length>0&&this.update(e=>{for(const t of Object.keys(e.tokenBalances)){const s=t;for(const t of a){const a=t;e.tokenBalances[s]?.[a]&&delete e.tokenBalances[s][a]}}})}),v.set(this,e=>{(0,R.isStrictHexString)(e)&&(0,_.isValidHexAddress)(e)&&this.update(t=>{delete t.tokenBalances[e]})}),E(this,n,P??"extension","f"),E(this,r,b,"f"),E(this,i,k,"f"),E(this,u,t,"f"),E(this,d,{...s},"f"),E(this,o,[...k().length>0&&S()?[C(this,w,"f").call(this)]:[],new O.RpcBalanceFetcher(C(this,f,"f"),C(this,y,"f"),()=>({allTokens:C(this,c,"f"),allDetectedTokens:C(this,l,"f")}))],"f"),this.setIntervalLength(t);const{allTokens:x,allDetectedTokens:M}=this.messagingSystem.call("TokensController:getState");E(this,c,x,"f"),E(this,l,M,"f"),this.messagingSystem.subscribe("TokensController:stateChange",e=>{C(this,A,"f").call(this,e).catch(e=>{console.warn("Error handling token state change:",e)})}),this.messagingSystem.subscribe("NetworkController:stateChange",C(this,T,"f")),this.messagingSystem.subscribe("KeyringController:accountRemoved",C(this,v,"f")),this.messagingSystem.registerActionHandler("TokenBalancesController:updateChainPollingConfigs",this.updateChainPollingConfigs.bind(this)),this.messagingSystem.registerActionHandler("TokenBalancesController:getChainPollingConfig",this.getChainPollingConfig.bind(this))}_startPolling({chainIds:e}){E(this,p,[...e],"f"),E(this,h,!0,"f"),C(this,a,"m",b).call(this,e,!0)}_stopPollingByPollingTokenSetId(e){let t,s=[];try{t=JSON.parse(e),s=t.chainIds||[]}catch(e){return console.warn("Failed to parse tokenSetId, stopping all polling:",e),E(this,h,!1,"f"),E(this,p,[],"f"),C(this,m,"f").forEach(e=>clearInterval(e)),void C(this,m,"f").clear()}const a=new Set(C(this,p,"f")),n=new Set(s);a.size===n.size&&[...a].every(e=>n.has(e))&&(E(this,h,!1,"f"),E(this,p,[],"f"),C(this,m,"f").forEach(e=>clearInterval(e)),C(this,m,"f").clear())}getChainPollingConfig(e){return C(this,d,"f")[e]??{interval:C(this,u,"f")}}async _executePoll({chainIds:e,queryAllAccounts:t=!1}){await this.updateBalances({chainIds:e,queryAllAccounts:t})}updateChainPollingConfigs(e,t={immediateUpdate:!0}){Object.assign(C(this,d,"f"),e),C(this,h,"f")&&C(this,a,"m",b).call(this,C(this,p,"f"),t.immediateUpdate)}async updateBalances({chainIds:e,queryAllAccounts:t=!1}={}){const s=e??C(this,a,"m",g).call(this);if(!s.length)return;const{address:n}=this.messagingSystem.call("AccountsController:getSelectedAccount"),i=this.messagingSystem.call("AccountsController:listAccounts"),u=[];let d=[...s];for(const e of C(this,o,"f")){const s=d.filter(t=>e.supports(t));if(s.length){try{const a=await e.fetch({chainIds:s,queryAllAccounts:t??C(this,r,"f"),selectedAccount:n,allAccounts:i});if(a&&a.length>0){u.push(...a);const e=new Set(a.map(e=>e.chainId));d=d.filter(t=>!e.has(t))}}catch(e){console.warn(`Balance fetcher failed for chains ${s.join(", ")}: ${String(e)}`)}if(0===d.length)break}}const m=t??C(this,r,"f")?i.map(e=>e.address):[n],h=this.state,p=(f=h,y=e=>{var t,a;for(const n of s)for(const s of m){(t=e.tokenBalances)[s]??(t[s]={}),(a=e.tokenBalances[s])[n]??(a[n]={});const r=C(this,c,"f")[n];r?.[s]&&Object.values(r[s]).forEach(t=>{const a=L(t.address);a in e.tokenBalances[s][n]||(e.tokenBalances[s][n][a]="0x0")});const i=C(this,l,"f")[n];i?.[s]&&Object.values(i[s]).forEach(t=>{const a=L(t.address);a in e.tokenBalances[s][n]||(e.tokenBalances[s][n][a]="0x0")})}u.forEach(({success:t,value:s,account:a,token:n,chainId:r})=>{var i,o;if(t&&s!==undefined){const t=(0,_.toHex)(s),c=L(n),l=e.tokenBalances[a]?.[r]?.[c];l!==t&&(((o=(i=e.tokenBalances)[a]??(i[a]={}))[r]??(o[r]={}))[c]=t)}})},(0,x.produce)(f,y));var f,y;if(!(0,N.isEqual)(h,p)){this.update(()=>p);const e=u.filter(e=>e.success&&e.token===B),t=this.messagingSystem.call("AccountTrackerController:getState");if(e.length>0){const s=e.map(e=>({address:e.account,chainId:e.chainId,balance:e.value?(0,_.BNToHex)(e.value):"0x0"})).filter(e=>{const s=t.accountsByChainId[e.chainId]?.[L(e.address)]?.balance;return s!==e.balance});s.length>0&&this.messagingSystem.call("AccountTrackerController:updateNativeBalances",s)}const s=u.filter(e=>{if(!e.success||e.token===B)return!1;const t=M.STAKING_CONTRACT_ADDRESS_BY_CHAINID[e.chainId];return t&&t.toLowerCase()===e.token.toLowerCase()});if(s.length>0){const e=s.map(e=>({address:e.account,chainId:e.chainId,stakedBalance:e.value?(0,_.toHex)(e.value):"0x0"})).filter(e=>{const s=t.accountsByChainId[e.chainId]?.[L(e.address)]?.stakedBalance;return s!==e.stakedBalance});e.length>0&&this.messagingSystem.call("AccountTrackerController:updateStakedBalances",e)}}}resetState(){this.update(()=>({tokenBalances:{}}))}destroy(){E(this,h,!1,"f"),C(this,m,"f").forEach(e=>clearInterval(e)),C(this,m,"f").clear(),this.messagingSystem.unregisterActionHandler("TokenBalancesController:updateChainPollingConfigs"),this.messagingSystem.unregisterActionHandler("TokenBalancesController:getChainPollingConfig"),super.destroy()}}s.TokenBalancesController=F,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,l=new WeakMap,u=new WeakMap,d=new WeakMap,m=new WeakMap,h=new WeakMap,p=new WeakMap,f=new WeakMap,y=new WeakMap,w=new WeakMap,A=new WeakMap,T=new WeakMap,v=new WeakMap,a=new WeakSet,g=function(){return[...new Set([...Object.keys(C(this,c,"f")),...Object.keys(C(this,l,"f"))])]},b=function(e,t=!0){C(this,m,"f").forEach(e=>clearInterval(e)),C(this,m,"f").clear();const s=new Map;for(const t of e){const e=this.getChainPollingConfig(t),a=s.get(e.interval)||[];a.push(t),s.set(e.interval,a)}for(const[e,n]of s)C(this,a,"m",k).call(this,e,n,t)},k=function(e,t,s=!0){const n=async()=>{if(C(this,h,"f"))try{await this._executePoll({chainIds:t})}catch(s){console.warn(`Polling failed for chains ${t.join(", ")} with interval ${e}:`,s)}};s&&n().catch(e=>{console.warn(`Immediate polling failed for chains ${t.join(", ")}:`,e)}),C(this,a,"m",S).call(this,e,t,n)},S=function(e,t,s){const a=C(this,m,"f").get(e);a&&clearInterval(a);const n=setInterval(()=>{s().catch(e=>{console.warn(`Interval polling failed for chains ${t.join(", ")}:`,e)})},e);C(this,m,"f").set(e,n)},s.default=F}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenBalancesController.cjs"}],[1146,{"./assetsUtil.cjs":1152,"./multi-chain-accounts-service/index.cjs":1159,"@metamask/contract-metadata":1298,"@metamask/controller-utils":1301,"@metamask/polling-controller":2280,"@metamask/utils":2799,lodash:4534},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g,f,y,w,b,k,S,A,T,v,E,C,I,_,P,R,x,N,M,D,O,j=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},B=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},L=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.TokenDetectionController=s.controllerName=s.mapChainIdWithTokenListMap=s.STATIC_MAINNET_TOKEN_LIST=void 0;const F=L(e("@metamask/contract-metadata")),$=e("@metamask/controller-utils"),U=e("@metamask/polling-controller"),G=e("@metamask/utils"),W=e("lodash"),H=e("./assetsUtil.cjs"),q=e("./multi-chain-accounts-service/index.cjs"),Y=18e4;function V(e){return(0,W.mapValues)(e,e=>(0,W.isObject)(e)&&"data"in e?(0,W.get)(e,["data"]):e)}s.STATIC_MAINNET_TOKEN_LIST=Object.entries(F.default).reduce((e,[t,s])=>{const{logo:a,erc20:n,erc721:r,...i}=s;return{...e,[t.toLowerCase()]:{...i,address:t.toLowerCase(),iconUrl:`images/contract/${a}`,aggregators:[]}}},{}),s.mapChainIdWithTokenListMap=V,s.controllerName="TokenDetectionController";class K extends((0,U.StaticIntervalPollingController)()){constructor({interval:e=18e4,disabled:t=!0,getBalancesInSingleCall:w,trackMetaMetricsEvent:b,messenger:k,useAccountsAPI:S=!0,useTokenDetection:T=()=>!0,useExternalServices:v=()=>!0,platform:E}){super({name:s.controllerName,messenger:k,state:{},metadata:{}}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,{}),c.set(this,void 0),l.set(this,void 0),u.set(this,void 0),d.set(this,void 0),m.set(this,void 0),h.set(this,void 0),p.set(this,void 0),g.set(this,void 0),f.set(this,{isAccountsAPIEnabled:!0,supportedNetworksCache:null,platform:"",async getSupportedNetworks(){if(!this.isAccountsAPIEnabled)throw new Error("Accounts API Feature Switch is disabled");if(this.supportedNetworksCache)return this.supportedNetworksCache;const e=await(0,q.fetchSupportedNetworks)().catch(()=>null);return this.supportedNetworksCache=e,e},async getMultiNetworksBalances(e,t,s){const a=t.map(e=>(0,G.hexToNumber)(e));if(!s||!a.every(e=>s.includes(e))){const e=(s??[]).toString();throw new Error(`Unsupported Network: supported networks ${e}, requested networks: ${a.toString()}`)}return(await(0,q.fetchMultiChainBalances)(e,{networks:a},this.platform)).balances}}),j(this,c,t,"f"),this.setIntervalLength(e),j(this,r,B(this,a,"m",D).call(this).id,"f");const{chainId:C,networkClientId:I}=B(this,a,"m",A).call(this);j(this,i,I,"f");const{tokensChainsCache:_}=this.messagingSystem.call("TokenListController:getState");j(this,o,_,"f");const{useTokenDetection:P}=this.messagingSystem.call("PreferencesController:getState");j(this,u,P,"f"),j(this,h,(0,H.isTokenDetectionSupportedForNetwork)(C),"f"),j(this,p,w,"f"),j(this,g,b,"f");const{isUnlocked:R}=this.messagingSystem.call("KeyringController:getState");j(this,l,R,"f"),B(this,f,"f").isAccountsAPIEnabled=S,j(this,d,T,"f"),j(this,m,v,"f"),B(this,f,"f").platform=E,B(this,a,"m",y).call(this)}enable(){j(this,c,!1,"f")}disable(){j(this,c,!0,"f")}get isActive(){return!B(this,c,"f")&&B(this,l,"f")}async start(){this.enable(),await B(this,a,"m",b).call(this)}stop(){this.disable(),B(this,a,"m",w).call(this)}async _executePoll({chainIds:e,address:t}){this.isActive&&await this.detectTokens({chainIds:e,selectedAddress:t})}async detectTokens({chainIds:e,selectedAddress:t}={}){if(!this.isActive)return;if(!B(this,d,"f").call(this))return;const s=t??B(this,a,"m",O).call(this),n=B(this,a,"m",S).call(this,e);let r;B(this,f,"f").isAccountsAPIEnabled&&B(this,m,"f").call(this)&&(r=await B(this,f,"f").getSupportedNetworks());const{chainsToDetectUsingRpc:i,chainsToDetectUsingAccountAPI:o}=B(this,a,"m",v).call(this,n,r);if(r&&o.length>0){const e=await B(this,a,"m",E).call(this,o,s,r);"failed"===e?.result&&B(this,a,"m",C).call(this,i,o,n)}i.length>0&&await B(this,a,"m",_).call(this,i,s)}}s.TokenDetectionController=K,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,l=new WeakMap,u=new WeakMap,d=new WeakMap,m=new WeakMap,h=new WeakMap,p=new WeakMap,g=new WeakMap,f=new WeakMap,a=new WeakSet,y=function(){this.messagingSystem.subscribe("KeyringController:unlock",async()=>{j(this,l,!0,"f"),await B(this,a,"m",T).call(this)}),this.messagingSystem.subscribe("KeyringController:lock",()=>{j(this,l,!1,"f"),B(this,a,"m",w).call(this)}),this.messagingSystem.subscribe("TokenListController:stateChange",async({tokensChainsCache:e})=>{B(this,a,"m",k).call(this,e,B(this,o,"f"))||await B(this,a,"m",T).call(this)}),this.messagingSystem.subscribe("PreferencesController:stateChange",async({useTokenDetection:e})=>{const t=B(this,a,"m",D).call(this),s=B(this,u,"f")!==e;j(this,u,e,"f"),s&&await B(this,a,"m",T).call(this,{selectedAddress:t.address})}),this.messagingSystem.subscribe("AccountsController:selectedEvmAccountChange",async e=>{const{networkConfigurationsByChainId:t}=this.messagingSystem.call("NetworkController:getState"),s=Object.keys(t);B(this,r,"f")!==e.id&&(j(this,r,e.id,"f"),await B(this,a,"m",T).call(this,{selectedAddress:e.address,chainIds:s}))}),this.messagingSystem.subscribe("TransactionController:transactionConfirmed",async e=>{await this.detectTokens({chainIds:[e.chainId]})})},w=function(){B(this,n,"f")&&clearInterval(B(this,n,"f"))},b=async function(){this.isActive&&(B(this,a,"m",w).call(this),await this.detectTokens(),j(this,n,setInterval(async()=>{await this.detectTokens()},this.getIntervalLength()),"f"))},k=function(e,t){const s=V(t),a=V(e);return(0,W.isEqual)(a,s)},S=function(e){const{networkConfigurationsByChainId:t,selectedNetworkClientId:s}=this.messagingSystem.call("NetworkController:getState");if(!e){const e=this.messagingSystem.call("NetworkController:getNetworkConfigurationByNetworkClientId",s);return[{chainId:e?.chainId??$.ChainId.mainnet,networkClientId:s}]}return e.map(e=>{const s=t[e];return{chainId:e,networkClientId:s.rpcEndpoints[s.defaultRpcEndpointIndex].networkClientId}})},A=function(){const{selectedNetworkClientId:e}=this.messagingSystem.call("NetworkController:getState"),{configuration:{chainId:t}}=this.messagingSystem.call("NetworkController:getNetworkClientById",e);return{chainId:t,networkClientId:e}},T=async function({selectedAddress:e,chainIds:t}={}){await this.detectTokens({chainIds:t,selectedAddress:e}),this.setIntervalLength(Y)},v=function(e,t){const s=[],a=[];return e.forEach(({chainId:e,networkClientId:n})=>{t?.includes((0,G.hexToNumber)(e))?s.push(e):a.push({chainId:e,networkClientId:n})}),{chainsToDetectUsingRpc:a,chainsToDetectUsingAccountAPI:s}},E=async function(e,t,s){return await B(this,a,"m",x).call(this,{chainIds:e,selectedAddress:t,supportedNetworks:s})},C=function(e,t,s){t.forEach(t=>{const a=s.find(e=>e.chainId===t);a&&e.push({chainId:a.chainId,networkClientId:a.networkClientId})})},I=function(e){if(!(0,H.isTokenDetectionSupportedForNetwork)(e))return!1;if(!B(this,u,"f")&&e!==$.ChainId.mainnet)return!1;if(!B(this,u,"f")&&e===$.ChainId.mainnet)j(this,o,B(this,a,"m",R).call(this),"f");else{const{tokensChainsCache:e}=this.messagingSystem.call("TokenListController:getState");j(this,o,e??{},"f")}return!0},_=async function(e,t){for(const{chainId:s,networkClientId:n}of e){if(!B(this,a,"m",I).call(this,s))continue;const e=B(this,a,"m",P).call(this,{chainId:s,selectedAddress:t}).map(e=>B(this,a,"m",M).call(this,{tokensSlice:e,selectedAddress:t,networkClientId:n,chainId:s}));await Promise.all(e)}},P=function({chainId:e,selectedAddress:t}){const{allTokens:s,allDetectedTokens:a,allIgnoredTokens:n}=this.messagingSystem.call("TokensController:getState"),[r,i,c]=[s,a,n].map(s=>(s[e]?.[t]??[]).map(e=>"string"==typeof e?e:e.address)),l=[];for(const t of Object.keys(B(this,o,"f")?.[e]?.data||{}))[r,i,c].every(e=>!e.find(e=>(0,$.isEqualCaseInsensitive)(e,t)))&&l.push(t);const u=[];for(let e=0,t=1e3;e<l.length;e+=t)u.push(l.slice(e,e+t));return u},R=function(){return{"0x1":{data:Object.entries(s.STATIC_MAINNET_TOKEN_LIST).reduce((e,[t,s])=>({...e,[t]:{name:s.name,symbol:s.symbol,decimals:s.decimals,address:s.address,aggregators:[],iconUrl:s?.iconUrl}}),{}),timestamp:0}}},x=async function({selectedAddress:e,chainIds:t,supportedNetworks:s}){return await(0,$.safelyExecute)(async()=>{const n=await B(this,f,"f").getMultiNetworksBalances(e,t,s).catch(()=>null);if(null===n)return{result:"failed"};for(const s of t){const t=!B(this,u,"f")&&s===$.ChainId.mainnet,{tokensChainsCache:r}=this.messagingSystem.call("TokenListController:getState");j(this,o,t?B(this,a,"m",R).call(this):r??{},"f");const i=B(this,a,"m",P).call(this,{chainId:s,selectedAddress:e}),c=n.filter(e=>e.chainId===(0,G.hexToNumber)(s));if(!c||0===c.length)continue;const{tokensWithBalance:l,eventTokensDetails:d}=B(this,a,"m",N).call(this,i,c,s);if(l.length){B(this,g,"f").call(this,{event:"Token Detected",category:"Wallet",properties:{tokens:d,token_standard:$.ERC20,asset_type:$.ASSET_TYPES.TOKEN}});const e=this.messagingSystem.call("NetworkController:findNetworkClientIdByChainId",s);await this.messagingSystem.call("TokensController:addTokens",l,e)}}return{result:"success"}})},N=function(e,t,s){const a=[],n=[],r=new Set(e.flat());return t?.forEach(e=>{const t=e.address;if(!r.has(t))return;const i=B(this,o,"f")[s]?.data[t];if(!i)return;const{decimals:c,symbol:l,aggregators:u,iconUrl:d,name:m}=i;n.push(`${l} - ${t}`),a.push({address:t,decimals:c,symbol:l,aggregators:u,image:d,isERC721:!1,name:m})}),{tokensWithBalance:a,eventTokensDetails:n}},M=async function({tokensSlice:e,selectedAddress:t,networkClientId:s,chainId:a}){await(0,$.safelyExecute)(async()=>{const n=await B(this,p,"f").call(this,t,e,s),r=[],i=[];for(const e of Object.keys(n)){const{decimals:t,symbol:s,aggregators:n,iconUrl:c,name:l}=B(this,o,"f")[a].data[e];i.push(`${s} - ${e}`),r.push({address:e,decimals:t,symbol:s,aggregators:n,image:c,isERC721:!1,name:l})}r.length&&(B(this,g,"f").call(this,{event:"Token Detected",category:"Wallet",properties:{tokens:i,token_standard:$.ERC20,asset_type:$.ASSET_TYPES.TOKEN}}),await this.messagingSystem.call("TokensController:addTokens",r,s))})},D=function(){return this.messagingSystem.call("AccountsController:getSelectedAccount")},O=function(){const e=this.messagingSystem.call("AccountsController:getAccount",B(this,r,"f"));return e?.address||""},s.default=K}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenDetectionController.cjs"}],[1147,{"./assetsUtil.cjs":1152,"./token-service.cjs":1167,"@metamask/controller-utils":1301,"@metamask/polling-controller":2280,"async-mutex":3582},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.TokenListController=s.getDefaultTokenListState=void 0;const o=e("@metamask/controller-utils"),c=e("@metamask/polling-controller"),l=e("async-mutex"),u=e("./assetsUtil.cjs"),d=e("./token-service.cjs"),m={tokensChainsCache:{includeInStateLogs:!1,persist:!0,anonymous:!0,usedInUi:!0},preventPollingOnNetworkRestart:{includeInStateLogs:!1,persist:!0,anonymous:!0,usedInUi:!1}};s.getDefaultTokenListState=()=>({tokensChainsCache:{},preventPollingOnNetworkRestart:!1});class h extends((0,c.StaticIntervalPollingController)()){constructor({chainId:e,preventPollingOnNetworkRestart:t=!1,onNetworkStateChange:r,interval:o=864e5,cacheRefreshThreshold:c=864e5,messenger:u,state:d}){super({name:"TokenListController",metadata:m,messenger:u,state:{...(0,s.getDefaultTokenListState)(),...d}}),a.add(this),this.mutex=new l.Mutex,this.intervalDelay=o,this.setIntervalLength(o),this.cacheRefreshThreshold=c,this.chainId=e,this.updatePreventPollingOnNetworkRestart(t),this.abortController=new AbortController,r?r(async e=>{await i(this,a,"m",n).call(this,e)}):this.messagingSystem.subscribe("NetworkController:stateChange",async e=>{await i(this,a,"m",n).call(this,e)})}async start(){(0,u.isTokenListSupportedForNetwork)(this.chainId)&&await i(this,a,"m",r).call(this)}async restart(){this.stopPolling(),await i(this,a,"m",r).call(this)}stop(){this.stopPolling()}destroy(){super.destroy(),this.stopPolling()}stopPolling(){this.intervalId&&clearInterval(this.intervalId)}async _executePoll({chainId:e}){return this.fetchTokenList(e)}async fetchTokenList(e){const t=await this.mutex.acquire();try{if(this.isCacheValid(e))return;const t=await(0,o.safelyExecute)(()=>(0,d.fetchTokenListByChainId)(e,this.abortController.signal));if(t){const s={};for(const a of t)s[a.address]={...a,aggregators:(0,u.formatAggregatorNames)(a.aggregators),iconUrl:(0,u.formatIconUrlWithProxy)({chainId:e,tokenAddress:a.address})};return void this.update(t=>{var a;const n={data:{},timestamp:Date.now()};(a=t.tokensChainsCache)[e]??(a[e]=n),t.tokensChainsCache[e].data=s,t.tokensChainsCache[e].timestamp=Date.now()})}t||this.update(t=>{var s;const a={data:{},timestamp:Date.now()};(s=t.tokensChainsCache)[e]??(s[e]=a),t.tokensChainsCache[e].timestamp=Date.now()})}finally{t()}}isCacheValid(e){const{tokensChainsCache:t}=this.state,s=t[e]?.timestamp,a=Date.now();return s!==undefined&&a-s<this.cacheRefreshThreshold}clearingTokenListData(){this.update(()=>({...this.state,tokensChainsCache:{}}))}updatePreventPollingOnNetworkRestart(e){this.update(()=>({...this.state,preventPollingOnNetworkRestart:e}))}}s.TokenListController=h,a=new WeakSet,n=async function(e){const t=this.messagingSystem.call("NetworkController:getNetworkClientById",e.selectedNetworkClientId),{chainId:s}=t.configuration;this.chainId!==s&&(this.abortController.abort(),this.abortController=new AbortController,this.chainId=s,this.state.preventPollingOnNetworkRestart&&this.clearingTokenListData())},r=async function(){await(0,o.safelyExecute)(()=>this.fetchTokenList(this.chainId)),this.intervalId=setInterval(async()=>{await(0,o.safelyExecute)(()=>this.fetchTokenList(this.chainId))},this.intervalDelay)},s.default=h}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenListController.cjs"}],[1148,{"./assetsUtil.cjs":1152,"./crypto-compare-service/index.cjs":1156,"./token-prices-service/codefi-v2.cjs":1165,"@metamask/controller-utils":1301,"@metamask/polling-controller":2280,"@metamask/utils":2799,lodash:4534},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g,f,y,w,b,k,S=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},A=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.TokenRatesController=s.getDefaultTokenRatesControllerState=s.controllerName=void 0;const T=e("@metamask/controller-utils"),v=e("@metamask/polling-controller"),E=e("@metamask/utils"),C=e("lodash"),I=e("./assetsUtil.cjs"),_=e("./crypto-compare-service/index.cjs"),P=e("./token-prices-service/codefi-v2.cjs");var R;async function x({from:e,to:t}){try{return(await(0,_.fetchExchangeRate)(t,e,false)).conversionRate}catch(e){if(e instanceof Error&&e.message.includes("market does not exist for this coin pair"))return null;throw e}}!function(e){e.Active="Active",e.Inactive="Inactive"}(R||(R={})),s.controllerName="TokenRatesController";const N={marketData:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0}};s.getDefaultTokenRatesControllerState=()=>({marketData:{}});class M extends((0,v.StaticIntervalPollingController)()){constructor({interval:e=18e4,disabled:t=!1,tokenPricesService:p,messenger:f,state:y}){super({name:s.controllerName,messenger:f,state:{...(0,s.getDefaultTokenRatesControllerState)(),...y},metadata:N}),a.add(this),n.set(this,void 0),r.set(this,R.Inactive),i.set(this,void 0),o.set(this,{}),c.set(this,void 0),l.set(this,void 0),u.set(this,void 0),d.set(this,void 0),this.setIntervalLength(e),S(this,i,p,"f"),S(this,c,t,"f"),S(this,l,e,"f");const{allTokens:w,allDetectedTokens:b}=A(this,a,"m",g).call(this);S(this,u,w,"f"),S(this,d,b,"f"),A(this,a,"m",m).call(this),A(this,a,"m",h).call(this)}enable(){S(this,c,!1,"f")}disable(){S(this,c,!0,"f")}async start(e,t){A(this,a,"m",f).call(this),S(this,r,R.Active,"f"),await A(this,a,"m",y).call(this,e,t)}stop(){A(this,a,"m",f).call(this),S(this,r,R.Inactive,"f")}async updateExchangeRates(e){await this.updateExchangeRatesByChainId(e)}async updateExchangeRatesByChainId(e){if(A(this,c,"f"))return;const t=e.map(async({chainId:e,nativeCurrency:t})=>{const s=A(this,a,"m",p).call(this,e),n=`${e}:${t}:${s.length}`;if(n in A(this,o,"f"))return await A(this,o,"f")[n],null;const{promise:r,resolve:i,reject:c}=(0,E.createDeferredPromise)({suppressUnhandledRejection:!0});A(this,o,"f")[n]=r;try{const n=await A(this,a,"m",w).call(this,{tokenAddresses:s,chainId:e,nativeCurrency:t}),r={[e]:{...n??{}}};return i(),r}catch(e){throw c(e),e}finally{delete A(this,o,"f")[n]}}),s=(await Promise.allSettled(t)).reduce((e,t)=>("fulfilled"===t.status&&t.value&&(e={...e,...t.value}),e),{});Object.keys(s).length>0&&this.update(e=>{e.marketData={...e.marketData,...s}})}async _executePoll({chainIds:e}){const{networkConfigurationsByChainId:t}=this.messagingSystem.call("NetworkController:getState"),s=e.reduce((e,s)=>{const a=t[s];return a?(e.push({chainId:s,nativeCurrency:a.nativeCurrency}),e):(console.error(`TokenRatesController: No network configuration found for chainId ${s}`),e)},[]);await this.updateExchangeRatesByChainId(s)}resetState(){this.update(()=>(0,s.getDefaultTokenRatesControllerState)())}}s.TokenRatesController=M,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,l=new WeakMap,u=new WeakMap,d=new WeakMap,a=new WeakSet,m=function(){this.messagingSystem.subscribe("TokensController:stateChange",async({allTokens:e,allDetectedTokens:t})=>{if(A(this,c,"f"))return;const{networkConfigurationsByChainId:s}=this.messagingSystem.call("NetworkController:getState"),a=[...new Set([...Object.keys(e),...Object.keys(t)])].filter(s=>!(0,C.isEqual)(A(this,u,"f")[s],e[s])||!(0,C.isEqual)(A(this,d,"f")[s],t[s]));S(this,u,e,"f"),S(this,d,t,"f");const n=a.reduce((e,t)=>{const a=s[t];return a?(e.push({chainId:t,nativeCurrency:a.nativeCurrency}),e):(console.error(`TokenRatesController: No network configuration found for chainId ${t}`),e)},[]);await this.updateExchangeRatesByChainId(n)},({allTokens:e,allDetectedTokens:t})=>({allTokens:e,allDetectedTokens:t}))},h=function(){this.messagingSystem.subscribe("NetworkController:stateChange",async({networkConfigurationsByChainId:e},t)=>{const s=Object.values(e).map(({chainId:e,nativeCurrency:t})=>({chainId:e,nativeCurrency:t}));A(this,r,"f")===R.Active&&await this.updateExchangeRates(s);for(const e of t)if("remove"===e.op&&"networkConfigurationsByChainId"===e.path[0]){const t=e.path[1];this.update(e=>{delete e.marketData[t]})}})},p=function(e){const t=e=>Object.values(e??{}).flatMap(e=>e.map(({address:e})=>(0,T.toChecksumHexAddress)(e))),s=t(A(this,u,"f")[e]),a=t(A(this,d,"f")[e]);return[...new Set([...s,...a])].sort()},g=function(){const{allTokens:e,allDetectedTokens:t}=this.messagingSystem.call("TokensController:getState");return{allTokens:e,allDetectedTokens:t}},f=function(){A(this,n,"f")&&clearTimeout(A(this,n,"f"))},y=async function e(t,s){await(0,T.safelyExecute)(()=>this.updateExchangeRates([{chainId:t,nativeCurrency:s}])),S(this,n,setTimeout(()=>{A(this,a,"m",e).call(this,t,s)},A(this,l,"f")),"f")},w=async function({tokenAddresses:e,chainId:t,nativeCurrency:s}){return A(this,i,"f").validateChainIdSupported(t)?A(this,i,"f").validateCurrencySupported(s)?await A(this,a,"m",b).call(this,{tokenAddresses:e,chainId:t,nativeCurrency:s}):await A(this,a,"m",k).call(this,{chainId:t,tokenAddresses:e,nativeCurrency:s}):e.reduce((e,t)=>e={...e,[t]:undefined},{})},b=async function({tokenAddresses:e,chainId:t,nativeCurrency:s}){let a;if(a=await(0,I.reduceInBatchesSerially)({values:[...e].sort(),batchSize:I.TOKEN_PRICES_BATCH_SIZE,eachBatch:async(e,a)=>({...e,...await A(this,i,"f").fetchTokenPrices({tokenAddresses:a,chainId:t,currency:s})}),initialResult:{}}),0===e.length){const e=await A(this,i,"f").fetchTokenPrices({tokenAddresses:[],chainId:t,currency:s});a={[(0,P.getNativeTokenAddress)(t)]:{currency:s,...e[(0,P.getNativeTokenAddress)(t)]}}}return Object.entries(a).reduce((e,[t,s])=>e={...e,[t]:{...s}},{})},k=async function({chainId:e,tokenAddresses:t,nativeCurrency:s}){const[n,r]=await Promise.all([A(this,a,"m",b).call(this,{tokenAddresses:t,chainId:e,nativeCurrency:T.FALL_BACK_VS_CURRENCY}),x({from:T.FALL_BACK_VS_CURRENCY,to:s})]);if(null===r)return{};const i=e=>e!==undefined&&null!==e?e*r:undefined;return Object.entries(n).reduce((e,[t,a])=>e={...e,[t]:{...a,currency:s,price:i(a.price),marketCap:i(a.marketCap),allTimeHigh:i(a.allTimeHigh),allTimeLow:i(a.allTimeLow),totalVolume:i(a.totalVolume),high1d:i(a.high1d),low1d:i(a.low1d),dilutedMarketCap:i(a.dilutedMarketCap)}},{})},s.default=M}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenRatesController.cjs"}],[1149,{"../assetsUtil.cjs":1152,"../token-service.cjs":1167,"@metamask/base-controller":1222},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},d=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.TokenSearchDiscoveryDataController=s.getDefaultTokenSearchDiscoveryDataControllerState=s.MAX_TOKEN_DISPLAY_DATA_LENGTH=s.controllerName=void 0;const m=e("@metamask/base-controller"),h=e("../assetsUtil.cjs"),p=e("../token-service.cjs");s.controllerName="TokenSearchDiscoveryDataController",s.MAX_TOKEN_DISPLAY_DATA_LENGTH=10;const g={tokenDisplayData:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0},swapsTokenAddressesByChainId:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0}};function f(){return{tokenDisplayData:[],swapsTokenAddressesByChainId:{}}}s.getDefaultTokenSearchDiscoveryDataControllerState=f;class y extends m.BaseController{constructor({state:e={},messenger:t,tokenPricesService:l,swapsSupportedChainIds:d,fetchTokens:m,fetchSwapsTokensThresholdMs:h}){super({name:s.controllerName,metadata:g,messenger:t,state:{tokenDisplayData:[],swapsTokenAddressesByChainId:{},...e}}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),u(this,n,new AbortController,"f"),u(this,r,l,"f"),u(this,i,d,"f"),u(this,o,m,"f"),u(this,c,h,"f")}async fetchSwapsTokens(e){if(!d(this,i,"f").includes(e))return;const t=this.state.swapsTokenAddressesByChainId[e];if((!t||t.lastFetched<Date.now()-d(this,c,"f"))&&!t?.isFetching)try{this.update(t=>{t.swapsTokenAddressesByChainId[e]?t.swapsTokenAddressesByChainId[e].isFetching=!0:t.swapsTokenAddressesByChainId[e]={lastFetched:Date.now(),addresses:[],isFetching:!0}});const t=await d(this,o,"f").call(this,e);this.update(s=>{s.swapsTokenAddressesByChainId[e]={lastFetched:Date.now(),addresses:t.map(e=>e.address),isFetching:!1}})}catch(e){console.error(e)}}async fetchTokenDisplayData(e,t){let r;await this.fetchSwapsTokens(e);try{r=await(0,p.fetchTokenMetadata)(e,t,d(this,n,"f").signal)}catch(e){if(!(e instanceof Error&&e.message.includes(p.TOKEN_METADATA_NO_SUPPORT_ERROR)))throw e}const{currentCurrency:i}=this.messagingSystem.call("CurrencyRateController:getState");let o;if(r){const s=await d(this,a,"m",l).call(this,e,t);o={found:!0,address:t,chainId:e,currency:i,token:{...r,isERC721:!1,image:(0,h.formatIconUrlWithProxy)({chainId:e,tokenAddress:t})},price:s}}else o={found:!1,address:t,chainId:e,currency:i};this.update(a=>{a.tokenDisplayData=[o,...a.tokenDisplayData.filter(s=>s.address!==t||s.chainId!==e||s.currency!==i)].slice(0,s.MAX_TOKEN_DISPLAY_DATA_LENGTH)})}}s.TokenSearchDiscoveryDataController=y,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,a=new WeakSet,l=async function(e,t){const{currentCurrency:s}=this.messagingSystem.call("CurrencyRateController:getState");try{return(await d(this,r,"f").fetchTokenPrices({chainId:e,tokenAddresses:[t],currency:s}))[t]??null}catch(e){return console.error(e),null}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenSearchDiscoveryDataController/TokenSearchDiscoveryDataController.cjs"}],[1150,{"./TokenSearchDiscoveryDataController.cjs":1149},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./TokenSearchDiscoveryDataController.cjs"),s)}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenSearchDiscoveryDataController/index.cjs"}],[1151,{"./Standards/ERC20Standard.cjs":1142,"./Standards/NftStandards/ERC1155/ERC1155Standard.cjs":1143,"./assetsUtil.cjs":1152,"./token-service.cjs":1167,"@ethersproject/contracts":654,"@ethersproject/providers":692,"@metamask/base-controller":1222,"@metamask/contract-metadata":1298,"@metamask/controller-utils":1301,"@metamask/metamask-eth-abis":2064,"@metamask/rpc-errors":2384,"@metamask/utils":2799,"async-mutex":3582,lodash:4534,uuid:5366},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g,f,y,w,b,k,S=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},A=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},T=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.TokensController=s.getDefaultTokensState=void 0;const v=e("@ethersproject/contracts"),E=e("@ethersproject/providers"),C=e("@metamask/base-controller"),I=T(e("@metamask/contract-metadata")),_=e("@metamask/controller-utils"),P=e("@metamask/metamask-eth-abis"),R=e("@metamask/rpc-errors"),x=e("@metamask/utils"),N=e("async-mutex"),M=e("lodash"),D=e("uuid"),O=e("./assetsUtil.cjs"),j=e("./Standards/ERC20Standard.cjs"),B=e("./Standards/NftStandards/ERC1155/ERC1155Standard.cjs"),L=e("./token-service.cjs"),F={allTokens:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0},allIgnoredTokens:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0},allDetectedTokens:{includeInStateLogs:!1,persist:!0,anonymous:!1,usedInUi:!0}},$="TokensController";s.getDefaultTokensState=()=>({allTokens:{},allIgnoredTokens:{},allDetectedTokens:{}});class U extends C.BaseController{constructor({provider:e,state:t,messenger:d}){super({name:$,metadata:F,messenger:d,state:{...(0,s.getDefaultTokensState)(),...t}}),a.add(this),n.set(this,new N.Mutex),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),S(this,i,e,"f"),S(this,r,A(this,a,"m",b).call(this).id,"f"),S(this,o,new AbortController,"f"),this.messagingSystem.registerActionHandler(`${$}:addDetectedTokens`,this.addDetectedTokens.bind(this)),this.messagingSystem.registerActionHandler(`${$}:addTokens`,this.addTokens.bind(this)),this.messagingSystem.subscribe("AccountsController:selectedEvmAccountChange",A(this,a,"m",u).bind(this)),this.messagingSystem.subscribe("NetworkController:stateChange",A(this,a,"m",l).bind(this)),this.messagingSystem.subscribe("KeyringController:accountRemoved",e=>A(this,a,"m",c).call(this,e)),this.messagingSystem.subscribe("TokenListController:stateChange",({tokensChainsCache:e})=>{const{allTokens:t}=this.state,s=A(this,a,"m",k).call(this),n=(0,M.cloneDeep)(t);for(const[t,a]of Object.entries(e)){const e=a?.data||{};if(n[t]&&n[t][s]){const a=n[t][s];for(const[,t]of Object.entries(a)){const s=e[t.address];s&&s.name&&!t.name&&(t.name=s.name)}}}this.update(()=>({...this.state,allTokens:n}))})}async addToken({address:e,symbol:t,decimals:s,name:r,image:i,interactingAddress:o,networkClientId:c}){const l=await A(this,n,"f").acquire(),{allTokens:u,allIgnoredTokens:h,allDetectedTokens:p}=this.state,g=this.messagingSystem.call("NetworkController:getNetworkClientById",c).configuration.chainId,w=A(this,a,"m",y).call(this,o);try{e=(0,_.toChecksumHexAddress)(e);const n=u[g]?.[w]||[],o=h[g]?.[w]||[],l=p[g]?.[w]||[],y=[...n],[b,k]=await Promise.all([A(this,a,"m",m).call(this,e,c),A(this,a,"m",d).call(this,e,g)]),S={address:e,symbol:t,decimals:s,image:i||(0,O.formatIconUrlWithProxy)({chainId:g,tokenAddress:e}),isERC721:b,aggregators:(0,O.formatAggregatorNames)(k?.aggregators||[]),name:r},T=y.findIndex(t=>t.address.toLowerCase()===e.toLowerCase());-1!==T?y[T]=S:y.push(S);const v=o.filter(t=>t.toLowerCase()!==e.toLowerCase()),E=l.filter(t=>t.address.toLowerCase()!==e.toLowerCase()),{newAllTokens:C,newAllIgnoredTokens:I,newAllDetectedTokens:P}=A(this,a,"m",f).call(this,{newTokens:y,newIgnoredTokens:v,newDetectedTokens:E,interactingAddress:w,interactingChainId:g}),R={allTokens:C,allIgnoredTokens:I,allDetectedTokens:P};return this.update(e=>{Object.assign(e,R)}),y}finally{l()}}async addTokens(e,t){const s=await A(this,n,"f").acquire(),{allTokens:r,allIgnoredTokens:i,allDetectedTokens:o}=this.state,c={},l=this.messagingSystem.call("NetworkController:getNetworkClientById",t).configuration.chainId,u=[...r[l]?.[A(this,a,"m",b).call(this).address]||[],...e].reduce((e,t)=>(e[t.address]=t,e),{});try{e.forEach(e=>{const{address:t,symbol:s,decimals:a,image:n,aggregators:r,name:i}=e,o={address:(0,_.toChecksumHexAddress)(t),symbol:s,decimals:a,image:n,aggregators:r,name:i};return u[t]=o,c[t.toLowerCase()]=!0,o});const t=Object.values(u),s=i[l]?.[A(this,a,"m",k).call(this)]?.filter(e=>!u[e.toLowerCase()]),n=l?o?.[l]?.[A(this,a,"m",k).call(this)]:[],r=n?.filter(e=>!c[e.address.toLowerCase()]),{newAllTokens:d,newAllDetectedTokens:m,newAllIgnoredTokens:h}=A(this,a,"m",f).call(this,{newTokens:t,newDetectedTokens:r,newIgnoredTokens:s,interactingChainId:l});this.update(e=>{e.allTokens=d,e.allDetectedTokens=m,e.allIgnoredTokens=h})}finally{s()}}ignoreTokens(e,t){const s=this.messagingSystem.call("NetworkController:getNetworkClientById",t).configuration.chainId,{allTokens:n,allDetectedTokens:r,allIgnoredTokens:i}=this.state,o={},c=i[s]?.[A(this,a,"m",k).call(this)]||[];let l=[...c];const u=n[s]?.[A(this,a,"m",k).call(this)]||[],d=r[s]?.[A(this,a,"m",k).call(this)]||[],m=e.map(e=>{const t=(0,_.toChecksumHexAddress)(e);return o[e.toLowerCase()]=!0,t});l=[...c,...m];const h=d.filter(e=>!o[e.address.toLowerCase()]),p=u.filter(e=>!o[e.address.toLowerCase()]),{newAllIgnoredTokens:g,newAllDetectedTokens:y,newAllTokens:w}=A(this,a,"m",f).call(this,{newIgnoredTokens:l,newDetectedTokens:h,newTokens:p,interactingChainId:s});this.update(e=>{e.allIgnoredTokens=g,e.allDetectedTokens=y,e.allTokens=w})}async addDetectedTokens(e,t){const s=await A(this,n,"f").acquire(),{chainId:r}=t,i=t?.selectedAddress??A(this,a,"m",k).call(this),{allTokens:o,allDetectedTokens:c,allIgnoredTokens:l}=this.state;let u=[...o?.[r]?.[i]??[]],d=[...c?.[r]?.[i]??[]];try{e.forEach(e=>{const{address:t,symbol:s,decimals:a,image:n,aggregators:o,isERC721:c,name:m}=e,h=(0,_.toChecksumHexAddress)(t),p={address:h,symbol:s,decimals:a,image:n,isERC721:c,aggregators:o,name:m},g=u.findIndex(e=>e.address.toLowerCase()===h.toLowerCase());if(-1!==g)u[g]=p;else{if(-1===(l?.[r]?.[i]?.indexOf(t)??-1)){const e=d.findIndex(e=>e.address.toLowerCase()===h.toLowerCase());-1!==e?d[e]=p:d.push(p)}}});const{newAllTokens:t,newAllDetectedTokens:s}=A(this,a,"m",f).call(this,{newTokens:u,newDetectedTokens:d,interactingAddress:i,interactingChainId:r}),n=A(this,a,"m",k).call(this);u=t?.[r]?.[n]||[],d=s?.[r]?.[n]||[],this.update(e=>{e.allTokens=t,e.allDetectedTokens=s})}finally{s()}}async updateTokenType(e,t){const s=this.messagingSystem.call("NetworkController:getNetworkClientById",t).configuration.chainId,n=await A(this,a,"m",m).call(this,e,t),r=A(this,a,"m",k).call(this),i=[...this.state.allTokens[s][r]],o=i.findIndex(t=>t.address.toLowerCase()===e.toLowerCase()),c={...i[o],isERC721:n};return i[o]=c,this.update(e=>{e.allTokens[s][r]=i}),c}async watchAsset({asset:e,type:t,interactingAddress:s,networkClientId:n}){if(t!==_.ERC20)throw new Error(`Asset of type ${t} not supported`);if(!e.address)throw R.rpcErrors.invalidParams("Address must be specified");if(!(0,_.isValidHexAddress)(e.address))throw R.rpcErrors.invalidParams(`Invalid address "${e.address}"`);const r=A(this,a,"m",y).call(this,s);if(await A(this,a,"m",m).call(this,e.address,n))throw R.rpcErrors.invalidParams(`Contract ${e.address} must match type ${t}, but was detected as ${_.ERC721}`);const i=A(this,a,"m",h).call(this,n);if(await(0,_.safelyExecute)(()=>new B.ERC1155Standard(i).contractSupportsBase1155Interface(e.address)))throw R.rpcErrors.invalidParams(`Contract ${e.address} must match type ${t}, but was detected as ${_.ERC1155}`);const o=new j.ERC20Standard(i),[c,l,u]=await Promise.all([(0,_.safelyExecute)(()=>o.getTokenName(e.address)),(0,_.safelyExecute)(()=>o.getTokenSymbol(e.address)),(0,_.safelyExecute)(async()=>o.getTokenDecimals(e.address))]);if(e.name=c,!e.symbol&&!l)throw R.rpcErrors.invalidParams("A symbol is required, but was not found in either the request or contract");if(l!==undefined&&e.symbol!==undefined&&e.symbol.toUpperCase()!==l.toUpperCase())throw R.rpcErrors.invalidParams(`The symbol in the request (${e.symbol}) does not match the symbol in the contract (${l})`);if(e.symbol=l??e.symbol,"string"!=typeof e.symbol)throw R.rpcErrors.invalidParams("Invalid symbol: not a string");if(e.symbol.length>11)throw R.rpcErrors.invalidParams(`Invalid symbol "${e.symbol}": longer than 11 characters`);if(e.decimals===undefined&&u===undefined)throw R.rpcErrors.invalidParams("Decimals are required, but were not found in either the request or contract");if(u!==undefined&&e.decimals!==undefined&&String(e.decimals)!==u)throw R.rpcErrors.invalidParams(`The decimals in the request (${e.decimals}) do not match the decimals in the contract (${u})`);const d=u??e.decimals,p=parseInt(d,10);if(!Number.isInteger(p)||p>36||p<0)throw R.rpcErrors.invalidParams(`Invalid decimals "${d}": must be an integer 0 <= 36`);e.decimals=p;const f={asset:e,id:A(this,a,"m",g).call(this),time:Date.now(),type:t,interactingAddress:r};await A(this,a,"m",w).call(this,f);const{address:b,symbol:k,decimals:S,name:T,image:v}=e;await this.addToken({address:b,symbol:k,decimals:S,name:T,image:v,interactingAddress:f.interactingAddress,networkClientId:n})}clearIgnoredTokens(){this.update(e=>{e.allIgnoredTokens={}})}resetState(){this.update(()=>(0,s.getDefaultTokensState)())}}s.TokensController=U,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,a=new WeakSet,c=function(e){if(!((0,x.isStrictHexString)(e.toLowerCase())&&(0,_.isValidHexAddress)(e)))return;const{allTokens:t,allIgnoredTokens:s,allDetectedTokens:a}=this.state,n=(0,M.cloneDeep)(t),r=(0,M.cloneDeep)(a),i=(0,M.cloneDeep)(s);for(const t of Object.keys(n))n[t][e]&&delete n[t][e];for(const t of Object.keys(r))r[t][e]&&delete r[t][e];for(const t of Object.keys(i))i[t][e]&&delete i[t][e];this.update(e=>{e.allTokens=n,e.allIgnoredTokens=i,e.allDetectedTokens=r})},l=function(e,t){for(const e of t)if("remove"===e.op&&"networkConfigurationsByChainId"===e.path[0]){const t=e.path[1];this.update(e=>{delete e.allTokens[t],delete e.allIgnoredTokens[t],delete e.allDetectedTokens[t]})}},u=function(e){S(this,r,e.id,"f")},d=async function(e,t){try{return await(0,L.fetchTokenMetadata)(t,e,A(this,o,"f").signal)}catch(e){if(e instanceof Error&&e.message.includes(L.TOKEN_METADATA_NO_SUPPORT_ERROR))return undefined;throw e}},m=async function(e,t){const s=(0,_.toChecksumHexAddress)(e);if(!0===I.default[s]?.erc721)return Promise.resolve(!0);if(!0===I.default[s]?.erc20)return Promise.resolve(!1);const n=A(this,a,"m",p).call(this,e,P.abiERC721,t);try{return await n.supportsInterface(_.ERC721_INTERFACE_ID)}catch(e){return!1}},h=function(e){return new E.Web3Provider(e?this.messagingSystem.call("NetworkController:getNetworkClientById",e).provider:A(this,i,"f"))},p=function(e,t,s){const n=A(this,a,"m",h).call(this,s);return new v.Contract(e,t,n)},g=function(){return(0,D.v1)()},f=function(e){const{newTokens:t,newIgnoredTokens:s,newDetectedTokens:n,interactingAddress:r,interactingChainId:i}=e,{allTokens:o,allIgnoredTokens:c,allDetectedTokens:l}=this.state,u=A(this,a,"m",y).call(this,r);let d=o;if(t?.length||t&&o&&o[i]&&o[i][u]){const e={...o[i],[u]:t};d={...o,[i]:e}}let m=c;if(s?.length||s&&c&&c[i]&&c[i][u]){const e={...c[i],[u]:s};m={...c,[i]:e}}let h=l;if(n?.length||n&&l&&l[i]&&l[i][u]){const e={...l[i],[u]:n};h={...l,[i]:e}}return{newAllTokens:d,newAllIgnoredTokens:m,newAllDetectedTokens:h}},y=function(e){return e||A(this,a,"m",k).call(this)},w=async function(e){return this.messagingSystem.call("ApprovalController:addRequest",{id:e.id,origin:_.ORIGIN_METAMASK,type:_.ApprovalType.WatchAsset,requestData:{id:e.id,interactingAddress:e.interactingAddress,asset:{address:e.asset.address,decimals:e.asset.decimals,symbol:e.asset.symbol,image:e.asset.image||null}}},!0)},b=function(){return this.messagingSystem.call("AccountsController:getSelectedAccount")},k=function(){const e=this.messagingSystem.call("AccountsController:getAccount",A(this,r,"f"));return e?.address||""},s.default=U}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokensController.cjs"}],[1152,{"@metamask/controller-utils":1301,"@metamask/utils":2799,"bn.js":3699,multiformats:4705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.accountAddressToCaipReference=s.getKeyByValue=s.fetchTokenContractExchangeRates=s.reduceInBatchesSerially=s.divideIntoBatches=s.ethersBigNumberToBN=s.addUrlProtocolPrefix=s.getFormattedIpfsUrl=s.getIpfsCIDv1AndPath=s.removeIpfsProtocolPrefix=s.isTokenListSupportedForNetwork=s.isTokenDetectionSupportedForNetwork=s.SupportedStakedBalanceNetworks=s.SupportedTokenDetectionNetworks=s.formatIconUrlWithProxy=s.formatAggregatorNames=s.hasNewCollectionFields=s.compareNftMetadata=s.TOKEN_PRICES_BATCH_SIZE=void 0;const n=e("@metamask/controller-utils"),r=e("@metamask/utils"),i=a(e("bn.js"));s.TOKEN_PRICES_BATCH_SIZE=30,s.compareNftMetadata=function(e,t){return["image","backgroundColor","imagePreview","imageThumbnail","imageOriginal","animation","animationOriginal","externalLink","tokenURI","chainId"].reduce((s,a)=>e[a]&&e[a]!==t[a]?s+1:s,0)>0},s.hasNewCollectionFields=function(e,t){const s=Object.keys(e.collection??{}),a=new Set(Object.keys(t.collection??{}));return s.some(e=>!a.has(e))};const o={aave:"Aave",bancor:"Bancor",cmc:"CMC",cryptocom:"Crypto.com",coinGecko:"CoinGecko",oneInch:"1inch",paraswap:"Paraswap",pmm:"PMM",zapper:"Zapper",zerion:"Zerion",zeroEx:"0x",synthetix:"Synthetix",yearn:"Yearn",apeswap:"ApeSwap",binanceDex:"BinanceDex",pancakeTop100:"PancakeTop100",pancakeExtended:"PancakeExtended",balancer:"Balancer",quickswap:"QuickSwap",matcha:"Matcha",pangolinDex:"PangolinDex",pangolinDexStableCoin:"PangolinDexStableCoin",pangolinDexAvaxBridge:"PangolinDexAvaxBridge",traderJoe:"TraderJoe",airswapLight:"AirswapLight",kleros:"Kleros"};s.formatAggregatorNames=e=>e.map(e=>o[e]||`${e[0].toUpperCase()}${e.substring(1,e.length)}`);var c,l;function u(e){return Object.values(c).includes(e)}function d(e){if(e.startsWith("ipfs://ipfs/"))return e.replace("ipfs://ipfs/","");if(e.startsWith("ipfs://"))return e.replace("ipfs://","");throw new Error("this method should not be used with non ipfs urls")}async function m(t){const s=d(t),a=s.indexOf("/"),n=-1!==a?s.substring(0,a):s,r=-1!==a?s.substring(a):undefined,{CID:i}=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t}(e("multiformats"));return{cid:i.parse(n).toV1().toString(),path:r}}function h(e){return e.match(/(^http:\/\/)|(^https:\/\/)/u)?e:`https://${e}`}function p(e,{batchSize:t}){const s=[];for(let a=0;a<e.length;a+=t)s.push(e.slice(a,a+t));return s}async function g({values:e,batchSize:t,eachBatch:s,initialResult:a}){const n=p(e,{batchSize:t});let r=a;for(const[e,t]of n.entries())r=await s(r,t,e);return r}s.formatIconUrlWithProxy=({chainId:e,tokenAddress:t})=>`https://static.cx.metamask.io/api/v1/tokenIcons/${(0,n.convertHexToDecimal)(e).toString()}/${t.toLowerCase()}.png`,function(e){e.mainnet="0x1",e.bsc="0x38",e.polygon="0x89",e.avax="0xa86a",e.aurora="0x4e454152",e.linea_goerli="0xe704",e.linea_mainnet="0xe708",e.arbitrum="0xa4b1",e.optimism="0xa",e.base="0x2105",e.zksync="0x144",e.cronos="0x19",e.celo="0xa4ec",e.gnosis="0x64",e.fantom="0xfa",e.polygon_zkevm="0x44d",e.moonbeam="0x504",e.moonriver="0x505",e.sei="0x531",e.monad_mainnet="0x8f"}(c||(s.SupportedTokenDetectionNetworks=c={})),function(e){e.mainnet="0x1",e.hoodi="0x88bb0"}(l||(s.SupportedStakedBalanceNetworks=l={})),s.isTokenDetectionSupportedForNetwork=u,s.isTokenListSupportedForNetwork=function(e){return u(e)},s.removeIpfsProtocolPrefix=d,s.getIpfsCIDv1AndPath=m,s.getFormattedIpfsUrl=async function(e,t,s){const{host:a,protocol:n,origin:r}=new URL(h(e));if(s){const{cid:e,path:s}=await m(t);return`${n}//${e}.ipfs.${a}${s??""}`}return`${r}/ipfs/${d(t)}`},s.addUrlProtocolPrefix=h,s.ethersBigNumberToBN=function(e){return new i.default((0,r.remove0x)(e.toHexString()),"hex")},s.divideIntoBatches=p,s.reduceInBatchesSerially=g,s.fetchTokenContractExchangeRates=async function({tokenPricesService:e,nativeCurrency:t,tokenAddresses:a,chainId:r}){const i=e.validateChainIdSupported(r),o=e.validateCurrencySupported(t);if(!i||!o)return{};const c=await g({values:[...a].sort(),batchSize:s.TOKEN_PRICES_BATCH_SIZE,eachBatch:async(s,a)=>({...s,...await e.fetchTokenPrices({tokenAddresses:a,chainId:r,currency:t})}),initialResult:{}});return Object.entries(c).reduce((e,[t,s])=>({...e,[(0,n.toChecksumHexAddress)(t)]:s?.price}),{})},s.getKeyByValue=function(e,t){for(const[s,a]of e.entries())if(a===t)return s;return null},s.accountAddressToCaipReference=function(e,t){return`${(0,r.toCaipChainId)(r.KnownCaipNamespace.Eip155,(0,r.hexToNumber)(e).toString())}:${t}`}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/assetsUtil.cjs"}],[1153,{"./AssetsContractController.cjs":1124,"./token-prices-service/codefi-v2.cjs":1165,"@metamask/account-api":1083,"@metamask/keyring-api":1994,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.calculateBalanceChangeForAccountGroup=s.calculateBalanceChangeForAllWallets=s.calculateBalanceForAllWallets=void 0;const a=e("@metamask/account-api"),n=e("@metamask/keyring-api"),r=e("@metamask/utils"),i=e("./AssetsContractController.cjs"),o=e("./token-prices-service/codefi-v2.cjs"),c={"1d":"pricePercentChange1d","7d":"pricePercentChange7d","30d":"pricePercentChange30d"},l={"1d":"P1D","7d":"P7D","30d":"P30D"},u=(e,t)=>{if(!e)return!0;if((0,r.isStrictHexString)(t))return Boolean(e[r.KnownCaipNamespace.Eip155]?.[t]);const{namespace:s}=(0,r.parseCaipChainId)(t);return Boolean(e[s]?.[t])},d=(e,t,s)=>{const n=(0,a.parseAccountGroupId)(s).wallet.id,r=e.accountTree.wallets[n];if(!r)return[];const i=r.groups[s];return i?i.accounts.map(e=>t.internalAccounts.accounts[e]).filter(Boolean):[]},m=e=>"number"==typeof e&&!Number.isNaN(e);function h(e,t,s,a,n,r){const c=t.tokenBalances[e.address]??{};return Object.entries(c).filter(([e])=>r(e)).flatMap(([e,t])=>Object.entries(t).map(([t,s])=>({chainId:e,tokenAddress:t,balance:s}))).map(t=>{const{chainId:r,tokenAddress:c,balance:l}=t,u=i.STAKING_CONTRACT_ADDRESS_BY_CHAINID[r],d="0x0000000000000000000000000000000000000000"===c,h=!!u&&c.toLowerCase()===u.toLowerCase();if(!d&&!h){const t=s?.allTokens?.[r]?.[e.address],a=t?.find(e=>e.address===c);if(!a)return null}const p=d||h?(0,o.getNativeTokenAddress)(r):c,g=a?.marketData?.[r]?.[p];if(!g?.price)return null;const f=n.currencyRates[g.currency]?.conversionRate;if(!f)return null;let y=18;if(!d&&!h){const t=s?.allTokens?.[r]?.[e.address],a=t?.find(e=>e.address===c);y=m(a?.decimals)?a?.decimals:18}const w=parseInt(l,16);if(!m(w))return null;return{userCurrencyValue:w/Math.pow(10,y)*g.price*f,tokenMarketData:g}}).filter(e=>null!==e)}function p(e,t,s,a){const n=t.balances[e.id]??{};return Object.entries(n).filter(([e])=>a(e)).map(([e,t])=>{const a=parseFloat(t.amount);if(Number.isNaN(a))return null;const n=s.conversionRates[e];if(!n)return null;const r=parseFloat(n.rate);if(Number.isNaN(r))return null;return{assetId:e,userCurrencyValue:a*r,conversionRate:n}}).filter(e=>null!==e)}function g(e,t,s,a,n,r,i){return h(e,s,a,n,r,i).map(e=>{const s=e.tokenMarketData[c[t]];if(!m(s))return null;const a=Number((1+s/100).toFixed(8));return 0===a?null:{current:e.userCurrencyValue,previous:e.userCurrencyValue/a}}).filter(e=>null!==e).reduce((e,t)=>(e.current+=t.current,e.previous+=t.previous,e),{current:0,previous:0})}function f(e,t,s,a,n){return p(e,s,a,n).map(e=>{const s=e.conversionRate?.marketData,a=s?.pricePercentChange,n=a?.[l[t]];if(!m(n))return null;const r=Number((1+n/100).toFixed(8));return 0===r?null:{current:e.userCurrencyValue,previous:e.userCurrencyValue/r}}).filter(e=>null!==e).reduce((e,t)=>({current:e.current+t.current,previous:e.previous+t.previous}),{current:0,previous:0})}s.calculateBalanceForAllWallets=function(e,t,s,a,i,o,c,l,m){const g=e=>u(m,e),f=e=>u(m,(0,r.parseCaipAssetType)(e).chainId),y=e=>function(e,t,s,a,n,r){return h(e,t,s,a,n,r).reduce((e,t)=>e+t.userCurrencyValue,0)}(e,s,c,a,l,g),w=e=>function(e,t,s,a){return p(e,t,s,a).reduce((e,t)=>e+t.userCurrencyValue,0)}(e,o,i,f),b=Object.entries(e.accountTree.wallets??{}).flatMap(([s,a])=>Object.keys(a?.groups||{}).flatMap(a=>d(e,t,a).map(e=>({walletId:s,groupId:a,account:e,isEvm:(0,n.isEvmAccountType)(e.type)})))).map(e=>{const t=e;return t.balance=e.isEvm?y(e.account):w(e.account),t});return{wallets:(t=>{const s={},a=e=>({walletId:e,groups:{},totalBalanceInUserCurrency:0,userCurrency:l.currentCurrency}),n=(e,t)=>({walletId:e,groupId:t,totalBalanceInUserCurrency:0,userCurrency:l.currentCurrency});return t.forEach(e=>{var t;const{walletId:r,groupId:i,balance:o}=e;s[r]??(s[r]=a(r)),(t=s[r].groups)[i]??(t[i]=n(r,i)),s[r].groups[i].totalBalanceInUserCurrency+=o,s[r].totalBalanceInUserCurrency+=o}),Object.entries(e.accountTree.wallets??{}).forEach(([e,t])=>{t&&(s[e]??(s[e]=a(e)),Object.keys(t.groups||{}).forEach(t=>{var a;(a=s[e].groups)[t]??(a[t]=n(e,t))}))}),s})(b),totalBalanceInUserCurrency:(k=b,k.reduce((e,t)=>e+t.balance,0)),userCurrency:l.currentCurrency};var k},s.calculateBalanceChangeForAllWallets=function(e,t,s,a,i,o,c,l,m,h){const p=e=>u(m,e),y=e=>{const{chainId:t}=(0,r.parseCaipAssetType)(e);return u(m,t)},w=e=>g(e,h,s,c,a,l,p),b=e=>f(e,h,o,i,y),k=(e=>e.reduce((e,t)=>(e.current+=t.current,e.previous+=t.previous,e),{current:0,previous:0}))(Object.entries(e.accountTree.wallets??{}).flatMap(([s,a])=>Object.keys(a?.groups||{}).flatMap(a=>d(e,t,a).map(e=>({walletId:s,groupId:a,account:e,isEvm:(0,n.isEvmAccountType)(e.type)})))).map(e=>{const t=e,s=e.isEvm?w(e.account):b(e.account);return t.current=s.current,t.previous=s.previous,t})),S=k.current-k.previous,A=0!==k.previous?S/k.previous*100:0;return{period:h,currentTotalInUserCurrency:Number(k.current.toFixed(8)),previousTotalInUserCurrency:Number(k.previous.toFixed(8)),amountChangeInUserCurrency:Number(S.toFixed(8)),percentChange:Number(A.toFixed(8)),userCurrency:l.currentCurrency}},s.calculateBalanceChangeForAccountGroup=function(e,t,s,a,i,o,c,l,m,h,p){const y=e=>u(m,e),w=e=>{const{chainId:t}=(0,r.parseCaipAssetType)(e);return u(m,t)},b=e=>g(e,p,s,c,a,l,y),k=e=>f(e,p,o,i,w),S=(e=>e.reduce((e,{account:t,isEvm:s})=>{const a=s?b(t):k(t);return e.current+=a.current,e.previous+=a.previous,e},{current:0,previous:0}))(d(e,t,h).map(e=>({account:e,isEvm:(0,n.isEvmAccountType)(e.type)}))),A=S.current-S.previous,T=0!==S.previous?A/S.previous*100:0;return{period:p,currentTotalInUserCurrency:Number(S.current.toFixed(8)),previousTotalInUserCurrency:Number(S.previous.toFixed(8)),amountChangeInUserCurrency:Number(A.toFixed(8)),percentChange:Number(T.toFixed(8)),userCurrency:l.currentCurrency}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/balances.cjs"}],[1154,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a;Object.defineProperty(s,"__esModule",{value:!0}),s.SUPPORTED_NETWORKS_ACCOUNTS_API_V4=s.Source=void 0,function(e){e.Custom="custom",e.Dapp="dapp",e.Detected="detected"}(a||(s.Source=a={})),s.SUPPORTED_NETWORKS_ACCOUNTS_API_V4=["0x1","0x89","0x38","0xe728","0x2105","0xa","0xa4b1","0x82750","0x531"]}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/constants.cjs"}],[1155,{"../assetsUtil.cjs":1152,"@metamask/controller-utils":1301},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchMultiExchangeRate=s.fetchExchangeRate=void 0;const a=e("@metamask/controller-utils"),n=e("../assetsUtil.cjs"),r=new Map([["MNT","MANTLE"],["OMNI","OMNINET"]]),i="https://min-api.cryptocompare.com";function o(e){if("Error"===e.Response)throw new Error(e.Message)}s.fetchExchangeRate=async function(e,t,s){e=e.toUpperCase(),t=t.toUpperCase(),e=r.get(e)??e,t=r.get(t)??t;const n=await(0,a.handleFetch)(function(e,t,s){return`${i}/data/price?fsym=${t}&tsyms=${e}`+(s&&"USD"!==e.toUpperCase()?",USD":"")}(e,t,s));o(n);const c=Number(n[e.toUpperCase()]),l=Number(n.USD);if(!Number.isFinite(c))throw new Error(`Invalid response for ${e.toUpperCase()}: ${n[e.toUpperCase()]}`);if(s&&!Number.isFinite(l))throw new Error(`Invalid response for usdConversionRate: ${n.USD}`);return{conversionRate:c,usdConversionRate:l}},s.fetchMultiExchangeRate=async function(e,t,s){const c=function(e,t,s=!1){const a=s&&!t.some(e=>"USD"===e.toUpperCase())?[...t,"USD"]:t,n=new URLSearchParams;n.append("fsyms",e.join(",")),n.append("tsyms",a.join(","));const r=new URL(`${i}/data/pricemulti`);return r.search=n.toString(),r.toString()}(t.map(e=>r.get(e)??e),[e],s),l=await(0,a.handleFetch)(c);o(l);const u={};for(const[t,a]of Object.entries(l)){const i=(0,n.getKeyByValue)(r,t);u[i?.toLowerCase()??t.toLowerCase()]={[e.toLowerCase()]:a[e.toUpperCase()],...s&&{usd:a.USD}}}return u}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/crypto-compare-service/crypto-compare.cjs"}],[1156,{"./crypto-compare.cjs":1155},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchMultiExchangeRate=s.fetchExchangeRate=void 0;var a=e("./crypto-compare.cjs");Object.defineProperty(s,"fetchExchangeRate",{enumerable:!0,get:function(){return a.fetchExchangeRate}}),Object.defineProperty(s,"fetchMultiExchangeRate",{enumerable:!0,get:function(){return a.fetchMultiExchangeRate}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/crypto-compare-service/index.cjs"}],[1157,{"./AccountTrackerController.cjs":1123,"./AssetsContractController.cjs":1124,"./CurrencyRateController.cjs":1125,"./DeFiPositionsController/DeFiPositionsController.cjs":1126,"./MultichainAssetsController/index.cjs":1131,"./MultichainAssetsRatesController/index.cjs":1135,"./MultichainBalancesController/index.cjs":1137,"./NftController.cjs":1138,"./NftDetectionController.cjs":1139,"./RatesController/index.cjs":1141,"./TokenBalancesController.cjs":1145,"./TokenDetectionController.cjs":1146,"./TokenListController.cjs":1147,"./TokenRatesController.cjs":1148,"./TokenSearchDiscoveryDataController/index.cjs":1150,"./TokensController.cjs":1151,"./assetsUtil.cjs":1152,"./balances.cjs":1153,"./selectors/token-selectors.cjs":1164,"./token-prices-service/index.cjs":1166,"./utils/formatters.cjs":1168},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),s.createFormatters=s.selectAssetsBySelectedAccountGroup=s.calculateBalanceChangeForAccountGroup=s.calculateBalanceChangeForAllWallets=s.calculateBalanceForAllWallets=s.DeFiPositionsController=s.TokenSearchDiscoveryDataController=s.getDefaultMultichainAssetsRatesControllerState=s.MultichainAssetsRatesController=s.getDefaultMultichainAssetsControllerState=s.MultichainAssetsController=s.MultichainBalancesController=s.Cryptocurrency=s.RatesController=s.getNativeTokenAddress=s.SUPPORTED_CHAIN_IDS=s.CodefiTokenPricesServiceV2=s.getKeyByValue=s.fetchTokenContractExchangeRates=s.getFormattedIpfsUrl=s.formatIconUrlWithProxy=s.isTokenDetectionSupportedForNetwork=s.TokensController=s.TokenRatesController=s.getDefaultTokenRatesControllerState=s.TokenListController=s.TokenDetectionController=s.TokenBalancesController=s.NftDetectionController=s.NftController=s.getDefaultNftControllerState=s.AssetsContractController=s.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID=s.AccountTrackerController=void 0;var r=e("./AccountTrackerController.cjs");Object.defineProperty(s,"AccountTrackerController",{enumerable:!0,get:function(){return r.AccountTrackerController}});var i=e("./AssetsContractController.cjs");Object.defineProperty(s,"SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID",{enumerable:!0,get:function(){return i.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID}}),Object.defineProperty(s,"AssetsContractController",{enumerable:!0,get:function(){return i.AssetsContractController}}),n(e("./CurrencyRateController.cjs"),s);var o=e("./NftController.cjs");Object.defineProperty(s,"getDefaultNftControllerState",{enumerable:!0,get:function(){return o.getDefaultNftControllerState}}),Object.defineProperty(s,"NftController",{enumerable:!0,get:function(){return o.NftController}});var c=e("./NftDetectionController.cjs");Object.defineProperty(s,"NftDetectionController",{enumerable:!0,get:function(){return c.NftDetectionController}});var l=e("./TokenBalancesController.cjs");Object.defineProperty(s,"TokenBalancesController",{enumerable:!0,get:function(){return l.TokenBalancesController}});var u=e("./TokenDetectionController.cjs");Object.defineProperty(s,"TokenDetectionController",{enumerable:!0,get:function(){return u.TokenDetectionController}});var d=e("./TokenListController.cjs");Object.defineProperty(s,"TokenListController",{enumerable:!0,get:function(){return d.TokenListController}});var m=e("./TokenRatesController.cjs");Object.defineProperty(s,"getDefaultTokenRatesControllerState",{enumerable:!0,get:function(){return m.getDefaultTokenRatesControllerState}}),Object.defineProperty(s,"TokenRatesController",{enumerable:!0,get:function(){return m.TokenRatesController}});var h=e("./TokensController.cjs");Object.defineProperty(s,"TokensController",{enumerable:!0,get:function(){return h.TokensController}});var p=e("./assetsUtil.cjs");Object.defineProperty(s,"isTokenDetectionSupportedForNetwork",{enumerable:!0,get:function(){return p.isTokenDetectionSupportedForNetwork}}),Object.defineProperty(s,"formatIconUrlWithProxy",{enumerable:!0,get:function(){return p.formatIconUrlWithProxy}}),Object.defineProperty(s,"getFormattedIpfsUrl",{enumerable:!0,get:function(){return p.getFormattedIpfsUrl}}),Object.defineProperty(s,"fetchTokenContractExchangeRates",{enumerable:!0,get:function(){return p.fetchTokenContractExchangeRates}}),Object.defineProperty(s,"getKeyByValue",{enumerable:!0,get:function(){return p.getKeyByValue}});var g=e("./token-prices-service/index.cjs");Object.defineProperty(s,"CodefiTokenPricesServiceV2",{enumerable:!0,get:function(){return g.CodefiTokenPricesServiceV2}}),Object.defineProperty(s,"SUPPORTED_CHAIN_IDS",{enumerable:!0,get:function(){return g.SUPPORTED_CHAIN_IDS}}),Object.defineProperty(s,"getNativeTokenAddress",{enumerable:!0,get:function(){return g.getNativeTokenAddress}});var f=e("./RatesController/index.cjs");Object.defineProperty(s,"RatesController",{enumerable:!0,get:function(){return f.RatesController}}),Object.defineProperty(s,"Cryptocurrency",{enumerable:!0,get:function(){return f.Cryptocurrency}});var y=e("./MultichainBalancesController/index.cjs");Object.defineProperty(s,"MultichainBalancesController",{enumerable:!0,get:function(){return y.MultichainBalancesController}});var w=e("./MultichainAssetsController/index.cjs");Object.defineProperty(s,"MultichainAssetsController",{enumerable:!0,get:function(){return w.MultichainAssetsController}}),Object.defineProperty(s,"getDefaultMultichainAssetsControllerState",{enumerable:!0,get:function(){return w.getDefaultMultichainAssetsControllerState}});var b=e("./MultichainAssetsRatesController/index.cjs");Object.defineProperty(s,"MultichainAssetsRatesController",{enumerable:!0,get:function(){return b.MultichainAssetsRatesController}}),Object.defineProperty(s,"getDefaultMultichainAssetsRatesControllerState",{enumerable:!0,get:function(){return b.getDefaultMultichainAssetsRatesControllerState}});var k=e("./TokenSearchDiscoveryDataController/index.cjs");Object.defineProperty(s,"TokenSearchDiscoveryDataController",{enumerable:!0,get:function(){return k.TokenSearchDiscoveryDataController}});var S=e("./DeFiPositionsController/DeFiPositionsController.cjs");Object.defineProperty(s,"DeFiPositionsController",{enumerable:!0,get:function(){return S.DeFiPositionsController}});var A=e("./balances.cjs");Object.defineProperty(s,"calculateBalanceForAllWallets",{enumerable:!0,get:function(){return A.calculateBalanceForAllWallets}});var T=e("./balances.cjs");Object.defineProperty(s,"calculateBalanceChangeForAllWallets",{enumerable:!0,get:function(){return T.calculateBalanceChangeForAllWallets}}),Object.defineProperty(s,"calculateBalanceChangeForAccountGroup",{enumerable:!0,get:function(){return T.calculateBalanceChangeForAccountGroup}});var v=e("./selectors/token-selectors.cjs");Object.defineProperty(s,"selectAssetsBySelectedAccountGroup",{enumerable:!0,get:function(){return v.selectAssetsBySelectedAccountGroup}});var E=e("./utils/formatters.cjs");Object.defineProperty(s,"createFormatters",{enumerable:!0,get:function(){return E.createFormatters}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/index.cjs"}],[1158,{"../AssetsContractController.cjs":1124,"../assetsUtil.cjs":1152,"../constants.cjs":1154,"./multi-chain-accounts.cjs":1160,"@ethersproject/contracts":654,"@metamask/controller-utils":1301,"bn.js":3699},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},l=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.AccountsApiBalanceFetcher=void 0;const d=e("@ethersproject/contracts"),m=e("@metamask/controller-utils"),h=u(e("bn.js")),p=e("./multi-chain-accounts.cjs"),g=e("../AssetsContractController.cjs"),f=e("../assetsUtil.cjs"),y=e("../constants.cjs"),w=e=>(0,m.toChecksumHexAddress)(e),b=(e,t)=>(0,f.accountAddressToCaipReference)(e,t);s.AccountsApiBalanceFetcher=class{constructor(e="extension",t){a.add(this),n.set(this,"extension"),r.set(this,void 0),c(this,n,e,"f"),c(this,r,t,"f")}supports(e){return y.SUPPORTED_NETWORKS_ACCOUNTS_API_V4.includes(e)}async fetch({chainIds:e,queryAllAccounts:t,selectedAccount:s,allAccounts:n}){const r=[];for(const a of e.filter(e=>this.supports(e)))t?n.forEach(e=>r.push(b(a,e.address))):r.push(b(a,s));if(!r.length)return[];let c,u=!1;try{c=await l(this,a,"m",o).call(this,r)}catch(e){u=!0,console.error("Failed to fetch balances from API:",e),c=undefined}const d=await l(this,a,"m",i).call(this,r),p=[],g=new Map;r.forEach(e=>{const[,t,s]=e.split(":"),a=(0,m.toHex)(parseInt(t,10)),n=w(s);g.has(n)||g.set(n,new Set),g.get(n)?.add(a)});const f="0x0000000000000000000000000000000000000000",y=new Map;if(c){const e=c.flatMap(e=>{const t=e.accountAddress?.split(":")[2];if(!t)return[];const s=w(e.address),a=(0,m.toHex)(e.chainId);let n;try{const{balance:t,decimals:s}=e,[a="0",r=""]=t.split("."),i=a+r.padEnd(s,"0").slice(0,s);n=new h.default(i)}catch{n=undefined}return s===f&&n!==undefined&&y.set(`${t}-${a}`,n),[{success:n!==undefined,value:n,account:t,token:s,chainId:a}]});p.push(...e)}if(u?g.forEach((e,t)=>{e.forEach(e=>{p.push({success:!1,account:t,token:f,chainId:e})})}):g.forEach((e,t)=>{e.forEach(e=>{const s=`${t}-${e}`;y.get(s)||p.push({success:!0,value:new h.default("0"),account:t,token:f,chainId:e})})}),p.push(...d),u&&p.every(e=>!e.success))throw new Error("Failed to fetch any balance data due to API error");return p}},n=new WeakMap,r=new WeakMap,a=new WeakSet,i=async function(e){if(!l(this,r,"f"))return[];const t=[],s={};for(const t of e){const[,e,a]=t.split(":"),n=(0,m.toHex)(parseInt(e,10)),r=w(a);s[n]||(s[n]=[]),s[n].push(r)}for(const[e,a]of Object.entries(s)){const s=e;if(![f.SupportedStakedBalanceNetworks.mainnet,f.SupportedStakedBalanceNetworks.hoodi].includes(s))continue;if(!(s in g.STAKING_CONTRACT_ADDRESS_BY_CHAINID))continue;const n=g.STAKING_CONTRACT_ADDRESS_BY_CHAINID[s],i=l(this,r,"f").call(this,s),o=[{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"shares",type:"uint256"}],name:"convertToAssets",outputs:[{internalType:"uint256",name:"assets",type:"uint256"}],stateMutability:"view",type:"function"}];try{const e=new d.Contract(n,o,i);for(const r of a)try{const a=await(0,m.safelyExecute)(()=>e.getShares(r));if(a&&a.gt(0)){const i=await(0,m.safelyExecute)(()=>e.convertToAssets(a));i&&t.push({success:!0,value:new h.default(i.toString()),account:r,token:w(n),chainId:s})}else t.push({success:!0,value:new h.default("0"),account:r,token:w(n),chainId:s})}catch(e){console.error(`Error fetching staked balance for ${r}:`,e),t.push({success:!1,account:r,token:w(n),chainId:s})}}catch(t){console.error(`Error setting up staking contract for chain ${e}:`,t)}}return t},o=async function(e){if(e.length<=50){const{balances:t}=await(0,p.fetchMultiChainBalancesV4)({accountAddresses:e},l(this,n,"f"));return t}return await(0,f.reduceInBatchesSerially)({values:e,batchSize:50,eachBatch:async(e,t)=>{const{balances:s}=await(0,p.fetchMultiChainBalancesV4)({accountAddresses:t},l(this,n,"f"));return[...e||[],...s]},initialResult:[]})}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/multi-chain-accounts-service/api-balance-fetcher.cjs"}],[1159,{"./multi-chain-accounts.cjs":1160},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchSupportedNetworks=s.fetchMultiChainBalances=void 0;var a=e("./multi-chain-accounts.cjs");Object.defineProperty(s,"fetchMultiChainBalances",{enumerable:!0,get:function(){return a.fetchMultiChainBalances}}),Object.defineProperty(s,"fetchSupportedNetworks",{enumerable:!0,get:function(){return a.fetchSupportedNetworks}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/multi-chain-accounts-service/index.cjs"}],[1160,{"@metamask/controller-utils":1301},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchMultiChainBalancesV4=s.fetchMultiChainBalances=s.fetchSupportedNetworks=s.MULTICHAIN_ACCOUNTS_DOMAIN=void 0;const a=e("@metamask/controller-utils");s.MULTICHAIN_ACCOUNTS_DOMAIN="https://accounts.api.cx.metamask.io";s.fetchSupportedNetworks=async function(){const e=new URL(`${s.MULTICHAIN_ACCOUNTS_DOMAIN}/v1/supportedNetworks`);return(await(0,a.handleFetch)(e)).fullSupport},s.fetchMultiChainBalances=async function(e,t,n){const r=((e,t)=>{const a=new URL(`${s.MULTICHAIN_ACCOUNTS_DOMAIN}/v2/accounts/${e}/balances`);return t?.networks!==undefined&&a.searchParams.append("networks",t.networks),a})(e,{networks:t?.networks?.join()});return await(0,a.handleFetch)(r,{headers:{"x-metamask-clientproduct":`metamask-${n}`}})},s.fetchMultiChainBalancesV4=async function(e,t){const n=(e=>{const t=new URL(`${s.MULTICHAIN_ACCOUNTS_DOMAIN}/v4/multiaccount/balances`);return e?.networks!==undefined&&t.searchParams.append("networks",e.networks),e?.accountAddresses!==undefined&&t.searchParams.append("accountAddresses",e.accountAddresses),t})({accountAddresses:e?.accountAddresses?.join(),networks:e?.networks?.join()});return await(0,a.handleFetch)(n,{headers:{"x-metamask-clientproduct":`metamask-${t}`}})}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/multi-chain-accounts-service/multi-chain-accounts.cjs"}],[1161,{"./AssetsContractController.cjs":1124,"./assetsUtil.cjs":1152,"@ethersproject/contracts":654,"bn.js":3699},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.getTokenBalancesForMultipleAddresses=s.getStakedBalancesForAddresses=s.aggregate3=s.multicallOrFallback=void 0;const n=e("@ethersproject/contracts"),r=a(e("bn.js")),i=e("./AssetsContractController.cjs"),o=e("./assetsUtil.cjs"),c={"0x1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3":"0xcA11bde05977b3631167028862bE2a173976CA11","0xaa36a7":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4268":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5e9":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1b6e6":"0xcA11bde05977b3631167028862bE2a173976CA11","0x18fc4a":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa":"0xcA11bde05977b3631167028862bE2a173976CA11","0x45":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1a4":"0xcA11bde05977b3631167028862bE2a173976CA11","0xaa37dc":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa4b1":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa4ba":"0xcA11bde05977b3631167028862bE2a173976CA11","0x66eed":"0xcA11bde05977b3631167028862bE2a173976CA11","0x66eee":"0xcA11bde05977b3631167028862bE2a173976CA11","0x66eeb":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15f2249":"0xcA11bde05977b3631167028862bE2a173976CA11","0x89":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13881":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13882":"0xcA11bde05977b3631167028862bE2a173976CA11","0x44d":"0xca11bde05977b3631167028862be2a173976ca11","0x5a2":"0xca11bde05977b3631167028862be2a173976ca11","0x98a":"0xca11bde05977b3631167028862be2a173976ca11","0x64":"0xcA11bde05977b3631167028862bE2a173976CA11","0x27d8":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa86a":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa869":"0xcA11bde05977b3631167028862bE2a173976CA11","0xfa2":"0xcA11bde05977b3631167028862bE2a173976CA11","0xfa":"0xcA11bde05977b3631167028862bE2a173976CA11","0xfaf0":"0xca11bde05977b3631167028862be2a173976ca11","0x38":"0xcA11bde05977b3631167028862bE2a173976CA11","0x61":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15eb":"0xcA11bde05977b3631167028862bE2a173976CA11","0xcc":"0xcA11bde05977b3631167028862bE2a173976CA11","0x504":"0xcA11bde05977b3631167028862bE2a173976CA11","0x505":"0xcA11bde05977b3631167028862bE2a173976CA11","0x507":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2a15c308d":"0xca11bde05977b3631167028862be2a173976ca11","0x2a15c3083":"0xca11bde05977b3631167028862be2a173976ca11","0x63564c40":"0xcA11bde05977b3631167028862bE2a173976CA11","0x19":"0xcA11bde05977b3631167028862bE2a173976CA11","0x152":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5535072":"0xcA11bde05977b3631167028862bE2a173976CA11","0x6c1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x7a":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13":"0xcA11bde05977b3631167028862bE2a173976CA11","0x10":"0xcA11bde05977b3631167028862bE2a173976CA11","0x72":"0xcA11bde05977b3631167028862bE2a173976CA11","0x120":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4e454152":"0xcA11bde05977b3631167028862bE2a173976CA11","0x250":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5c2359":"0xcA11bde05977b3631167028862bE2a173976CA11","0xec0":"0xcA11bde05977b3631167028862bE2a173976CA11","0x42":"0xcA11bde05977b3631167028862bE2a173976CA11","0x80":"0xcA11bde05977b3631167028862bE2a173976CA11","0x440":"0xcA11bde05977b3631167028862bE2a173976CA11","0x257":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe9fe":"0xcA11bde05977b3631167028862bE2a173976CA11","0xd3a0":"0xcA11bde05977b3631167028862bE2a173976CA11","0x84444":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1e":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2329":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2328":"0xcA11bde05977b3631167028862bE2a173976CA11","0x6c":"0xcA11bde05977b3631167028862bE2a173976CA11","0x12":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa516":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5afe":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa4ec":"0xcA11bde05977b3631167028862bE2a173976CA11","0xaef3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x116ea":"0xcA11bde05977b3631167028862bE2a173976CA11","0x116e9":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2019":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3e9":"0xca11bde05977b3631167028862be2a173976ca11","0x7d1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x141":"0xcA11bde05977b3631167028862bE2a173976CA11","0x6a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x28":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4d2":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1e14":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1e15":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1251":"0xcA11bde05977b3631167028862bE2a173976CA11","0x7f08":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8ae":"0xcA11bde05977b3631167028862bE2a173976CA11","0x138b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1389":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1388":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1f92":"0xcA11bde05977b3631167028862bE2a173976CA11","0x14a33":"0xca11bde05977b3631167028862be2a173976ca11","0x14a34":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2105":"0xca11bde05977b3631167028862be2a173976ca11","0x936":"0xcA11bde05977b3631167028862bE2a173976CA11","0xff":"0xcA11bde05977b3631167028862bE2a173976CA11","0x46a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x46b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x14f":"0xcA11bde05977b3631167028862bE2a173976CA11","0xd2af":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe9ac0ce":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe705":"0xca11bde05977b3631167028862be2a173976ca11","0xe704":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe708":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2b6f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x39":"0xcA11bde05977b3631167028862bE2a173976CA11","0x23a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1644":"0xcA11bde05977b3631167028862bE2a173976CA11","0xdea8":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3af":"0xcA11bde05977b3631167028862bE2a173976CA11","0x171":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3e7":"0xcA11bde05977b3631167028862bE2a173976CA11","0x76adf1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3b9ac9ff":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2c":"0xca11bde05977b3631167028862be2a173976ca11","0x2e":"0xca11bde05977b3631167028862be2a173976ca11","0x15b3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x82751":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8274f":"0xca11bde05977b3631167028862be2a173976ca11","0x82750":"0xcA11bde05977b3631167028862bE2a173976CA11","0x96f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3cc5":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4571":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe99":"0xcA11bde05977b3631167028862bE2a173976CA11","0x7d0":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1297":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1d5e":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3a14269b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x561bf78b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x235ddd0":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3cd156dc":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5d456c62":"0xcA11bde05977b3631167028862bE2a173976CA11","0x79f99296":"0xcA11bde05977b3631167028862bE2a173976CA11","0x585eb4b1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x507aaa2a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1fc3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x32d":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8a73":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8a72":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8a71":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe9ac0d6":"0xca11bde05977b3631167028862be2a173976ca11","0x1069":"0xcA11bde05977b3631167028862bE2a173976CA11","0x7e5":"0xcA11bde05977b3631167028862bE2a173976CA11","0x53":"0xca11bde05977b3631167028862be2a173976ca11","0x52":"0xca11bde05977b3631167028862be2a173976ca11","0xe298":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1a8":"0xcA11bde05977b3631167028862bE2a173976CA11","0x94":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2c6":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2803":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2802":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa9":"0xcA11bde05977b3631167028862bE2a173976CA11","0x28c5f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x28c60":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4cb2f":"0xdbfa261cd7d17bb40479a0493ad6c0fee435859e","0x7f93":"0xcA11bde05977b3631167028862bE2a173976CA11","0xb660":"0xcA11bde05977b3631167028862bE2a173976CA11","0xb02113d3f":"0xcA11bde05977b3631167028862bE2a173976CA11","0xdad":"0xcA11bde05977b3631167028862bE2a173976CA11","0xdae":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15b38":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15b32":"0xcA11bde05977b3631167028862bE2a173976CA11","0x45c":"0xcA11bde05977b3631167028862bE2a173976CA11","0x45b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3d":"0xcA11bde05977b3631167028862bE2a173976CA11","0x41a6ace":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa729":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1f47b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1b59":"0xca11bde05977b3631167028862be2a173976ca11","0x1b58":"0xcA11bde05977b3631167028862bE2a173976CA11","0xc3":"0xca11bde05977b3631167028862be2a173976ca11","0x16fd8":"0xcA11bde05977b3631167028862bE2a173976CA11","0xc7":"0xca11bde05977b3631167028862be2a173976ca11","0x405":"0xca11bde05977b3631167028862be2a173976ca11","0x334":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1ce":"0xca11bde05977b3631167028862be2a173976ca11","0x1cf":"0xca11bde05977b3631167028862be2a173976ca11","0xa70e":"0xcA11bde05977b3631167028862bE2a173976CA11","0x868b":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa0c71fd":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13e31":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa1337":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1f2b":"0xcA11bde05977b3631167028862bE2a173976CA11","0xf63":"0xcA11bde05977b3631167028862bE2a173976CA11","0x144":"0xF9cda624FBC7e059355ce98a31693d299FACd963","0x118":"0xF9cda624FBC7e059355ce98a31693d299FACd963","0x12c":"0xF9cda624FBC7e059355ce98a31693d299FACd963","0x18995f":"0xF9cda624FBC7e059355ce98a31693d299FACd963","0x2b74":"0xF9cda624FBC7e059355ce98a31693d299FACd963","0xfc":"0xcA11bde05977b3631167028862bE2a173976CA11","0x9da":"0xcA11bde05977b3631167028862bE2a173976CA11","0x137":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13ed":"0xcA11bde05977b3631167028862bE2a173976CA11","0x24b1":"0xcA11bde05977b3631167028862bE2a173976CA11","0xba9302":"0xcA11bde05977b3631167028862bE2a173976CA11","0x7c8":"0xcA11bde05977b3631167028862bE2a173976CA11","0x138d5":"0xcA11bde05977b3631167028862bE2a173976CA11","0x6d":"0xcA11bde05977b3631167028862bE2a173976CA11","0x343b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x34a1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3109":"0xcA11bde05977b3631167028862bE2a173976CA11","0x91b":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa96":"0xcA11bde05977b3631167028862bE2a173976CA11","0x22c3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2be3":"0xcA11bde05977b3631167028862bE2a173976CA11","0xbf03":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1b254":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa7b14":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2276":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1b9e":"0xcA11bde05977b3631167028862bE2a173976CA11","0x6a63bb8":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15af3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15af1":"0xcA11bde05977b3631167028862bE2a173976CA11","0xae3f3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x531":"0xcA11bde05977b3631167028862bE2a173976CA11","0x28c61":"0xcA11bde05977b3631167028862bE2a173976CA11","0x28c58":"0xca11bde05977b3631167028862be2a173976ca11","0x1d88":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5b9b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4c7e1":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa53b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1a2b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x406":"0xca11bde05977b3631167028862be2a173976ca11","0x2cef":"0xcA11bde05977b3631167028862bE2a173976CA11","0x18b2":"0xca11bde05977b3631167028862be2a173976ca11","0x182a9":"0xcA11bde05977b3631167028862bE2a173976CA11","0xc4":"0xcA11bde05977b3631167028862bE2a173976CA11","0xfdd":"0xcA11bde05977b3631167028862bE2a173976CA11","0xfde":"0xcA11bde05977b3631167028862bE2a173976CA11","0x99c0a0f":"0xca11bde05977b3631167028862be2a173976ca11","0x22cf":"0xcA11bde05977b3631167028862bE2a173976CA11","0x310c5":"0xca11bde05977b3631167028862be2a173976ca11","0x46f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x659":"0xca11bde05977b3631167028862be2a173976ca11","0x139c968f9":"0xcA11bde05977b3631167028862bE2a173976CA11","0xed88":"0xcA11bde05977b3631167028862bE2a173976CA11","0xd036":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1f3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x31bf8c3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1cbc67bfdc":"0xcA11bde05977b3631167028862bE2a173976CA11","0x98967f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4f588":"0xcA11bde05977b3631167028862bE2a173976CA11","0x16db":"0xca11bde05977b3631167028862be2a173976ca11","0x3a":"0xca11bde05977b3631167028862be2a173976ca11","0x59":"0xca11bde05977b3631167028862be2a173976ca11","0x1e0":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2eb":"0xcA11bde05977b3631167028862bE2a173976CA11","0x221":"0xcA11bde05977b3631167028862bE2a173976CA11"},l=[{name:"tryAggregate",type:"function",stateMutability:"payable",inputs:[{name:"requireSuccess",type:"bool"},{name:"calls",type:"tuple[]",components:[{name:"target",type:"address"},{name:"callData",type:"bytes"}]}],outputs:[{name:"returnData",type:"tuple[]",components:[{name:"success",type:"bool"},{name:"returnData",type:"bytes"}]}]}],u=[{name:"aggregate3",type:"function",stateMutability:"payable",inputs:[{name:"calls",type:"tuple[]",components:[{name:"target",type:"address"},{name:"allowFailure",type:"bool"},{name:"callData",type:"bytes"}]}],outputs:[{name:"returnData",type:"tuple[]",components:[{name:"success",type:"bool"},{name:"returnData",type:"bytes"}]}]}],d="0x0000000000000000000000000000000000000000",m="balanceOf(address)",h="getEthBalance",p="getShares",g="convertToAssets",f=[{name:"balanceOf",type:"function",inputs:[{name:"account",type:"address"}],outputs:[{name:"",type:"uint256"}],stateMutability:"view"}],y=[{name:"getEthBalance",type:"function",inputs:[{name:"addr",type:"address"}],outputs:[{name:"balance",type:"uint256"}],stateMutability:"view"}],w=[{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"shares",type:"uint256"}],name:"convertToAssets",outputs:[{internalType:"uint256",name:"assets",type:"uint256"}],stateMutability:"view",type:"function"}],b=async(e,t)=>await(0,o.reduceInBatchesSerially)({values:e,batchSize:t,initialResult:[],eachBatch:async(e,t)=>[...e,...(await Promise.allSettled(t.map(e=>e.contract[e.functionSignature](...e.arguments)))).map(e=>({success:"fulfilled"===e.status,value:"fulfilled"===e.status?e.value:undefined}))]});s.multicallOrFallback=async(e,t,s,a=300,r=20)=>{if(0===e.length)return[];const i=c[t];if(i)try{return await(async(e,t,s,a)=>{const r=new n.Contract(t,l,s);return await(0,o.reduceInBatchesSerially)({values:e,batchSize:a,initialResult:[],eachBatch:async(e,t)=>{const s=t.map(e=>({target:e.contract.address,callData:e.contract.interface.encodeFunctionData(e.contract.interface.functions[e.functionSignature],e.arguments)}));return[...e,...(await r.callStatic.tryAggregate(!1,s)).map((e,s)=>({success:e.success,value:e.success?t[s].contract.interface.decodeFunctionResult(t[s].functionSignature,e.returnData)[0]:undefined}))]}})})(e,i,s,a)}catch(e){if(!e||"object"!=typeof e||!("code"in e)||"CALL_EXCEPTION"!==e.code)throw e}return await b(e,r)};s.aggregate3=async(e,t,s)=>{if(0===e.length)return[];const a=c[t],r=new n.Contract(a,u,s);return await r.callStatic.aggregate3(e)};const k=async(e,t,s,a,i)=>{const c={};if(e.length>0){const a=[],r=[];e.forEach(e=>{t.forEach(t=>{const i=new n.Contract(e,f,s);a.push({contract:i,functionSignature:m,arguments:[t]}),r.push({tokenAddress:e,userAddress:t})})});(await b(a,i)).forEach((e,t)=>{if(e.success){const{tokenAddress:s,userAddress:a}=r[t];c[s]||(c[s]={}),c[s][a]=e.value}})}if(a){const e=await(async(e,t,s=20)=>{const a={};return await(0,o.reduceInBatchesSerially)({values:e,batchSize:s,initialResult:undefined,eachBatch:async(e,s)=>{(await Promise.allSettled(s.map(async e=>{const s=await t.getBalance(e);return{success:!0,balance:new r.default(s.toString()),userAddress:e}}))).forEach(e=>{"fulfilled"===e.status&&e.value.success&&null!==e.value.balance&&(a[e.value.userAddress]=e.value.balance)})}}),a})(t,s,i);Object.keys(e).length>0&&(c[d]=e)}return c},S=async(e,t,s,a)=>{const r={},o=i.STAKING_CONTRACT_ADDRESS_BY_CHAINID[t];if(!o)return r;const c=[],l=[];e.forEach(e=>{const t=new n.Contract(o,w,s);c.push({contract:t,functionSignature:p,arguments:[e]}),l.push({userAddress:e})});return(await b(c,a)).forEach((e,t)=>{if(e.success){const{userAddress:s}=l[t];r[s]=e.value}}),r};s.getStakedBalancesForAddresses=async(e,t,a)=>{const o=i.STAKING_CONTRACT_ADDRESS_BY_CHAINID[t];if(!o)return{};const c=new n.Contract(o,w,a);try{const n=e.map(e=>({target:o,allowFailure:!0,callData:c.interface.encodeFunctionData(p,[e])})),i=await(0,s.aggregate3)(n,t,a),l=[];if(i.forEach((t,s)=>{if(t.success){const a=c.interface.decodeFunctionResult(p,t.returnData)[0],n=new r.default(a.toString());n.gt(new r.default(0))&&l.push({address:e[s],shares:n})}}),0===l.length)return{};const u=l.map(({shares:e})=>({target:o,allowFailure:!0,callData:c.interface.encodeFunctionData(g,[e.toString()])})),d=await(0,s.aggregate3)(u,t,a),m={};return d.forEach((e,t)=>{if(e.success){const s=c.interface.decodeFunctionResult(g,e.returnData)[0],a=new r.default(s.toString()),{address:n}=l[t];m[n]=a}}),m}catch(e){return console.error("Error fetching staked balances:",e),{}}};s.getTokenBalancesForMultipleAddresses=async(e,t,a,i,l)=>{if(0===e.length&&!i&&!l)return{tokenBalances:{}};const u=Array.from(new Set(e.flatMap(e=>e.tokenAddresses))).filter(e=>e!==d),p=Array.from(new Set(e.map(e=>e.accountAddress)));if(!c[t]){const e={tokenBalances:await k(u,p,a,i,20)};if(l){const s=await S(p,t,a,20);Object.keys(s).length>0&&(e.stakedBalances=s)}return e}try{const u=[],g=[],w=new n.Contract(d,f,a);if(e.forEach(e=>{e.tokenAddresses.filter(e=>e!==d).forEach(t=>{u.push({target:t,allowFailure:!0,callData:w.interface.encodeFunctionData(m,[e.accountAddress])}),g.push({tokenAddress:t,userAddress:e.accountAddress,callType:"erc20"})})}),i){const e=c[t],s=new n.Contract(e,y,a);p.forEach(t=>{u.push({target:e,allowFailure:!0,callData:s.interface.encodeFunctionData(h,[t])}),g.push({tokenAddress:d,userAddress:t,callType:"native"})})}const b=300,k=[];await(0,o.reduceInBatchesSerially)({values:u,batchSize:b,initialResult:undefined,eachBatch:async(e,n)=>{const r=await(0,s.aggregate3)(n,t,a);k.push(...r)}});let S={};l&&(S=await(0,s.getStakedBalancesForAddresses)(p,t,a));const A=((e,t,s,a,i)=>{const o={},l={},u=new n.Contract(d,f,a),p=c[s],g=new n.Contract(p,y,a);e.forEach((e,s)=>{if(e.success){const{tokenAddress:a,userAddress:n,callType:i}=t[s];if("native"===i){const t=g.interface.decodeFunctionResult(h,e.returnData)[0];o[a]||(o[a]={}),o[a][n]=new r.default(t.toString())}else if("staking"===i)console.warn("Staking callType found in main processing - this should not happen");else{const t=u.interface.decodeFunctionResult(m,e.returnData)[0];o[a]||(o[a]={}),o[a][n]=new r.default(t.toString())}}});const w={tokenBalances:o};return i&&Object.keys(l).length>0&&(w.stakedBalances=l),w})(k,g,t,a,!1);return l&&Object.keys(S).length>0&&(A.stakedBalances=S),A}catch(e){if(!e||"object"!=typeof e||!("code"in e)||"CALL_EXCEPTION"!==e.code)throw e;const s={tokenBalances:await k(u,p,a,i,20)};if(l){const e=await S(p,t,a,20);Object.keys(e).length>0&&(s.stakedBalances=e)}return s}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/multicall.cjs"}],[1162,{"../AssetsContractController.cjs":1124,"../multicall.cjs":1161,"@metamask/controller-utils":1301,"bn.js":3699},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},u=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.RpcBalanceFetcher=void 0;const m=e("@metamask/controller-utils"),h=d(e("bn.js")),p=e("../AssetsContractController.cjs"),g=e("../multicall.cjs"),f="0x0000000000000000000000000000000000000000",y=e=>(0,m.toChecksumHexAddress)(e);s.RpcBalanceFetcher=class{constructor(e,t,s){a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),l(this,n,e,"f"),l(this,r,t,"f"),l(this,i,s,"f")}supports(){return!0}async fetch({chainIds:e,queryAllAccounts:t,selectedAccount:s,allAccounts:r}){const l=e.map(async e=>{const l=u(this,i,"f").call(this),d=function(e,t,s,a,n,r){const i=[],o=([e,a])=>{(t||y(e)===y(s))&&a.forEach(t=>i.push({accountAddress:e,tokenAddress:y(t.address)}))};Object.entries(n[e]??{}).forEach(o),Object.entries(r[e]??{}).forEach(o),t?a.forEach(e=>{i.push({accountAddress:e.address,tokenAddress:f})}):i.push({accountAddress:s,tokenAddress:f});if(!i.length)return[];const c=new Map;return i.forEach(({accountAddress:e,tokenAddress:t})=>{c.has(e)||c.set(e,[]);const s=c.get(e);s&&s.push(t)}),Array.from(c.entries()).map(([e,t])=>({accountAddress:e,tokenAddresses:t}))}(e,t,s,r,l.allTokens,l.allDetectedTokens);if(!d.length)return[];const p=u(this,n,"f").call(this,e);await u(this,a,"m",c).call(this,e);const w=await(0,m.safelyExecuteWithTimeout)(async()=>await(0,g.getTokenBalancesForMultipleAddresses)(d,e,p,!0,!0),!0,3e4);if(!w)return[];const{tokenBalances:b,stakedBalances:k}=w,S=[],A=new Set;d.forEach(e=>{A.add(e.accountAddress)}),A.forEach(t=>{const s=b[f]?.[t]||null;S.push({success:!0,value:s||new h.default("0"),account:t,token:f,chainId:e})}),Object.entries(b).forEach(([t,s])=>{t!==f&&Object.entries(s).forEach(([s,a])=>{S.push({success:null!==a,value:a,account:s,token:y(t),chainId:e})})});const T=u(this,a,"m",o).call(this,e);if(T){const t=new Set;d.forEach(e=>{t.add(e.accountAddress)});const s=y(T);t.forEach(t=>{const a=k?.[t]||null;S.push({success:!0,value:a||new h.default("0"),account:t,token:s,chainId:e})})}return S}),d=await Promise.allSettled(l),p=[];return d.forEach(e=>{"fulfilled"===e.status?p.push(...e.value):console.warn("Chain processing failed:",e.reason)}),p}},n=new WeakMap,r=new WeakMap,i=new WeakMap,a=new WeakSet,o=function(e){return p.STAKING_CONTRACT_ADDRESS_BY_CHAINID[e]},c=async function(e){const t=u(this,r,"f").call(this,e);await(t.blockTracker?.checkForLatestBlock?.())}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/rpc-service/rpc-balance-fetcher.cjs"}],[1163,{"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.parseBalanceWithDecimals=s.stringifyBalanceWithDecimals=void 0;const a=e("@metamask/utils");s.stringifyBalanceWithDecimals=function(e,t,s=5){if(0n===e||0===t)return e.toString();let a=e.toString(),n=a.length,r=n-t,i="";if(r<=0){for(;i.length<=-1*r;)i+="0",n+=1;a=i+a,r=1}const o=a.slice(0,n-t);if(0===s)return o;const c=a.slice(r,r+s);if(/0+$/u.test(c)){let e=a.slice(r).replace(/0+$/u,"");return e.length>0&&(e=`.${e}`),`${o}${e}`}return`${o}.${c}`},s.parseBalanceWithDecimals=function(e,t){if(!/^\d+(\.\d+)?$/u.test(e))return undefined;const[s,n=""]=e.split(".");return 0===t?(0,a.bigIntToHex)(BigInt(s)):n.length>=t?(0,a.bigIntToHex)(BigInt(`${s}${n.slice(0,t)}`)):(0,a.bigIntToHex)(BigInt(`${s}${n}${"0".repeat(t-n.length)}`))}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/selectors/stringify-balance.cjs"}],[1164,{"../token-prices-service/codefi-v2.cjs":1165,"./stringify-balance.cjs":1163,"@metamask/controller-utils":1301,"@metamask/utils":2799,reselect:4988},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.selectAssetsBySelectedAccountGroup=void 0;const a=e("@metamask/controller-utils"),n=e("@metamask/utils"),r=e("reselect"),i=e("./stringify-balance.cjs"),o=e("../token-prices-service/codefi-v2.cjs"),c=["bip122:000000000019d6689c085ae165831e93/slip44:0","solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp/slip44:501"],l=r.createSelector.withTypes(),u=l([e=>e.accountTree,e=>e.internalAccounts],(e,t)=>{const s={};for(const{groups:a}of Object.values(e.wallets))for(const{id:e,accounts:n}of Object.values(a))for(const a of n){const n=t.accounts[a];s[n.type.startsWith("eip155")?n.address:a]={accountGroupId:e,type:n.type,accountId:a}}return s}),d=l([u,e=>e.accountsByChainId,e=>e.marketData,e=>e.currencyRates,e=>e.currentCurrency,e=>e.networkConfigurationsByChainId],(e,t,s,a,r,c)=>{var l;const u={};for(const[d,m]of Object.entries(t))for(const[t,h]of Object.entries(m)){const m=e[t.toLowerCase()];if(!m)continue;const{accountGroupId:p,type:g,accountId:y}=m;u[p]??(u[p]={}),(l=u[p])[d]??(l[d]=[]);const w=u[p][d],b=h.balance||"0x0",k=c[d]?.nativeCurrency||"NATIVE",S={address:(0,o.getNativeTokenAddress)(d),decimals:18,name:"ETH"===k?"Ethereum":k,symbol:k,image:""},A=f(b,S.decimals,s,a,d,S.address);w.push({type:g,assetId:S.address,isNative:!0,address:S.address,image:S.image,name:S.name,symbol:S.symbol,accountId:y,decimals:S.decimals,rawBalance:b,balance:(0,i.stringifyBalanceWithDecimals)((0,n.hexToBigInt)(b),S.decimals),fiat:A?{balance:A.balance,currency:r,conversionRate:A.conversionRate}:undefined,chainId:d})}return u}),m=l([u,e=>e.allTokens,e=>e.allIgnoredTokens,e=>e.tokenBalances,e=>e.marketData,e=>e.currencyRates,e=>e.currentCurrency],(e,t,s,a,r,o,c)=>{var l;const u={};for(const[d,m]of Object.entries(t))for(const[t,h]of Object.entries(m))for(const m of h){const h=m.address,p=e[t];if(!p)continue;const{accountGroupId:g,type:y,accountId:w}=p;if(s[d]?.[t]?.includes(h))continue;const b=a[t]?.[d]?.[h];if(!b)continue;u[g]??(u[g]={}),(l=u[g])[d]??(l[d]=[]);const k=u[g][d],S=f(b,m.decimals,r,o,d,h);k.push({type:y,assetId:h,isNative:!1,address:h,image:m.image??"",name:m.name??m.symbol,symbol:m.symbol,accountId:w,decimals:m.decimals,rawBalance:b,balance:(0,i.stringifyBalanceWithDecimals)((0,n.hexToBigInt)(b),m.decimals),fiat:S?{balance:S.balance,currency:c,conversionRate:S.conversionRate}:undefined,chainId:d})}return u}),h=l([u,e=>e.accountsAssets,e=>e.assetsMetadata,e=>e.balances,e=>e.conversionRates,e=>e.currentCurrency],(e,t,s,a,r,o)=>{var l;const u={};for(const[d,m]of Object.entries(t))for(const t of m){let m;try{m=(0,n.parseCaipAssetType)(t)}catch{continue}const{chainId:h}=m,p=`${m.assetNamespace}:${m.assetReference}`,g=e[d],f=s[t];if(!g||!f)continue;const{accountGroupId:w,type:b}=g;u[w]??(u[w]={}),(l=u[w])[h]??(l[h]=[]);const k=u[w][h],S=a[d]?.[t],A=f.units.find(e=>e.name===f.name&&e.symbol===f.symbol)?.decimals;if(!S||A===undefined)continue;const T=(0,i.parseBalanceWithDecimals)(S.amount,A);if(!T)continue;const v=y(S,r,t);k.push({type:b,assetId:t,isNative:c.includes(t),image:f.iconUrl,name:f.name??f.symbol??p,symbol:f.symbol??p,accountId:d,decimals:A,rawBalance:T,balance:S.amount,fiat:v?{balance:v.balance,currency:o,conversionRate:v.conversionRate}:undefined,chainId:h})}return u}),p=l([m,h,d],(e,t,s)=>{const a={};return g(a,e),g(a,t),g(a,s),a});function g(e,t){for(const[s,a]of Object.entries(t)){const t=e[s];if(t)for(const[e,s]of Object.entries(a))t[e]??(t[e]=[]),t[e].push(...s);else{e[s]={};for(const[t,n]of Object.entries(a))e[s][t]=[...n]}}}function f(e,t,s,n,r,i){const o=s[r]?.[i];if(!o)return undefined;const c=n[o.currency];if(!c?.conversionRate)return undefined;return{balance:(0,a.convertHexToDecimal)(e)/10**t*o.price*c.conversionRate,conversionRate:c.conversionRate}}function y(e,t,s){const a=t[s];return a?.rate?{balance:Number(e.amount)*Number(a.rate),conversionRate:Number(a.rate)}:undefined}s.selectAssetsBySelectedAccountGroup=l([p,e=>e.accountTree],(e,t)=>{const{selectedAccountGroup:s}=t;return s&&e[s]||{}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/selectors/token-selectors.cjs"}],[1165,{"@metamask/controller-utils":1301,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.CodefiTokenPricesServiceV2=s.SUPPORTED_CHAIN_IDS=s.getNativeTokenAddress=s.ZERO_ADDRESS=s.SUPPORTED_CURRENCIES=void 0;const i=e("@metamask/controller-utils"),o=e("@metamask/utils");s.SUPPORTED_CURRENCIES=["btc","eth","ltc","bch","bnb","eos","xrp","xlm","link","dot","yfi","usd","aed","ars","aud","bdt","bhd","bmd","brl","cad","chf","clp","cny","czk","dkk","eur","gbp","hkd","huf","idr","ils","inr","jpy","krw","kwd","lkr","mmk","mxn","myr","ngn","nok","nzd","php","pkr","pln","rub","sar","sek","sgd","thb","try","twd","uah","vef","vnd","zar","xdr","xag","xau","bits","sats"],s.ZERO_ADDRESS="0x0000000000000000000000000000000000000000";const c={"0x89":"0x0000000000000000000000000000000000001010"};s.getNativeTokenAddress=e=>c[e]??s.ZERO_ADDRESS,s.SUPPORTED_CHAIN_IDS=["0x1","0xa","0x19","0x38","0x39","0x42","0x46","0x52","0x58","0x64","0x6a","0x7a","0x80","0x89","0xfa","0x120","0x141","0x144","0x169","0x440","0x504","0x505","0x1388","0x2105","0x150","0x2710","0xa4b1","0xa4ec","0xa516","0xa86a","0x518af","0x4e454152","0x63564c40","0xe708","0x531","0x92","0x8f"];s.CodefiTokenPricesServiceV2=class{constructor({degradedThreshold:e=i.DEFAULT_DEGRADED_THRESHOLD,retries:t=i.DEFAULT_MAX_RETRIES,maximumConsecutiveFailures:s=i.DEFAULT_MAX_CONSECUTIVE_FAILURES,onBreak:o,onDegraded:c,circuitBreakDuration:l=i.DEFAULT_CIRCUIT_BREAK_DURATION}={}){a.set(this,void 0),n(this,a,(0,i.createServicePolicy)({maxRetries:t,maxConsecutiveFailures:s,circuitBreakDuration:l,degradedThreshold:e}),"f"),o&&r(this,a,"f").onBreak(o),c&&r(this,a,"f").onDegraded(c)}onBreak(...e){return r(this,a,"f").onBreak(...e)}onDegraded(...e){return r(this,a,"f").onDegraded(...e)}async fetchTokenPrices({chainId:e,tokenAddresses:t,currency:n}){const c=(0,o.hexToNumber)(e),l=new URL(`https://price.api.cx.metamask.io/v2/chains/${c}/spot-prices`);l.searchParams.append("tokenAddresses",[(0,s.getNativeTokenAddress)(e),...t].join(",")),l.searchParams.append("vsCurrency",n),l.searchParams.append("includeMarketData","true");const u=await r(this,a,"f").execute(()=>(0,i.handleFetch)(l,{headers:{"Cache-Control":"no-cache"}}));return[(0,s.getNativeTokenAddress)(e),...t].reduce((e,t)=>{const s=t.toLowerCase(),a=u[s];if(!a)return e;const r={tokenAddress:t,currency:n,...a};return{...e,[t]:r}},{})}validateChainIdSupported(e){const t=s.SUPPORTED_CHAIN_IDS;return"string"==typeof e&&t.includes(e)}validateCurrencySupported(e){const t=s.SUPPORTED_CURRENCIES;return"string"==typeof e&&t.includes(e.toLowerCase())}},a=new WeakMap}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/token-prices-service/codefi-v2.cjs"}],[1166,{"./codefi-v2.cjs":1165},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getNativeTokenAddress=s.SUPPORTED_CHAIN_IDS=s.CodefiTokenPricesServiceV2=void 0;var a=e("./codefi-v2.cjs");Object.defineProperty(s,"CodefiTokenPricesServiceV2",{enumerable:!0,get:function(){return a.CodefiTokenPricesServiceV2}}),Object.defineProperty(s,"SUPPORTED_CHAIN_IDS",{enumerable:!0,get:function(){return a.SUPPORTED_CHAIN_IDS}}),Object.defineProperty(s,"getNativeTokenAddress",{enumerable:!0,get:function(){return a.getNativeTokenAddress}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/token-prices-service/index.cjs"}],[1167,{"./assetsUtil.cjs":1152,"@metamask/controller-utils":1301},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchTokenMetadata=s.fetchTokenListByChainId=s.TOKEN_METADATA_NO_SUPPORT_ERROR=s.TOKEN_END_POINT_API=void 0;const a=e("@metamask/controller-utils"),n=e("./assetsUtil.cjs");s.TOKEN_END_POINT_API="https://token.api.cx.metamask.io",s.TOKEN_METADATA_NO_SUPPORT_ERROR="TokenService Error: Network does not support fetchTokenMetadata";async function r(e,t,s){const n={referrer:e,referrerPolicy:"no-referrer-when-downgrade",method:"GET",mode:"cors",signal:t,cache:"default"};n.headers=new window.Headers,n.headers.set("Content-Type","application/json");try{return await(0,a.timeoutFetch)(e,n,s)}catch(e){e instanceof Error&&"AbortError"===e.name&&console.log("Request is aborted")}return undefined}async function i(e){const t=await e.json();if(t?.error)throw new Error(`TokenService Error: ${t.error}`);return t}s.fetchTokenListByChainId=async function(e,t,{timeout:n=1e4}={}){const o=function(e){const t=e===a.ChainId["linea-mainnet"]?1:3;return`${s.TOKEN_END_POINT_API}/tokens/${(0,a.convertHexToDecimal)(e)}?occurrenceFloor=${t}&includeNativeAssets=false&includeTokenFees=false&includeAssetType=false&includeERC20Permit=false&includeStorage=false`}(e),c=await r(o,t,n);if(c){const t=await i(c);return Array.isArray(t)&&e===a.ChainId["linea-mainnet"]?t.filter(e=>e.aggregators.includes("lineaTeam")||e.aggregators.length>=3):t}return undefined},s.fetchTokenMetadata=async function(e,t,o,{timeout:c=1e4}={}){if(!(0,n.isTokenListSupportedForNetwork)(e))throw new Error(s.TOKEN_METADATA_NO_SUPPORT_ERROR);const l=function(e,t){return`${s.TOKEN_END_POINT_API}/token/${(0,a.convertHexToDecimal)(e)}?address=${t}`}(e,t),u=await r(l,o,c);return u?i(u):undefined}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/token-service.cjs"}],[1168,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createFormatters=void 0;const a={minimumFractionDigits:2,maximumFractionDigits:2},n={minimumSignificantDigits:1,maximumSignificantDigits:1},r={minimumSignificantDigits:3,maximumSignificantDigits:3},i={};function o(e,t={}){const s=`${e}_${JSON.stringify(t)}`;let n=i[s];if(n)return n;try{n=new Intl.NumberFormat(e,t)}catch(t){if(!(t instanceof RangeError))throw t;n=new Intl.NumberFormat(e,a)}return i[s]=n,n}function c(e,t,s={}){if(!Number.isFinite(Number(t)))return"";return o(e.locale,s).format(t)}function l(e,t,s,a={}){if(!Number.isFinite(Number(t)))return"";return o(e.locale,{style:"currency",currency:s,...a}).format(t)}function u(e,t,s){return l(e,t,s,{notation:"compact",...a})}function d(e,t,s){const a=Number(t),n=Math.abs(a);if(!Number.isFinite(a))return"";if(0===a)return l(e,0,s);if(n<.01){return`<${l(e,.01,s)}`}return l(e,a,s)}function m(e,t,s,a={}){if(!Number.isFinite(Number(t)))return"";return`${o(e.locale,{style:"decimal",...a}).format(t)} ${s}`}function h(e,t,s){const a=Number(t),i=Math.abs(a);return Number.isFinite(a)?0===a?l(e,0,s):i<1e-8?`<${l(e,1e-8,s,n)}`:i<1?l(e,a,s,r):i<1e6?l(e,a,s):u(e,a,s):""}function p(e,t,s){const i=1e-5,o=Number(t),c=Math.abs(o);return Number.isFinite(o)?0===o?m(e,0,s):c<i?`<${m(e,i,s,n)}`:c<1?m(e,o,s,r):c<1e6?m(e,o,s):m(e,o,s,{notation:"compact",...a}):""}s.createFormatters=function({locale:e="en"}){return{formatNumber:c.bind(null,{locale:e}),formatCurrency:l.bind(null,{locale:e}),formatCurrencyCompact:u.bind(null,{locale:e}),formatCurrencyWithMinThreshold:d.bind(null,{locale:e}),formatCurrencyTokenPrice:h.bind(null,{locale:e}),formatToken:m.bind(null,{locale:e}),formatTokenQuantity:p.bind(null,{locale:e})}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/utils/formatters.cjs"}],[1169,{"./errors":1170,"./packer":1173,"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.decodeSingle=s.decode=s.encodePacked=s.encodeSingle=s.encode=void 0;const a=e("@metamask/utils"),n=e("./errors"),r=e("./packer");s.encode=(e,t,s,a)=>{try{return(0,r.pack)({types:e,values:t,packed:s,tight:a})}catch(e){if(e instanceof n.ParserError)throw new n.ParserError(`Unable to encode value: ${e.message}`,e);throw new n.ParserError(`An unexpected error occurred: ${(0,n.getErrorMessage)(e)}`,e)}};s.encodeSingle=(e,t)=>(0,s.encode)([e],[t]);s.encodePacked=(e,t,a)=>(0,s.encode)(e,t,!0,a);s.decode=(e,t)=>{const s=(0,a.createBytes)(t);try{return(0,r.unpack)(e,s)}catch(e){if(e instanceof n.ParserError)throw new n.ParserError(`Unable to decode value: ${e.message}`,e);throw new n.ParserError(`An unexpected error occurred: ${(0,n.getErrorMessage)(e)}`,e)}};s.decodeSingle=(e,t)=>{const r=(0,s.decode)([e],t);return(0,a.assert)(1===r.length,new n.ParserError("Decoded value array has unexpected length.")),r[0]}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/abi.js"}],[1170,{"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ParserError=s.getErrorStack=s.getErrorMessage=void 0;const a=e("@metamask/utils");s.getErrorMessage=e=>"string"==typeof e?e:e instanceof Error||(0,a.isObject)(e)&&(0,a.hasProperty)(e,"message")&&"string"==typeof e.message?e.message:"Unknown error.";s.getErrorStack=e=>e instanceof Error?e.stack:undefined;class n extends Error{constructor(e,t){super(e),this.name="ParserError";const a=(0,s.getErrorStack)(t);a&&(this.stack=a)}}s.ParserError=n}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/errors.js"}],[1171,{"./abi":1169,"./errors":1170,"./types":1186},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./abi"),s),n(e("./errors"),s),n(e("./types"),s)}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/index.js"}],[1172,{"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.iterate=void 0;const a=e("@metamask/utils");s.iterate=function*(e,t=32){for(let s=0;s<e.length;s+=t){const n=e=>{(0,a.assert)(e>=0,"Cannot skip a negative number of bytes."),(0,a.assert)(e%t===0,"Length must be a multiple of the size."),s+=e},r=e.subarray(s);yield{skip:n,value:r}}return{skip:()=>undefined,value:new Uint8Array}}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/iterator.js"}],[1173,{"./errors":1170,"./iterator":1172,"./parsers":1180,"./utils":1188,"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.unpack=s.pack=s.isDynamicParser=s.getParser=void 0;const a=e("@metamask/utils"),n=e("./errors"),r=e("./iterator"),i=e("./parsers"),o=e("./utils");s.getParser=e=>{const t={address:i.address,array:i.array,bool:i.bool,bytes:i.bytes,fixedBytes:i.fixedBytes,function:i.fn,number:i.number,string:i.string,tuple:i.tuple},s=t[e];if(s)return s;const a=Object.values(t).find(t=>t.isType(e));if(a)return a;throw new n.ParserError(`The type "${e}" is not supported.`)};s.isDynamicParser=(e,t)=>{const{isDynamic:s}=e;return"function"==typeof s?s(t):s};s.pack=({types:e,values:t,packed:r=!1,tight:i=!1,arrayPacked:c=!1,byteArray:l=new Uint8Array})=>{(0,a.assert)(e.length===t.length,new n.ParserError(`The number of types (${e.length}) does not match the number of values (${t.length}).`));const{staticBuffer:u,dynamicBuffer:d,pointers:m}=e.reduce(({staticBuffer:e,dynamicBuffer:n,pointers:o},l,u)=>{const d=(0,s.getParser)(l),m=t[u];if(r||c||!(0,s.isDynamicParser)(d,l))return{staticBuffer:d.encode({buffer:e,value:m,type:l,packed:r,tight:i}),dynamicBuffer:n,pointers:o};return{staticBuffer:(0,a.concatBytes)([e,new Uint8Array(32)]),dynamicBuffer:d.encode({buffer:n,value:m,type:l,packed:r,tight:i}),pointers:[...o,{position:e.length,pointer:n.length}]}},{staticBuffer:new Uint8Array,dynamicBuffer:new Uint8Array,pointers:[]});(0,a.assert)(!r&&!c||0===d.length,new n.ParserError("Invalid pack state."));const h=u.length,p=m.reduce((e,{pointer:t,position:s})=>{const n=(0,o.padStart)((0,a.numberToBytes)(h+t));return(0,o.set)(e,n,s)},u);return(0,a.concatBytes)([l,p,d])};s.unpack=(e,t)=>{const i=(0,r.iterate)(t);return e.map(e=>{const{value:{value:r,skip:o},done:c}=i.next();(0,a.assert)(!c,new n.ParserError(`The encoded value is invalid for the provided types. Reached end of buffer while attempting to parse "${e}".`));const l=(0,s.getParser)(e);if((0,s.isDynamicParser)(l,e)){const s=(0,a.bytesToNumber)(r.subarray(0,32)),n=t.subarray(s);return l.decode({type:e,value:n,skip:o})}return l.decode({type:e,value:r,skip:o})})}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/packer.js"}],[1174,{"../errors":1170,"../utils":1188,"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.address=s.getAddress=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../utils");s.getAddress=e=>{const t=(0,a.createBytes)(e);return(0,a.assert)(t.length<=20,new n.ParserError(`Invalid address value. Expected address to be 20 bytes long, but received ${t.length} bytes.`)),(0,r.padStart)(t,20)},s.address={isDynamic:!1,isType:e=>"address"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:n}){const i=(0,s.getAddress)(t);if(n)return(0,a.concatBytes)([e,i]);const o=(0,r.padStart)(i);return(0,a.concatBytes)([e,o])},decode:({value:e})=>(0,a.add0x)((0,a.bytesToHex)(e.slice(12,32)))}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/parsers/address.js"}],[1175,{"../errors":1170,"../packer":1173,"../utils":1188,"./fixed-bytes":1178,"./tuple":1184,"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.array=s.getTupleType=s.getArrayType=s.isArrayType=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../packer"),i=e("../utils"),o=e("./fixed-bytes"),c=e("./tuple"),l=/^(?<type>.*)\[(?<length>\d*?)\]$/u;s.isArrayType=e=>l.test(e);s.getArrayType=e=>{const t=e.match(l);return(0,a.assert)(t?.groups?.type,new n.ParserError(`Invalid array type. Expected an array type, but received "${e}".`)),[t.groups.type,t.groups.length?parseInt(t.groups.length,10):undefined]};s.getTupleType=(e,t)=>`(${new Array(t).fill(e).join(",")})`,s.array={isDynamic(e){const[t,a]=(0,s.getArrayType)(e);return a===undefined||(0,r.isDynamicParser)((0,r.getParser)(t),t)},isType:e=>(0,s.isArrayType)(e),getByteLength(e){(0,a.assert)((0,s.isArrayType)(e),new n.ParserError(`Expected an array type, but received "${e}".`));const[t,i]=(0,s.getArrayType)(e);return(0,r.isDynamicParser)(this,e)||i===undefined?32:c.tuple.getByteLength((0,s.getTupleType)(t,i))},encode({type:e,buffer:t,value:l,packed:u,tight:d}){const[m,h]=(0,s.getArrayType)(e);if((0,a.assert)(!u||!(0,s.isArrayType)(m),new n.ParserError("Cannot pack nested arrays.")),u&&(0,r.isDynamicParser)((0,r.getParser)(m),m))return(0,r.pack)({types:new Array(l.length).fill(m),values:l,byteArray:t,packed:u,arrayPacked:!0,tight:d});if(h)return(0,a.assert)(h===l.length,new n.ParserError(`Array length does not match type length. Expected a length of ${h}, but received ${l.length}.`)),c.tuple.encode({type:(0,s.getTupleType)(m,h),buffer:t,value:l,packed:o.fixedBytes.isType(m)&&d,tight:d});if(u)return(0,r.pack)({types:new Array(l.length).fill(m),values:l,byteArray:t,packed:o.fixedBytes.isType(m)&&d,arrayPacked:!0,tight:d});const p=(0,i.padStart)((0,a.numberToBytes)(l.length));return(0,r.pack)({types:new Array(l.length).fill(m),values:l,byteArray:(0,a.concatBytes)([t,p]),packed:u,tight:d})},decode({type:e,value:t,...i}){const[o,l]=(0,s.getArrayType)(e);if(l){const e=c.tuple.decode({type:(0,s.getTupleType)(o,l),value:t,...i});return(0,a.assert)(e.length===l,new n.ParserError(`Array length does not match type length. Expected a length of ${l}, but received ${e.length}.`)),e}const u=(0,a.bytesToNumber)(t.subarray(0,32));return(0,r.unpack)(new Array(u).fill(o),t.subarray(32))}}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/parsers/array.js"}],[1176,{"../errors":1170,"./number":1181,"@metamask/superstruct":2705,"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.bool=s.getBooleanValue=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils"),r=e("../errors"),i=e("./number"),o=(0,a.coerce)((0,a.boolean)(),(0,a.union)([(0,a.literal)("true"),(0,a.literal)("false")]),e=>"true"===e);s.getBooleanValue=e=>{try{return(0,a.create)(e,o)?BigInt(1):BigInt(0)}catch{throw new r.ParserError(`Invalid boolean value. Expected a boolean literal, or the string "true" or "false", but received "${e}".`)}},s.bool={isDynamic:!1,isType:e=>"bool"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:a,tight:r}){const o=(0,s.getBooleanValue)(t);return a?(0,n.concatBytes)([e,(0,n.bigIntToBytes)(o)]):i.number.encode({type:"uint256",buffer:e,value:o,packed:a,tight:r})},decode:e=>i.number.decode({...e,type:"uint256"})===BigInt(1)}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/parsers/bool.js"}],[1177,{"../utils":1188,"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.bytes=void 0;const a=e("@metamask/utils"),n=e("../utils");s.bytes={isDynamic:!0,isType:e=>"bytes"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:s}){const r=(0,a.createBytes)(t);if(s)return(0,a.concatBytes)([e,r]);const i=32*Math.ceil(r.byteLength/32);return(0,a.concatBytes)([e,(0,n.padStart)((0,a.numberToBytes)(r.byteLength)),(0,n.padEnd)(r,i)])},decode({value:e}){const t=e.subarray(0,32),s=(0,a.bytesToNumber)(t);return e.slice(32,32+s)}}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/parsers/bytes.js"}],[1178,{"../errors":1170,"../utils":1188,"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fixedBytes=s.getByteLength=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../utils"),i=/^bytes([0-9]{1,2})$/u;s.getByteLength=e=>{const t=e.match(i)?.[1];(0,a.assert)(t,`Invalid byte length. Expected a number between 1 and 32, but received "${e}".`);const s=Number(t);return(0,a.assert)(s>0&&s<=32,new n.ParserError(`Invalid byte length. Expected a number between 1 and 32, but received "${e}".`)),s},s.fixedBytes={isDynamic:!1,isType:e=>i.test(e),getByteLength:()=>32,encode({type:e,buffer:t,value:i,packed:o}){const c=(0,s.getByteLength)(e),l=(0,a.createBytes)(i);return(0,a.assert)(l.length<=c,new n.ParserError(`Expected a value of length ${c}, but received a value of length ${l.length}.`)),o?(0,a.concatBytes)([t,(0,r.padEnd)(l,c)]):(0,a.concatBytes)([t,(0,r.padEnd)(l)])},decode({type:e,value:t}){const a=(0,s.getByteLength)(e);return t.slice(0,a)}}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js"}],[1179,{"../errors":1170,"./fixed-bytes":1178,"@metamask/superstruct":2705,"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fn=s.getFunction=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils"),r=e("../errors"),i=e("./fixed-bytes"),o=(0,a.coerce)((0,a.object)({address:n.StrictHexStruct,selector:n.StrictHexStruct}),(0,a.union)([n.StrictHexStruct,(0,a.instance)(Uint8Array)]),e=>{const t=(0,n.createBytes)(e);return(0,n.assert)(24===t.length,new r.ParserError(`Invalid Solidity function. Expected function to be 24 bytes long, but received ${t.length} bytes.`)),{address:(0,n.bytesToHex)(t.subarray(0,20)),selector:(0,n.bytesToHex)(t.subarray(20,24))}});s.getFunction=e=>{const t=(0,a.create)(e,o);return(0,n.concatBytes)([(0,n.hexToBytes)(t.address),(0,n.hexToBytes)(t.selector)])},s.fn={isDynamic:!1,isType:e=>"function"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:a,tight:n}){const r=(0,s.getFunction)(t);return i.fixedBytes.encode({type:"bytes24",buffer:e,value:r,packed:a,tight:n})},decode:({value:e})=>({address:(0,n.bytesToHex)(e.slice(0,20)),selector:(0,n.bytesToHex)(e.slice(20,24))})}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/parsers/function.js"}],[1180,{"./address":1174,"./array":1175,"./bool":1176,"./bytes":1177,"./fixed-bytes":1178,"./function":1179,"./number":1181,"./parser":1182,"./string":1183,"./tuple":1184},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./address"),s),n(e("./array"),s),n(e("./bool"),s),n(e("./bytes"),s),n(e("./fixed-bytes"),s),n(e("./function"),s),n(e("./number"),s),n(e("./parser"),s),n(e("./string"),s),n(e("./tuple"),s)}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/parsers/index.js"}],[1181,{"../errors":1170,"../utils":1188,"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.number=s.getBigInt=s.assertNumberLength=s.getLength=s.isSigned=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../utils"),i=/^u?int(?<length>[0-9]*)?$/u;s.isSigned=e=>!e.startsWith("u");s.getLength=e=>{if("int"===e||"uint"===e)return 256;const t=e.match(i);(0,a.assert)(t?.groups?.length,new n.ParserError(`Invalid number type. Expected a number type, but received "${e}".`));const s=parseInt(t.groups.length,10);return(0,a.assert)(s>=8&&s<=256,new n.ParserError(`Invalid number length. Expected a number between 8 and 256, but received "${e}".`)),(0,a.assert)(s%8==0,new n.ParserError(`Invalid number length. Expected a multiple of 8, but received "${e}".`)),s};s.assertNumberLength=(e,t)=>{const r=(0,s.getLength)(t),i=BigInt(2)**BigInt(r-((0,s.isSigned)(t)?1:0))-BigInt(1);(0,s.isSigned)(t)?(0,a.assert)(e>=-(i+BigInt(1))&&e<=i,new n.ParserError(`Number "${e}" is out of range for type "${t}".`)):(0,a.assert)(e<=i,new n.ParserError(`Number "${e}" is out of range for type "${t}".`))};s.getBigInt=e=>{try{return(0,a.createBigInt)(e)}catch{throw new n.ParserError(`Invalid number. Expected a valid number value, but received "${e}".`)}},s.number={isDynamic:!1,isType:e=>i.test(e),getByteLength:()=>32,encode({type:e,buffer:t,value:n,packed:i}){const o=(0,s.getBigInt)(n);if((0,s.assertNumberLength)(o,e),(0,s.isSigned)(e)){if(i){const n=(0,s.getLength)(e)/8;return(0,a.concatBytes)([t,(0,a.signedBigIntToBytes)(o,n)])}return(0,a.concatBytes)([t,(0,r.padStart)((0,a.signedBigIntToBytes)(o,32))])}if(i){const n=(0,s.getLength)(e)/8;return(0,a.concatBytes)([t,(0,r.padStart)((0,a.bigIntToBytes)(o),n)])}return(0,a.concatBytes)([t,(0,r.padStart)((0,a.bigIntToBytes)(o))])},decode({type:e,value:t}){const n=t.subarray(0,32);if((0,s.isSigned)(e)){const t=(0,a.bytesToSignedBigInt)(n);return(0,s.assertNumberLength)(t,e),t}const r=(0,a.bytesToBigInt)(n);return(0,s.assertNumberLength)(r,e),r}}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/parsers/number.js"}],[1182,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/parsers/parser.js"}],[1183,{"./bytes":1177,"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.string=void 0;const a=e("@metamask/utils"),n=e("./bytes");s.string={isDynamic:!0,isType:e=>"string"===e,getByteLength:()=>32,encode:({buffer:e,value:t,packed:s,tight:r})=>n.bytes.encode({type:"bytes",buffer:e,value:(0,a.stringToBytes)(t),packed:s,tight:r}),decode:e=>(0,a.bytesToString)(n.bytes.decode(e))}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/parsers/string.js"}],[1184,{"../errors":1170,"../packer":1173,"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.tuple=s.getTupleElements=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../packer"),i=/^\((.+)\)$/u;s.getTupleElements=e=>{(0,a.assert)(e.startsWith("(")&&e.endsWith(")"),new n.ParserError(`Invalid tuple type. Expected tuple type, but received "${e}".`));const t=[];let s="",r=0;for(let a=1;a<e.length-1;a++){const n=e[a];","===n&&0===r?(t.push(s.trim()),s=""):(s+=n,"("===n?r+=1:")"===n&&(r-=1))}return s.trim()&&t.push(s.trim()),t},s.tuple={isDynamic:e=>(0,s.getTupleElements)(e).some(e=>{const t=(0,r.getParser)(e);return(0,r.isDynamicParser)(t,e)}),isType:e=>(e=>i.test(e))(e),getByteLength(e){if((0,r.isDynamicParser)(this,e))return 32;return(0,s.getTupleElements)(e).reduce((e,t)=>e+(0,r.getParser)(t).getByteLength(t),0)},encode({type:e,buffer:t,value:a,packed:n,tight:i}){const o=(0,s.getTupleElements)(e);return(0,r.pack)({types:o,values:a,byteArray:t,packed:n,tight:i})},decode({type:e,value:t,skip:a}){const n=(0,s.getTupleElements)(e);return a(this.getByteLength(e)-32),(0,r.unpack)(n,t)}}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/parsers/tuple.js"}],[1185,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/types/abi.js"}],[1186,{"./abi":1185},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./abi"),s)}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/types/index.js"}],[1187,{"@metamask/utils":1199},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.padEnd=s.padStart=s.set=void 0;const a=e("@metamask/utils");s.set=(e,t,s)=>(0,a.concatBytes)([e.subarray(0,s),t,e.subarray(s+t.length)]);s.padStart=(e,t=32)=>{const s=new Uint8Array(Math.max(t-e.length,0)).fill(0);return(0,a.concatBytes)([s,e])};s.padEnd=(e,t=32)=>{const s=new Uint8Array(Math.max(t-e.length,0)).fill(0);return(0,a.concatBytes)([e,s])}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/utils/buffer.js"}],[1188,{"./buffer":1187},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./buffer"),s)}}},{package:"@metamask/assets-controllers>@metamask/abi-utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/dist/utils/index.js"}],[1189,{"./errors.cjs":1197,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.assertExhaustive=s.assertStruct=s.assert=s.AssertionError=void 0;const a=e("@metamask/superstruct"),n=e("./errors.cjs");function r(e,t){return s=e,Boolean("string"==typeof s?.prototype?.constructor?.name)?new e({message:t}):e({message:t});var s}class i extends Error{constructor(e){super(e.message),this.code="ERR_ASSERTION"}}s.AssertionError=i,s.assert=function(e,t="Assertion failed.",s=i){if(!e){if(t instanceof Error)throw t;throw r(s,t)}},s.assertStruct=function(e,t,s="Assertion failed",o=i){try{(0,a.assert)(e,t)}catch(e){throw r(o,`${s}: ${function(e){return(0,n.getErrorMessage)(e).replace(/\.$/u,"")}(e)}.`)}},s.assertExhaustive=function(e){throw new Error("Invalid branch reached. Should be detected during compilation.")}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/assert.cjs"}],[1190,{"./assert.cjs":1189,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.base64=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs");s.base64=(e,t={})=>{const s=t.paddingRequired??!1,r=t.characterSet??"base64";let i,o;return"base64"===r?i=String.raw`[A-Za-z0-9+\/]`:((0,n.assert)("base64url"===r),i=String.raw`[-_A-Za-z0-9]`),o=s?new RegExp(`^(?:${i}{4})*(?:${i}{3}=|${i}{2}==)?$`,"u"):new RegExp(`^(?:${i}{4})*(?:${i}{2,3}|${i}{3}=|${i}{2}==)?$`,"u"),(0,a.pattern)(e,o)}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/base64.cjs"}],[1191,{"./assert.cjs":1189,"./hex.cjs":1198,"@scure/base":2876,buffer:3760},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.createDataView=s.concatBytes=s.valueToBytes=s.base64ToBytes=s.stringToBytes=s.numberToBytes=s.signedBigIntToBytes=s.bigIntToBytes=s.hexToBytes=s.bytesToBase64=s.bytesToString=s.bytesToNumber=s.bytesToSignedBigInt=s.bytesToBigInt=s.bytesToHex=s.assertIsBytes=s.isBytes=void 0;const a=e("@scure/base"),n=e("./assert.cjs"),r=e("./hex.cjs");const i=function(){const e=[];return()=>{if(0===e.length)for(let t=0;t<256;t++)e.push(t.toString(16).padStart(2,"0"));return e}}();function o(e){return e instanceof Uint8Array}function c(e){(0,n.assert)(o(e),"Value must be a Uint8Array.")}function l(e){if(c(e),0===e.length)return"0x";const t=i(),s=new Array(e.length);for(let a=0;a<e.length;a++)s[a]=t[e[a]];return(0,r.add0x)(s.join(""))}function u(e){c(e);const t=l(e);return BigInt(t)}function d(e){if("0x"===e?.toLowerCase?.())return new Uint8Array;(0,r.assertIsHexString)(e);const t=(0,r.remove0x)(e).toLowerCase(),s=t.length%2==0?t:`0${t}`,a=new Uint8Array(s.length/2);for(let e=0;e<a.length;e++){const t=s.charCodeAt(2*e),n=s.charCodeAt(2*e+1),r=t-(t<58?48:87),i=n-(n<58?48:87);a[e]=16*r+i}return a}function m(e){(0,n.assert)("bigint"==typeof e,"Value must be a bigint."),(0,n.assert)(e>=BigInt(0),"Value must be a non-negative bigint.");return d(e.toString(16))}function h(e){(0,n.assert)("number"==typeof e,"Value must be a number."),(0,n.assert)(e>=0,"Value must be a non-negative number."),(0,n.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToBytes` instead.");return d(e.toString(16))}function p(e){return(0,n.assert)("string"==typeof e,"Value must be a string."),(new TextEncoder).encode(e)}function g(e){if("bigint"==typeof e)return m(e);if("number"==typeof e)return h(e);if("string"==typeof e)return e.startsWith("0x")?d(e):p(e);if(o(e))return e;throw new TypeError(`Unsupported value type: "${typeof e}".`)}s.isBytes=o,s.assertIsBytes=c,s.bytesToHex=l,s.bytesToBigInt=u,s.bytesToSignedBigInt=function(e){c(e);let t=BigInt(0);for(const s of e)t=(t<<BigInt(8))+BigInt(s);return BigInt.asIntN(8*e.length,t)},s.bytesToNumber=function(e){c(e);const t=u(e);return(0,n.assert)(t<=BigInt(Number.MAX_SAFE_INTEGER),"Number is not a safe integer. Use `bytesToBigInt` instead."),Number(t)},s.bytesToString=function(e){return c(e),(new TextDecoder).decode(e)},s.bytesToBase64=function(e){return c(e),a.base64.encode(e)},s.hexToBytes=d,s.bigIntToBytes=m,s.signedBigIntToBytes=function(e,t){(0,n.assert)("bigint"==typeof e,"Value must be a bigint."),(0,n.assert)("number"==typeof t,"Byte length must be a number."),(0,n.assert)(t>0,"Byte length must be greater than 0."),(0,n.assert)(function(e,t){(0,n.assert)(t>0);const s=e>>BigInt(31);return!((~e&s)+(e&~s)>>BigInt(8*t-1))}(e,t),"Byte length is too small to represent the given value.");let s=e;const a=new Uint8Array(t);for(let e=0;e<a.length;e++)a[e]=Number(BigInt.asUintN(8,s)),s>>=BigInt(8);return a.reverse()},s.numberToBytes=h,s.stringToBytes=p,s.base64ToBytes=function(e){return(0,n.assert)("string"==typeof e,"Value must be a string."),a.base64.decode(e)},s.valueToBytes=g,s.concatBytes=function(e){const t=new Array(e.length);let s=0;for(let a=0;a<e.length;a++){const n=g(e[a]);t[a]=n,s+=n.length}const a=new Uint8Array(s);for(let e=0,s=0;e<t.length;e++)a.set(t[e],s),s+=t[e].length;return a},s.createDataView=function(e){if(void 0!==t&&e instanceof t){const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return new DataView(t)}return new DataView(e.buffer,e.byteOffset,e.byteLength)}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/bytes.cjs"}],[1192,{"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.toCaipChainId=s.parseCaipAccountId=s.parseCaipChainId=s.isCaipAssetId=s.isCaipAssetType=s.isCaipAccountAddress=s.isCaipAccountId=s.isCaipReference=s.isCaipNamespace=s.isCaipChainId=s.KnownCaipNamespace=s.CaipAssetIdStruct=s.CaipAssetTypeStruct=s.CaipAccountAddressStruct=s.CaipAccountIdStruct=s.CaipReferenceStruct=s.CaipNamespaceStruct=s.CaipChainIdStruct=s.CAIP_ASSET_ID_REGEX=s.CAIP_ASSET_TYPE_REGEX=s.CAIP_ACCOUNT_ADDRESS_REGEX=s.CAIP_ACCOUNT_ID_REGEX=s.CAIP_REFERENCE_REGEX=s.CAIP_NAMESPACE_REGEX=s.CAIP_CHAIN_ID_REGEX=void 0;const a=e("@metamask/superstruct");function n(e){return(0,a.is)(e,s.CaipNamespaceStruct)}function r(e){return(0,a.is)(e,s.CaipReferenceStruct)}s.CAIP_CHAIN_ID_REGEX=/^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u,s.CAIP_NAMESPACE_REGEX=/^[-a-z0-9]{3,8}$/u,s.CAIP_REFERENCE_REGEX=/^[-_a-zA-Z0-9]{1,32}$/u,s.CAIP_ACCOUNT_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u,s.CAIP_ACCOUNT_ADDRESS_REGEX=/^[-.%a-zA-Z0-9]{1,128}$/u,s.CAIP_ASSET_TYPE_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})$/u,s.CAIP_ASSET_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})\/(?<tokenId>[-.%a-zA-Z0-9]{1,78})$/u,s.CaipChainIdStruct=(0,a.pattern)((0,a.string)(),s.CAIP_CHAIN_ID_REGEX),s.CaipNamespaceStruct=(0,a.pattern)((0,a.string)(),s.CAIP_NAMESPACE_REGEX),s.CaipReferenceStruct=(0,a.pattern)((0,a.string)(),s.CAIP_REFERENCE_REGEX),s.CaipAccountIdStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ACCOUNT_ID_REGEX),s.CaipAccountAddressStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ACCOUNT_ADDRESS_REGEX),s.CaipAssetTypeStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ASSET_TYPE_REGEX),s.CaipAssetIdStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ASSET_ID_REGEX),function(e){e.Bip122="bip122",e.Eip155="eip155",e.Wallet="wallet"}(s.KnownCaipNamespace||(s.KnownCaipNamespace={})),s.isCaipChainId=function(e){return(0,a.is)(e,s.CaipChainIdStruct)},s.isCaipNamespace=n,s.isCaipReference=r,s.isCaipAccountId=function(e){return(0,a.is)(e,s.CaipAccountIdStruct)},s.isCaipAccountAddress=function(e){return(0,a.is)(e,s.CaipAccountAddressStruct)},s.isCaipAssetType=function(e){return(0,a.is)(e,s.CaipAssetTypeStruct)},s.isCaipAssetId=function(e){return(0,a.is)(e,s.CaipAssetIdStruct)},s.parseCaipChainId=function(e){const t=s.CAIP_CHAIN_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP chain ID.");return{namespace:t.groups.namespace,reference:t.groups.reference}},s.parseCaipAccountId=function(e){const t=s.CAIP_ACCOUNT_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP account ID.");return{address:t.groups.accountAddress,chainId:t.groups.chainId,chain:{namespace:t.groups.namespace,reference:t.groups.reference}}},s.toCaipChainId=function(e,t){if(!n(e))throw new Error(`Invalid "namespace", must match: ${s.CAIP_NAMESPACE_REGEX.toString()}`);if(!r(t))throw new Error(`Invalid "reference", must match: ${s.CAIP_REFERENCE_REGEX.toString()}`);return`${e}:${t}`}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/caip-types.cjs"}],[1193,{"./base64.cjs":1190,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ChecksumStruct=void 0;const a=e("@metamask/superstruct"),n=e("./base64.cjs");s.ChecksumStruct=(0,a.size)((0,n.base64)((0,a.string)(),{paddingRequired:!0}),44,44)}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/checksum.cjs"}],[1194,{"./assert.cjs":1189,"./bytes.cjs":1191,"./hex.cjs":1198,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createHex=s.createBytes=s.createBigInt=s.createNumber=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs"),r=e("./bytes.cjs"),i=e("./hex.cjs"),o=(0,a.union)([(0,a.number)(),(0,a.bigint)(),(0,a.string)(),i.StrictHexStruct]),c=(0,a.coerce)((0,a.number)(),o,Number),l=(0,a.coerce)((0,a.bigint)(),o,BigInt),u=((0,a.union)([i.StrictHexStruct,(0,a.instance)(Uint8Array)]),(0,a.coerce)((0,a.instance)(Uint8Array),(0,a.union)([i.StrictHexStruct]),r.hexToBytes)),d=(0,a.coerce)(i.StrictHexStruct,(0,a.instance)(Uint8Array),r.bytesToHex);s.createNumber=function(e){try{const t=(0,a.create)(e,c);return(0,n.assert)(Number.isFinite(t),`Expected a number-like value, got "${e}".`),t}catch(t){if(t instanceof a.StructError)throw new Error(`Expected a number-like value, got "${e}".`);throw t}},s.createBigInt=function(e){try{return(0,a.create)(e,l)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a number-like value, got "${String(e.value)}".`);throw e}},s.createBytes=function(e){if("string"==typeof e&&"0x"===e.toLowerCase())return new Uint8Array;try{return(0,a.create)(e,u)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}},s.createHex=function(e){if(e instanceof Uint8Array&&0===e.length||"string"==typeof e&&"0x"===e.toLowerCase())return"0x";try{return(0,a.create)(e,d)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/coercers.cjs"}],[1195,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},i=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s};Object.defineProperty(s,"__esModule",{value:!0}),s.FrozenSet=s.FrozenMap=void 0;class o{get size(){return r(this,a,"f").size}[(a=new WeakMap,Symbol.iterator)](){return r(this,a,"f")[Symbol.iterator]()}constructor(e){a.set(this,void 0),i(this,a,new Map(e),"f"),Object.freeze(this)}entries(){return r(this,a,"f").entries()}forEach(e,t){return r(this,a,"f").forEach((s,a,n)=>e.call(t,s,a,this))}get(e){return r(this,a,"f").get(e)}has(e){return r(this,a,"f").has(e)}keys(){return r(this,a,"f").keys()}values(){return r(this,a,"f").values()}toString(){return`FrozenMap(${this.size}) {${this.size>0?` ${[...this.entries()].map(([e,t])=>`${String(e)} => ${String(t)}`).join(", ")} `:""}}`}}s.FrozenMap=o;class c{get size(){return r(this,n,"f").size}[(n=new WeakMap,Symbol.iterator)](){return r(this,n,"f")[Symbol.iterator]()}constructor(e){n.set(this,void 0),i(this,n,new Set(e),"f"),Object.freeze(this)}entries(){return r(this,n,"f").entries()}forEach(e,t){return r(this,n,"f").forEach((s,a,n)=>e.call(t,s,a,this))}has(e){return r(this,n,"f").has(e)}keys(){return r(this,n,"f").keys()}values(){return r(this,n,"f").values()}toString(){return`FrozenSet(${this.size}) {${this.size>0?` ${[...this.values()].map(e=>String(e)).join(", ")} `:""}}`}}s.FrozenSet=c,Object.freeze(o),Object.freeze(o.prototype),Object.freeze(c),Object.freeze(c.prototype)}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/collections.cjs"}],[1196,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/encryption-types.cjs"}],[1197,{"./misc.cjs":1203,"pony-cause":4766},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.wrapError=s.getErrorMessage=s.isErrorWithStack=s.isErrorWithMessage=s.isErrorWithCode=void 0;const a=e("pony-cause"),n=e("./misc.cjs");function r(e){return"object"==typeof e&&null!==e&&"code"in e}function i(e){return"object"==typeof e&&null!==e&&"message"in e}s.isErrorWithCode=r,s.isErrorWithMessage=i,s.isErrorWithStack=function(e){return"object"==typeof e&&null!==e&&"stack"in e},s.getErrorMessage=function(e){return i(e)&&"string"==typeof e.message?e.message:(0,n.isNullOrUndefined)(e)?"":String(e)},s.wrapError=function(e,t){if((s=e)instanceof Error||(0,n.isObject)(s)&&"Error"===s.constructor.name){let s;return s=2===Error.length?new Error(t,{cause:e}):new a.ErrorWithCause(t,{cause:e}),r(e)&&(s.code=e.code),s}var s;return t.length>0?new Error(`${String(e)}: ${t}`):new Error(String(e))}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/errors.cjs"}],[1198,{"./assert.cjs":1189,"./bytes.cjs":1191,"@metamask/superstruct":2705,"@noble/hashes/sha3":2853},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.remove0x=s.add0x=s.isValidChecksumAddress=s.getChecksumAddress=s.isValidHexAddress=s.assertIsStrictHexString=s.assertIsHexString=s.isStrictHexString=s.isHexString=s.HexChecksumAddressStruct=s.HexAddressStruct=s.StrictHexStruct=s.HexStruct=void 0;const a=e("@metamask/superstruct"),n=e("@noble/hashes/sha3"),r=e("./assert.cjs"),i=e("./bytes.cjs");function o(e){return(0,a.is)(e,s.HexStruct)}function c(e){return(0,a.is)(e,s.StrictHexStruct)}function l(e){(0,r.assert)((0,a.is)(e,s.HexChecksumAddressStruct),"Invalid hex address.");const t=d(e.toLowerCase()),o=d((0,i.bytesToHex)((0,n.keccak_256)(t)));return`0x${t.split("").map((e,t)=>{const s=o[t];return(0,r.assert)((0,a.is)(s,(0,a.string)()),"Hash shorter than address."),parseInt(s,16)>7?e.toUpperCase():e}).join("")}`}function u(e){return!!(0,a.is)(e,s.HexChecksumAddressStruct)&&l(e)===e}function d(e){return e.startsWith("0x")||e.startsWith("0X")?e.substring(2):e}s.HexStruct=(0,a.pattern)((0,a.string)(),/^(?:0x)?[0-9a-f]+$/iu),s.StrictHexStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-f]+$/iu),s.HexAddressStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-f]{40}$/u),s.HexChecksumAddressStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-fA-F]{40}$/u),s.isHexString=o,s.isStrictHexString=c,s.assertIsHexString=function(e){(0,r.assert)(o(e),"Value must be a hexadecimal string.")},s.assertIsStrictHexString=function(e){(0,r.assert)(c(e),'Value must be a hexadecimal string, starting with "0x".')},s.isValidHexAddress=function(e){return(0,a.is)(e,s.HexAddressStruct)||u(e)},s.getChecksumAddress=l,s.isValidChecksumAddress=u,s.add0x=function(e){return e.startsWith("0x")?e:e.startsWith("0X")?`0x${e.substring(2)}`:`0x${e}`},s.remove0x=d}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/hex.cjs"}],[1199,{"./assert.cjs":1189,"./base64.cjs":1190,"./bytes.cjs":1191,"./caip-types.cjs":1192,"./checksum.cjs":1193,"./coercers.cjs":1194,"./collections.cjs":1195,"./encryption-types.cjs":1196,"./errors.cjs":1197,"./hex.cjs":1198,"./json.cjs":1200,"./keyring.cjs":1201,"./logging.cjs":1202,"./misc.cjs":1203,"./number.cjs":1204,"./opaque.cjs":1205,"./promise.cjs":1206,"./time.cjs":1207,"./transaction-types.cjs":1208,"./versions.cjs":1209},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./assert.cjs"),s),n(e("./base64.cjs"),s),n(e("./bytes.cjs"),s),n(e("./caip-types.cjs"),s),n(e("./checksum.cjs"),s),n(e("./coercers.cjs"),s),n(e("./collections.cjs"),s),n(e("./encryption-types.cjs"),s),n(e("./errors.cjs"),s),n(e("./hex.cjs"),s),n(e("./json.cjs"),s),n(e("./keyring.cjs"),s),n(e("./logging.cjs"),s),n(e("./misc.cjs"),s),n(e("./number.cjs"),s),n(e("./opaque.cjs"),s),n(e("./promise.cjs"),s),n(e("./time.cjs"),s),n(e("./transaction-types.cjs"),s),n(e("./versions.cjs"),s)}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/index.cjs"}],[1200,{"./assert.cjs":1189,"./misc.cjs":1203,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getJsonRpcIdValidator=s.assertIsJsonRpcError=s.isJsonRpcError=s.assertIsJsonRpcFailure=s.isJsonRpcFailure=s.assertIsJsonRpcSuccess=s.isJsonRpcSuccess=s.assertIsJsonRpcResponse=s.isJsonRpcResponse=s.assertIsPendingJsonRpcResponse=s.isPendingJsonRpcResponse=s.JsonRpcResponseStruct=s.JsonRpcFailureStruct=s.JsonRpcSuccessStruct=s.PendingJsonRpcResponseStruct=s.assertIsJsonRpcRequest=s.isJsonRpcRequest=s.assertIsJsonRpcNotification=s.isJsonRpcNotification=s.JsonRpcNotificationStruct=s.JsonRpcRequestStruct=s.JsonRpcParamsStruct=s.JsonRpcErrorStruct=s.JsonRpcIdStruct=s.JsonRpcVersionStruct=s.jsonrpc2=s.getJsonSize=s.getSafeJson=s.isValidJson=s.JsonStruct=s.UnsafeJsonStruct=s.exactOptional=s.object=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs"),r=e("./misc.cjs");function i({path:e,branch:t}){const s=e[e.length-1];return(0,r.hasProperty)(t[t.length-2],s)}function o(e){return new a.Struct({...e,type:`optional ${e.type}`,validator:(t,s)=>!i(s)||e.validator(t,s),refiner:(t,s)=>!i(s)||e.refiner(t,s)})}s.object=e=>(0,a.object)(e),s.exactOptional=o;function c(e){return(0,a.create)(e,s.JsonStruct)}s.UnsafeJsonStruct=(0,a.union)([(0,a.literal)(null),(0,a.boolean)(),(0,a.define)("finite number",e=>(0,a.is)(e,(0,a.number)())&&Number.isFinite(e)),(0,a.string)(),(0,a.array)((0,a.lazy)(()=>s.UnsafeJsonStruct)),(0,a.record)((0,a.string)(),(0,a.lazy)(()=>s.UnsafeJsonStruct))]),s.JsonStruct=(0,a.coerce)(s.UnsafeJsonStruct,(0,a.any)(),e=>((0,n.assertStruct)(e,s.UnsafeJsonStruct),JSON.parse(JSON.stringify(e,(e,t)=>"__proto__"===e||"constructor"===e?undefined:t)))),s.isValidJson=function(e){try{return c(e),!0}catch{return!1}},s.getSafeJson=c,s.getJsonSize=function(e){(0,n.assertStruct)(e,s.JsonStruct,"Invalid JSON value");const t=JSON.stringify(e);return(new TextEncoder).encode(t).byteLength},s.jsonrpc2="2.0",s.JsonRpcVersionStruct=(0,a.literal)(s.jsonrpc2),s.JsonRpcIdStruct=(0,a.nullable)((0,a.union)([(0,a.number)(),(0,a.string)()])),s.JsonRpcErrorStruct=(0,s.object)({code:(0,a.integer)(),message:(0,a.string)(),data:o(s.JsonStruct),stack:o((0,a.string)())}),s.JsonRpcParamsStruct=(0,a.union)([(0,a.record)((0,a.string)(),s.JsonStruct),(0,a.array)(s.JsonStruct)]),s.JsonRpcRequestStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,method:(0,a.string)(),params:o(s.JsonRpcParamsStruct)}),s.JsonRpcNotificationStruct=(0,s.object)({jsonrpc:s.JsonRpcVersionStruct,method:(0,a.string)(),params:o(s.JsonRpcParamsStruct)}),s.isJsonRpcNotification=function(e){return(0,a.is)(e,s.JsonRpcNotificationStruct)},s.assertIsJsonRpcNotification=function(e,t){(0,n.assertStruct)(e,s.JsonRpcNotificationStruct,"Invalid JSON-RPC notification",t)},s.isJsonRpcRequest=function(e){return(0,a.is)(e,s.JsonRpcRequestStruct)},s.assertIsJsonRpcRequest=function(e,t){(0,n.assertStruct)(e,s.JsonRpcRequestStruct,"Invalid JSON-RPC request",t)},s.PendingJsonRpcResponseStruct=(0,a.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,result:(0,a.optional)((0,a.unknown)()),error:(0,a.optional)(s.JsonRpcErrorStruct)}),s.JsonRpcSuccessStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,result:s.JsonStruct}),s.JsonRpcFailureStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,error:s.JsonRpcErrorStruct}),s.JsonRpcResponseStruct=(0,a.union)([s.JsonRpcSuccessStruct,s.JsonRpcFailureStruct]),s.isPendingJsonRpcResponse=function(e){return(0,a.is)(e,s.PendingJsonRpcResponseStruct)},s.assertIsPendingJsonRpcResponse=function(e,t){(0,n.assertStruct)(e,s.PendingJsonRpcResponseStruct,"Invalid pending JSON-RPC response",t)},s.isJsonRpcResponse=function(e){return(0,a.is)(e,s.JsonRpcResponseStruct)},s.assertIsJsonRpcResponse=function(e,t){(0,n.assertStruct)(e,s.JsonRpcResponseStruct,"Invalid JSON-RPC response",t)},s.isJsonRpcSuccess=function(e){return(0,a.is)(e,s.JsonRpcSuccessStruct)},s.assertIsJsonRpcSuccess=function(e,t){(0,n.assertStruct)(e,s.JsonRpcSuccessStruct,"Invalid JSON-RPC success response",t)},s.isJsonRpcFailure=function(e){return(0,a.is)(e,s.JsonRpcFailureStruct)},s.assertIsJsonRpcFailure=function(e,t){(0,n.assertStruct)(e,s.JsonRpcFailureStruct,"Invalid JSON-RPC failure response",t)},s.isJsonRpcError=function(e){return(0,a.is)(e,s.JsonRpcErrorStruct)},s.assertIsJsonRpcError=function(e,t){(0,n.assertStruct)(e,s.JsonRpcErrorStruct,"Invalid JSON-RPC error",t)},s.getJsonRpcIdValidator=function(e){const{permitEmptyString:t,permitFractions:s,permitNull:a}={permitEmptyString:!0,permitFractions:!1,permitNull:!0,...e};return e=>Boolean("number"==typeof e&&(s||Number.isInteger(e))||"string"==typeof e&&(t||e.length>0)||a&&null===e)}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/json.cjs"}],[1201,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/keyring.cjs"}],[1202,{debug:3910},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.createModuleLogger=s.createProjectLogger=void 0;const n=(0,a(e("debug")).default)("metamask");s.createProjectLogger=function(e){return n.extend(e)},s.createModuleLogger=function(e,t){return e.extend(t)}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/logging.cjs"}],[1203,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.calculateNumberSize=s.calculateStringSize=s.isASCII=s.isPlainObject=s.ESCAPE_CHARACTERS_REGEXP=s.JsonSize=s.getKnownPropertyNames=s.hasProperty=s.isObject=s.isNullOrUndefined=s.isNonEmptyArray=void 0,s.isNonEmptyArray=function(e){return Array.isArray(e)&&e.length>0},s.isNullOrUndefined=function(e){return null===e||e===undefined},s.isObject=function(e){return Boolean(e)&&"object"==typeof e&&!Array.isArray(e)};function a(e){return e.charCodeAt(0)<=127}s.hasProperty=(e,t)=>Object.hasOwnProperty.call(e,t),s.getKnownPropertyNames=function(e){return Object.getOwnPropertyNames(e)},function(e){e[e.Null=4]="Null",e[e.Comma=1]="Comma",e[e.Wrapper=1]="Wrapper",e[e.True=4]="True",e[e.False=5]="False",e[e.Quote=1]="Quote",e[e.Colon=1]="Colon",e[e.Date=24]="Date"}(s.JsonSize||(s.JsonSize={})),s.ESCAPE_CHARACTERS_REGEXP=/"|\\|\n|\r|\t/gu,s.isPlainObject=function(e){if("object"!=typeof e||null===e)return!1;try{let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}catch(e){return!1}},s.isASCII=a,s.calculateStringSize=function(e){return e.split("").reduce((e,t)=>a(t)?e+1:e+2,0)+(e.match(s.ESCAPE_CHARACTERS_REGEXP)??[]).length},s.calculateNumberSize=function(e){return e.toString().length}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/misc.cjs"}],[1204,{"./assert.cjs":1189,"./hex.cjs":1198},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.hexToBigInt=s.hexToNumber=s.bigIntToHex=s.numberToHex=void 0;const a=e("./assert.cjs"),n=e("./hex.cjs");s.numberToHex=e=>((0,a.assert)("number"==typeof e,"Value must be a number."),(0,a.assert)(e>=0,"Value must be a non-negative number."),(0,a.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToHex` instead."),(0,n.add0x)(e.toString(16)));s.bigIntToHex=e=>((0,a.assert)("bigint"==typeof e,"Value must be a bigint."),(0,a.assert)(e>=0,"Value must be a non-negative bigint."),(0,n.add0x)(e.toString(16)));s.hexToNumber=e=>{(0,n.assertIsHexString)(e);const t=parseInt(e,16);return(0,a.assert)(Number.isSafeInteger(t),"Value is not a safe integer. Use `hexToBigInt` instead."),t};s.hexToBigInt=e=>((0,n.assertIsHexString)(e),BigInt((0,n.add0x)(e)))}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/number.cjs"}],[1205,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/opaque.cjs"}],[1206,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createDeferredPromise=void 0,s.createDeferredPromise=function({suppressUnhandledRejection:e=!1}={}){let t,s;const a=new Promise((e,a)=>{t=e,s=a});return e&&a.catch(e=>{}),{promise:a,resolve:t,reject:s}}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/promise.cjs"}],[1207,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.timeSince=s.inMilliseconds=s.Duration=void 0,function(e){e[e.Millisecond=1]="Millisecond",e[e.Second=1e3]="Second",e[e.Minute=6e4]="Minute",e[e.Hour=36e5]="Hour",e[e.Day=864e5]="Day",e[e.Week=6048e5]="Week",e[e.Year=31536e6]="Year"}(s.Duration||(s.Duration={}));const a=(e,t)=>{if(!(e=>Number.isInteger(e)&&e>=0)(e))throw new Error(`"${t}" must be a non-negative integer. Received: "${e}".`)};s.inMilliseconds=function(e,t){return a(e,"count"),e*t},s.timeSince=function(e){return a(e,"timestamp"),Date.now()-e}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/time.cjs"}],[1208,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/transaction-types.cjs"}],[1209,{"./assert.cjs":1189,"@metamask/superstruct":2705,semver:5252},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.satisfiesVersionRange=s.gtRange=s.gtVersion=s.assertIsSemVerRange=s.assertIsSemVerVersion=s.isValidSemVerRange=s.isValidSemVerVersion=s.VersionRangeStruct=s.VersionStruct=void 0;const a=e("@metamask/superstruct"),n=e("semver"),r=e("./assert.cjs");s.VersionStruct=(0,a.refine)((0,a.string)(),"Version",e=>null!==(0,n.valid)(e)||`Expected SemVer version, got "${e}"`),s.VersionRangeStruct=(0,a.refine)((0,a.string)(),"Version range",e=>null!==(0,n.validRange)(e)||`Expected SemVer range, got "${e}"`),s.isValidSemVerVersion=function(e){return(0,a.is)(e,s.VersionStruct)},s.isValidSemVerRange=function(e){return(0,a.is)(e,s.VersionRangeStruct)},s.assertIsSemVerVersion=function(e){(0,r.assertStruct)(e,s.VersionStruct)},s.assertIsSemVerRange=function(e){(0,r.assertStruct)(e,s.VersionRangeStruct)},s.gtVersion=function(e,t){return(0,n.gt)(e,t)},s.gtRange=function(e,t){return(0,n.gtr)(e,t)},s.satisfiesVersionRange=function(e,t){return(0,n.satisfies)(e,t,{includePrerelease:!0})}}}},{package:"@metamask/assets-controllers>@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/assets-controllers/node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/versions.cjs"}],[1210,{"./errors.cjs":1212,"@noble/hashes/sha3":2853,"bn.js":3699,buffer:3760,"json-stable-stringify-without-jsonify":4366},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.toSnakeCaseKeys=s.toCamelCaseKeys=s.convertKeys=s.toSnake=s.toCamel=s.isJSONRPCError=s.filterErrorResponses=s.filterCompletedRequests=s.Some=s.getProxyCoordinatorNodeIndex=s.kCombinations=s.thresholdSame=s.safeStringify=s.add0x=s.remove0x=s.keccak256AndHexify=void 0;const n=e("@noble/hashes/sha3"),r=a(e("bn.js")),i=a(e("json-stable-stringify-without-jsonify")),o=e("./errors.cjs");function c(e){return`0x${t.from((0,n.keccak_256)(e)).toString("hex")}`}s.keccak256AndHexify=c,s.remove0x=function(e){return e.startsWith("0x")?e.slice(2):e},s.add0x=function(e){return e.startsWith("0x")?e:`0x${e}`},s.safeStringify=function(e,t){const s=(0,i.default)(e,t);if(!s)throw new Error("Failed to stringify");return s},s.thresholdSame=function(e,t){const s={};for(const a of e){const e=(0,i.default)(a);if(e&&(s[e]=s[e]?s[e]+1:1,s[e]===t))return a}return undefined},s.kCombinations=function*e(t,s){let a=t;if("number"==typeof a&&(a=Array.from({length:a},(e,t)=>t)),s>a.length||s<=0)return;if(s===a.length)return void(yield a);if(1===s){for(const e of a)yield[e];return}const n=Array.from({length:a.length-s+2},(e,t)=>t);for(const t of n)for(const n of e(a.slice(t+1),s-1))yield[a[t],...n]};function l(e){return e.replace(/_([a-z])/gu,(e,t)=>t.toUpperCase())}function u(e){return e.replace(/([A-Z])/gu,"_$1").toLowerCase()}function d(e,t){if(Array.isArray(e))return e.map(e=>d(e,t));if(null!==e&&"object"==typeof e){const s={};for(const[a,n]of Object.entries(e))s[t(a)]=d(n,t);return s}return e}s.getProxyCoordinatorNodeIndex=(e,s,a)=>{const n=`${s}${a}`,i=c(t.from(n,"utf8")).slice(2);return e[new r.default(i,"hex").mod(new r.default(e.length)).toNumber()]},s.Some=async function(e,t){let s;const a=new Array(e.length).fill(undefined),n=new Array(e.length).fill(undefined);for(const[r,i]of e.entries()){let e;try{const t=new Promise((t,s)=>{e=setTimeout(()=>s(new Error("Promise timed out")),1e4)});a[r]=await Promise.race([i,t])}catch(e){n[r]=e}finally{e&&clearTimeout(e)}try{const e=a.every(e=>e!==undefined),s=await t(a,{allSettled:e});if(s)return s}catch(e){s=e}}!function(e,t,s){let a=e.some(e=>e!==undefined);if(a)throw new o.SomeError({errors:e,responses:t,predicate:s});if(a=t.some(e=>Boolean(e?.error)),a){const e=t.map(e=>{const{error:t}=e;return t?.data&&t.data.length>0?new Error(t.data):undefined});throw new o.SomeError({errors:e,responses:t,predicate:s})}throw new o.SomeError({errors:e,responses:t,predicate:s})}(n,a,s)},s.filterCompletedRequests=function(e){return e.filter(e=>{const t=e&&"object"==typeof e,s=e,a=!s?.error,n=Boolean(s?.result);return t&&a&&n})},s.filterErrorResponses=function(e){return e.filter(e=>{const t=e&&"object"==typeof e,s=e,a=Boolean(s?.error);return t&&a})},s.isJSONRPCError=function(e){const t=e;return Boolean(e&&"object"==typeof e)&&"number"==typeof t?.code&&"string"==typeof t?.message},s.toCamel=l,s.toSnake=u,s.convertKeys=d;s.toCamelCaseKeys=e=>d(e,l);s.toSnakeCaseKeys=e=>d(e,u)}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/seedless-onboarding-controller>@metamask/auth-network-utils",file:"node_modules/@metamask/auth-network-utils/dist/common.cjs"}],[1211,{"./common.cjs":1210,buffer:3760,elliptic:3934},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.uint8ArrayToHex=s.derivePubKey=s.toChecksumAddress=s.encParamsHexToBuf=s.encryptedParamsBufToHex=s.generatePrivateKey=s.getSecp256K1Curve=void 0;const a=e("elliptic"),n=e("./common.cjs");let r=null;s.getSecp256K1Curve=function(){return r=r??new a.ec("secp256k1"),r},s.generatePrivateKey=function(e){return e.genKeyPair().getPrivate()},s.encryptedParamsBufToHex=function(e){return{iv:t.from(e.iv).toString("hex"),ephemPublicKey:t.from(e.ephemPublicKey).toString("hex"),mac:t.from(e.mac).toString("hex"),mode:"AES256"}},s.encParamsHexToBuf=function(e){return{iv:t.from(e.iv,"hex"),ephemPublicKey:t.from(e.ephemPublicKey,"hex"),mac:t.from(e.mac,"hex")}},s.toChecksumAddress=function(e){const s=(a=e,a.startsWith("0x")||a.startsWith("0X")?a.slice(2):a).toLowerCase();var a;const r=t.from(s,"utf8"),i=(0,n.keccak256AndHexify)(r).slice(2);let o="0x";for(let e=0;e<s.length;e++)parseInt(i[e],16)>=8?o+=s[e].toUpperCase():o+=s[e];return o},s.derivePubKey=function(e,t){const s=t.toString(16,64);return e.keyFromPrivate(s,"hex").getPublic()},s.uint8ArrayToHex=function(e){return Array.from(e).map(e=>e.toString(16).padStart(2,"0")).join("")}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/seedless-onboarding-controller>@metamask/auth-network-utils",file:"node_modules/@metamask/auth-network-utils/dist/cryptoUtils.cjs"}],[1212,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.SomeError=void 0;class a extends Error{constructor({errors:e,responses:t,predicate:s}){const n=s?.message??"unknown error";super(`Unable to resolve enough promises. \n      errors: ${e.map(e=>e?.message??e).join(", ")}, \n      predicate error: ${n},\n      ${t.length} responses,\n      responses: ${JSON.stringify(t)}`),this.errors=e,this.responses=t,this.predicate=s,Object.setPrototypeOf(this,a.prototype)}toString(){return this.message}}s.SomeError=a}}},{package:"@metamask/seedless-onboarding-controller>@metamask/auth-network-utils",file:"node_modules/@metamask/auth-network-utils/dist/errors.cjs"}],[1213,{"bn.js":3699},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.waitFor=s.capitalizeFirstLetter=s.generateEmptyBNArray=void 0;const n=a(e("bn.js"));s.generateEmptyBNArray=function(e){return Array.from({length:e},()=>new n.default(0))},s.capitalizeFirstLetter=function(e){return e.charAt(0).toUpperCase()+e.slice(1)},s.waitFor=async function(e=2e3){return new Promise(t=>{setTimeout(t,e)})}}}},{package:"@metamask/seedless-onboarding-controller>@metamask/auth-network-utils",file:"node_modules/@metamask/auth-network-utils/dist/helpers.cjs"}],[1214,{"./common.cjs":1210,"./cryptoUtils.cjs":1211,"./errors.cjs":1212,"./helpers.cjs":1213,"./lagrangeInterpolation.cjs":1215,"./point.cjs":1216,"./polynomial.cjs":1217,"./share.cjs":1218},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.Share=s.Polynomial=s.Point=void 0;var i=e("./point.cjs");Object.defineProperty(s,"Point",{enumerable:!0,get:function(){return r(i).default}});var o=e("./polynomial.cjs");Object.defineProperty(s,"Polynomial",{enumerable:!0,get:function(){return r(o).default}});var c=e("./share.cjs");Object.defineProperty(s,"Share",{enumerable:!0,get:function(){return r(c).default}}),n(e("./errors.cjs"),s),n(e("./common.cjs"),s),n(e("./lagrangeInterpolation.cjs"),s),n(e("./cryptoUtils.cjs"),s),n(e("./helpers.cjs"),s)}}},{package:"@metamask/seedless-onboarding-controller>@metamask/auth-network-utils",file:"node_modules/@metamask/auth-network-utils/dist/index.cjs"}],[1215,{"./cryptoUtils.cjs":1211,"./helpers.cjs":1213,"./point.cjs":1216,"./polynomial.cjs":1217,"@noble/curves/abstract/modular":2835,"@noble/curves/abstract/utils":2837,"@noble/curves/secp256k1":2840,"@noble/hashes/utils":2855,"bn.js":3699},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)"default"!==s&&Object.prototype.hasOwnProperty.call(e,s)&&a(t,e,s);return n(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.lagrangeInterpolation=s.lagrangeInterpolationForScalars=s.lagrangeInterpolationForPoints=s.lagrangeInterpolationNoble=s.generateRandomScalar=s.generateRandomPolynomialNoble=s.generateRandomPolynomial=s.lagrangeInterpolatePolynomial=void 0;const o=e("@noble/curves/abstract/modular"),c=e("@noble/curves/abstract/utils"),l=e("@noble/curves/secp256k1"),u=e("@noble/hashes/utils"),d=i(e("bn.js")),m=e("./cryptoUtils.cjs"),h=e("./helpers.cjs"),p=i(e("./point.cjs")),g=r(e("./polynomial.cjs"));function f(e,t){const s=(0,m.generatePrivateKey)(t);return e.find(e=>e.eq(s))?f(e,t):s}function y(e,t,s){const a=(0,h.generateEmptyBNArray)(e.length+t.length-1);for(let n=0;n<e.length;n++)for(let r=0;r<t.length;r++)a[n+r]=a[n+r].add(e[n].mul(t[r])).umod(s);return a}function w(e,t){const s=t.length,a=(0,h.generateEmptyBNArray)(s);if(!e.n)throw new Error("Curve is not set");for(let n=0;n<s;n++){let r=[new d.default(1)];for(let a=0;a<s;a++){if(a===n)continue;const s=t[n].xCoordinate.sub(t[a].xCoordinate).umod(e.n).invm(e.n);r=y(r,[t[a].xCoordinate.neg().umod(e.n).mul(s).umod(e.n),s],e.n)}for(let s=0;s<r.length;s++)a[s]=a[s].add(r[s].mul(t[n].yCoordinate)).umod(e.n)}return new g.default(a,e)}function b(e=l.secp256k1.CURVE.n){const t=(0,o.getMinHashLength)(e),s=(0,u.randomBytes)(t);return(0,c.bytesToNumberBE)(s)%e}function k(e,t,s){if(t.length!==s.length)throw new Error("Values and nodeIndex arrays must have the same length");if(0===t.length)throw new Error("Cannot interpolate with empty arrays");const a=(0,o.Field)(e),n="bigint"==typeof t[0];let r=n?0n:l.secp256k1.ProjectivePoint.ZERO;for(let e=0;e<t.length;e++){let i=1n,o=1n;for(let t=0;t<s.length;t++){if(e===t)continue;const n=s[e],r=s[t],c=a.neg(r),l=a.sub(n,r);i=a.mul(i,c),o=a.mul(o,l)}const c=a.mul(i,a.inv(o));if(n){const s=t[e],n=a.mul(s,c);r=a.add(r,n)}else{const s=t[e].multiply(c);r=r.add(s)}}return r}s.lagrangeInterpolatePolynomial=w,s.generateRandomPolynomial=function(e,t,s,a){let n;if(n=s||f([new d.default(0)],e),!a){const s=[n];for(let a=0;a<t;a+=1){const t=f(s,e);s.push(t)}return new g.default(s,e)}if(!Array.isArray(a))throw new Error("deterministic shares in generateRandomPolynomial should be an array");if(a.length>t)throw new Error("deterministicShares in generateRandomPolynomial should be less or equal than degree to ensure an element of randomness");const r={};a.forEach(t=>{r[t.shareIndex.toString("hex",64)]=new p.default(t.shareIndex,t.share,e)});for(let s=0;s<t-a.length;s+=1){const t=[new d.default(0)];Object.keys(r).forEach(e=>{t.push(new d.default(e,"hex"))});const s=f(t,e);r[s.toString("hex",64)]=new p.default(s,(0,m.generatePrivateKey)(e),e)}return r[0]=new p.default(new d.default(0),n,e),w(e,Object.values(r))},s.generateRandomPolynomialNoble=function(e,t,s){const a=[s??b(e)];for(let s=1;s<=t;s++)a[s]=b(e);return new g.PolynomialNoble(a,e)},s.generateRandomScalar=b,s.lagrangeInterpolationNoble=k,s.lagrangeInterpolationForPoints=function(e,t,s){return k(e,t,s)},s.lagrangeInterpolationForScalars=function(e,t,s){return k(e,t,s)},s.lagrangeInterpolation=function(e,t,s){if(t.length!==s.length)throw new Error("shares not equal to nodeIndex length in lagrangeInterpolation");const a=t.map((t,a)=>new p.default(s[a],t,e));return w(e,a).polynomial[0]}}}},{package:"@metamask/seedless-onboarding-controller>@metamask/auth-network-utils",file:"node_modules/@metamask/auth-network-utils/dist/lagrangeInterpolation.cjs"}],[1216,{"bn.js":3699,buffer:3760},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0});const n=a(e("bn.js"));s.default=class{constructor(e,t,s){this.xCoordinate=new n.default(e,"hex"),this.yCoordinate=new n.default(t,"hex"),this.ecCurve=s}encode(e){switch(e){case"arr":return t.concat([t.from("04","hex"),t.from(this.xCoordinate.toString("hex",64),"hex"),t.from(this.yCoordinate.toString("hex",64),"hex")]);case"elliptic-compressed":{const e=this.ecCurve.keyFromPublic({x:this.xCoordinate.toString("hex",64),y:this.yCoordinate.toString("hex",64)},"hex");return t.from(e.getPublic(!0,"hex"),"hex")}default:throw new Error("encoding doesn't exist in Point")}}}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/seedless-onboarding-controller>@metamask/auth-network-utils",file:"node_modules/@metamask/auth-network-utils/dist/point.cjs"}],[1217,{"./share.cjs":1218,"@noble/curves/abstract/modular":2835,"bn.js":3699,elliptic:3934},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},i=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.PolynomialNoble=void 0;const c=e("@noble/curves/abstract/modular"),l=o(e("bn.js")),u=e("elliptic"),d=o(e("./share.cjs"));class m{constructor(e,t,s){a.set(this,void 0),n.set(this,void 0),s?(r(this,a,e,"f"),r(this,n,(0,c.Field)(s.curveN),"f"),this.polynomial=i(this,a,"f").map(e=>new l.default(e.toString()))):this.polynomial=e,this.ecCurve=t}getThreshold(){return this.polynomial.length}polyEval(e){const t=new l.default(e,"hex");let s=new l.default(t),a=new l.default(0);a=a.add(this.polynomial[0]);const{n:n}=this.ecCurve;if(!n)throw new Error("Curve is not set");for(const e of this.polynomial.slice(1)){const r=s.mul(e);a=a.add(r),a=a.umod(n),s=s.mul(new l.default(t)),s=s.umod(n)}return a}polyEvalNoble(e){if(!i(this,a,"f")||!i(this,n,"f"))throw new Error("Noble implementation not initialized");if(0===i(this,a,"f").length)return 0n;let t=i(this,a,"f")[0],s=e;for(let r=1;r<i(this,a,"f").length;r++)t=i(this,n,"f").add(t,i(this,n,"f").mul(i(this,a,"f")[r],s)),s=i(this,n,"f").mul(s,e);return t}generateShares(e){const t=e.map(e=>{if("bigint"==typeof e)return new l.default(e.toString());if("number"==typeof e)return new l.default(e);if(e instanceof l.default)return e;if("string"==typeof e)return new l.default(e,"hex");throw new Error("Invalid share index")}),s={};for(const e of t)s[e.toString("hex",64)]=new d.default(e,this.polyEval(e));return s}}a=new WeakMap,n=new WeakMap,s.default=m;s.PolynomialNoble=class extends m{constructor(e,t){super(e,new u.ec("secp256k1"),{curveN:t})}}}}},{package:"@metamask/seedless-onboarding-controller>@metamask/auth-network-utils",file:"node_modules/@metamask/auth-network-utils/dist/polynomial.cjs"}],[1218,{"bn.js":3699},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0});const n=a(e("bn.js"));class r{constructor(e,t){this.share=new n.default(t,"hex"),this.shareIndex=new n.default(e,"hex")}static fromJSON(e){const{share:t,shareIndex:s}=e;return new r(s,t)}toJSON(){return{share:this.share.toString("hex",64),shareIndex:this.shareIndex.toString("hex",64)}}}s.default=r}}},{package:"@metamask/seedless-onboarding-controller>@metamask/auth-network-utils",file:"node_modules/@metamask/auth-network-utils/dist/share.cjs"}],[1219,{immer:4327},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.deriveStateFromMetadata=s.getPersistentState=s.getAnonymizedState=s.BaseController=s.isBaseController=void 0;const i=e("immer");(0,i.enablePatches)(),s.isBaseController=function(e){return"object"==typeof e&&null!==e&&"name"in e&&"string"==typeof e.name&&"state"in e&&"object"==typeof e.state&&"metadata"in e&&"object"==typeof e.metadata};function o(e,t,s,a){return Object.keys(e).reduce((n,r)=>{try{const a=t[r];if(!a)throw new Error(`No metadata found for '${String(r)}'`);const i=a[s],o=e[r];return"function"==typeof i?n[r]=i(o):i&&(n[r]=o),n}catch(e){if(a)try{a(e instanceof Error?e:new Error(String(e)))}catch(t){console.error(new Error("Error thrown when calling 'captureException'"),t),console.error(e)}else console.error(e);return n}},{})}s.BaseController=class{constructor({messenger:e,metadata:t,name:s,state:r}){a.set(this,void 0),this.messagingSystem=e,this.name=s,n(this,a,(0,i.freeze)(r,!0),"f"),this.metadata=t,this.messagingSystem.registerActionHandler(`${s}:getState`,()=>this.state),this.messagingSystem.registerInitialEventPayload({eventType:`${s}:stateChange`,getPayload:()=>[this.state,[]]})}get state(){return r(this,a,"f")}set state(e){throw new Error("Controller state cannot be directly mutated; use 'update' method instead.")}update(e){const[t,s,o]=i.produceWithPatches(r(this,a,"f"),e);return s.length>0&&(n(this,a,t,"f"),this.messagingSystem.publish(`${this.name}:stateChange`,t,s)),{nextState:t,patches:s,inversePatches:o}}applyPatches(e){const t=(0,i.applyPatches)(r(this,a,"f"),e);n(this,a,t,"f"),this.messagingSystem.publish(`${this.name}:stateChange`,t,e)}destroy(){this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`)}},a=new WeakMap,s.getAnonymizedState=function(e,t,s){return o(e,t,"anonymous",s)},s.getPersistentState=function(e,t,s){return o(e,t,"persist",s)},s.deriveStateFromMetadata=o}}},{package:"@metamask/base-controller",file:"node_modules/@metamask/base-controller/dist/BaseController.cjs"}],[1220,{"./RestrictedMessenger.cjs":1221},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.Messenger=void 0;const c=e("./RestrictedMessenger.cjs");s.Messenger=class{constructor(){a.set(this,new Map),n.set(this,new Map),r.set(this,new Map),i.set(this,new Map)}registerActionHandler(e,t){if(o(this,a,"f").has(e))throw new Error(`A handler for ${e} has already been registered`);o(this,a,"f").set(e,t)}registerMethodActionHandlers(e,t){for(const s of t){const t=e[s];if("function"==typeof t){const a=`${e.name}:${s}`;this.registerActionHandler(a,t.bind(e))}}}unregisterActionHandler(e){o(this,a,"f").delete(e)}clearActions(){o(this,a,"f").clear()}call(e,...t){const s=o(this,a,"f").get(e);if(!s)throw new Error(`A handler for ${e} has not been registered`);return s(...t)}registerInitialEventPayload({eventType:e,getPayload:t}){o(this,r,"f").set(e,t)}publish(e,...t){const s=o(this,n,"f").get(e);if(s)for(const[e,a]of s.entries())try{if(a){const s=o(this,i,"f").get(e),n=a(...t);n!==s&&(o(this,i,"f").set(e,n),e(n,s))}else e(...t)}catch(e){setTimeout(()=>{throw e})}}subscribe(e,t,s){let a=o(this,n,"f").get(e);a||(a=new Map,o(this,n,"f").set(e,a));const c=t;if(a.set(c,s),s){const t=o(this,r,"f").get(e);if(t){const e=s(...t());o(this,i,"f").set(c,e)}}}unsubscribe(e,t){const s=o(this,n,"f").get(e),a=t;if(!s||!s.has(a))throw new Error(`Subscription not found for event: ${e}`);s.get(a)&&o(this,i,"f").delete(a),s.delete(a)}clearEventSubscriptions(e){o(this,n,"f").delete(e)}clearSubscriptions(){o(this,n,"f").clear()}getRestricted({name:e,allowedActions:t,allowedEvents:s}){return new c.RestrictedMessenger({messenger:this,name:e,allowedActions:t,allowedEvents:s})}},a=new WeakMap,n=new WeakMap,r=new WeakMap,i=new WeakMap}}},{package:"@metamask/base-controller",file:"node_modules/@metamask/base-controller/dist/Messenger.cjs"}],[1221,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},m=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.RestrictedMessenger=void 0;s.RestrictedMessenger=class{constructor({messenger:e,name:t,allowedActions:s,allowedEvents:c}){if(a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),!e)throw new Error("Messenger not provided");d(this,n,e,"f"),d(this,r,t,"f"),d(this,i,s,"f"),d(this,o,c,"f")}registerActionHandler(e,t){if(!m(this,a,"m",u).call(this,e))throw new Error(`Only allowed registering action handlers prefixed by '${m(this,r,"f")}:'`);m(this,n,"f").registerActionHandler(e,t)}registerMethodActionHandlers(e,t){m(this,n,"f").registerMethodActionHandlers(e,t)}unregisterActionHandler(e){if(!m(this,a,"m",u).call(this,e))throw new Error(`Only allowed unregistering action handlers prefixed by '${m(this,r,"f")}:'`);m(this,n,"f").unregisterActionHandler(e)}call(e,...t){if(!m(this,a,"m",l).call(this,e))throw new Error(`Action missing from allow list: ${e}`);return m(this,n,"f").call(e,...t)}registerInitialEventPayload({eventType:e,getPayload:t}){if(!m(this,a,"m",u).call(this,e))throw new Error(`Only allowed publishing events prefixed by '${m(this,r,"f")}:'`);m(this,n,"f").registerInitialEventPayload({eventType:e,getPayload:t})}publish(e,...t){if(!m(this,a,"m",u).call(this,e))throw new Error(`Only allowed publishing events prefixed by '${m(this,r,"f")}:'`);m(this,n,"f").publish(e,...t)}subscribe(e,t,s){if(!m(this,a,"m",c).call(this,e))throw new Error(`Event missing from allow list: ${e}`);return s?m(this,n,"f").subscribe(e,t,s):m(this,n,"f").subscribe(e,t)}unsubscribe(e,t){if(!m(this,a,"m",c).call(this,e))throw new Error(`Event missing from allow list: ${e}`);m(this,n,"f").unsubscribe(e,t)}clearEventSubscriptions(e){if(!m(this,a,"m",u).call(this,e))throw new Error(`Only allowed clearing events prefixed by '${m(this,r,"f")}:'`);m(this,n,"f").clearEventSubscriptions(e)}},n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,a=new WeakSet,c=function(e){const t=m(this,o,"f");return m(this,a,"m",u).call(this,e)||null!==t&&t.includes(e)},l=function(e){const t=m(this,i,"f");return m(this,a,"m",u).call(this,e)||null!==t&&t.includes(e)},u=function(e){return e.startsWith(`${m(this,r,"f")}:`)}}}},{package:"@metamask/base-controller",file:"node_modules/@metamask/base-controller/dist/RestrictedMessenger.cjs"}],[1222,{"./BaseController.cjs":1219,"./Messenger.cjs":1220,"./RestrictedMessenger.cjs":1221},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.RestrictedMessenger=s.Messenger=s.isBaseController=s.getPersistentState=s.getAnonymizedState=s.deriveStateFromMetadata=s.BaseController=void 0;var a=e("./BaseController.cjs");Object.defineProperty(s,"BaseController",{enumerable:!0,get:function(){return a.BaseController}}),Object.defineProperty(s,"deriveStateFromMetadata",{enumerable:!0,get:function(){return a.deriveStateFromMetadata}}),Object.defineProperty(s,"getAnonymizedState",{enumerable:!0,get:function(){return a.getAnonymizedState}}),Object.defineProperty(s,"getPersistentState",{enumerable:!0,get:function(){return a.getPersistentState}}),Object.defineProperty(s,"isBaseController",{enumerable:!0,get:function(){return a.isBaseController}});var n=e("./Messenger.cjs");Object.defineProperty(s,"Messenger",{enumerable:!0,get:function(){return n.Messenger}});var r=e("./RestrictedMessenger.cjs");Object.defineProperty(s,"RestrictedMessenger",{enumerable:!0,get:function(){return r.RestrictedMessenger}})}}},{package:"@metamask/base-controller",file:"node_modules/@metamask/base-controller/dist/index.cjs"}],[1223,{"./constants/bridge.cjs":1224,"./constants/chains.cjs":1225,"./constants/traces.cjs":1228,"./selectors.cjs":1230,"./types.cjs":1231,"./utils/assets.cjs":1232,"./utils/balance.cjs":1233,"./utils/bridge.cjs":1234,"./utils/caip-formatters.cjs":1235,"./utils/feature-flags.cjs":1236,"./utils/fetch.cjs":1237,"./utils/metrics/constants.cjs":1238,"./utils/metrics/properties.cjs":1239,"./utils/quote.cjs":1240,"./utils/snaps.cjs":1242,"./utils/validators.cjs":1243,"@ethersproject/contracts":654,"@ethersproject/providers":692,"@metamask/metamask-eth-abis":2064,"@metamask/polling-controller":2280,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g,f,y,w,b,k,S,A,T,v,E,C,I,_=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},P=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.BridgeController=void 0;const R=e("@ethersproject/contracts"),x=e("@ethersproject/providers"),N=e("@metamask/metamask-eth-abis"),M=e("@metamask/polling-controller"),D=e("@metamask/utils"),O=e("./constants/bridge.cjs"),j=e("./constants/chains.cjs"),B=e("./constants/traces.cjs"),L=e("./selectors.cjs"),F=e("./types.cjs"),$=e("./utils/assets.cjs"),U=e("./utils/balance.cjs"),G=e("./utils/bridge.cjs"),W=e("./utils/caip-formatters.cjs"),H=e("./utils/feature-flags.cjs"),q=e("./utils/fetch.cjs"),Y=e("./utils/metrics/constants.cjs"),V=e("./utils/metrics/properties.cjs"),K=e("./utils/quote.cjs"),J=e("./utils/snaps.cjs"),z=e("./utils/validators.cjs"),Q={quoteRequest:{includeInStateLogs:!0,persist:!1,anonymous:!1,usedInUi:!0},quotes:{includeInStateLogs:!0,persist:!1,anonymous:!1,usedInUi:!0},quotesInitialLoadTime:{includeInStateLogs:!0,persist:!1,anonymous:!1,usedInUi:!0},quotesLastFetched:{includeInStateLogs:!0,persist:!1,anonymous:!1,usedInUi:!0},quotesLoadingStatus:{includeInStateLogs:!0,persist:!1,anonymous:!1,usedInUi:!0},quoteFetchError:{includeInStateLogs:!0,persist:!1,anonymous:!1,usedInUi:!0},quotesRefreshCount:{includeInStateLogs:!0,persist:!1,anonymous:!1,usedInUi:!0},assetExchangeRates:{includeInStateLogs:!0,persist:!1,anonymous:!1,usedInUi:!0},minimumBalanceForRentExemptionInLamports:{includeInStateLogs:!0,persist:!1,anonymous:!1,usedInUi:!0}};class X extends((0,M.StaticIntervalPollingController)()){constructor({messenger:e,state:t,clientId:s,getLayer1GasFee:M,fetchFn:X,config:Z,trackMetaMetricsFn:ee,traceFn:te}){super({name:O.BRIDGE_CONTROLLER_NAME,metadata:Q,messenger:e,state:{...(0,G.getDefaultBridgeControllerState)(),...t}}),a.add(this),n.set(this,void 0),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),l.set(this,void 0),u.set(this,void 0),d.set(this,void 0),this._executePoll=async e=>{await P(this,f,"f").call(this,e)},this.updateBridgeQuoteRequestParams=async(e,t)=>{this.stopAllPolling(),P(this,n,"f")?.abort(Y.AbortReason.QuoteRequestUpdated),P(this,I,"f").call(this,e);const s={...O.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteRequest,...e};if(this.update(e=>{e.quoteRequest=s,e.quotes=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quotes,e.quotesLastFetched=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesLastFetched,e.quotesLoadingStatus=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesLoadingStatus,e.quoteFetchError=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteFetchError,e.quotesRefreshCount=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesRefreshCount,e.quotesInitialLoadTime=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesInitialLoadTime,s.srcChainId&&!(0,G.isSolanaChainId)(s.srcChainId)&&(e.minimumBalanceForRentExemptionInLamports=O.DEFAULT_BRIDGE_CONTROLLER_STATE.minimumBalanceForRentExemptionInLamports)}),await P(this,p,"f").call(this,s).catch(e=>console.warn("Failed to fetch asset exchange rates",e)),(0,K.isValidQuoteRequest)(s)){_(this,r,Date.now(),"f");const n=P(this,a,"m",A).call(this)?.configuration;let i;i=(0,G.isNonEvmChainId)(s.srcChainId)?e.insufficientBal:!!n?.rpcUrl?.includes("tenderly")||(e.insufficientBal??!await P(this,g,"f").call(this,s));const o=P(this,a,"m",S).call(this);this.setChainIntervalLength(),this.startPolling({networkClientId:o,updatedQuoteRequest:{...s,insufficientBal:i},context:t})}},this.fetchQuotes=async(e,t=null,s=null)=>{const a=(0,H.getBridgeFeatureFlags)(this.messagingSystem),n=s?a.quoteRequestOverrides?.[s]:undefined,{quotes:r,validationFailures:o}=await(0,q.fetchBridgeQuotes)(n?{...e,...n}:e,t,P(this,i,"f"),P(this,c,"f"),P(this,d,"f").customBridgeApiBaseUrl??O.BRIDGE_PROD_API_BASE_URL,s);P(this,m,"f").call(this,o);const l=await P(this,y,"f").call(this,r),u=await P(this,b,"f").call(this,r,e.walletAddress),h=l??u??r;return s===z.FeatureId.PERPS?h.sort((e,t)=>e.estimatedProcessingTimeInSeconds-t.estimatedProcessingTimeInSeconds):h},m.set(this,e=>{0!==e.length&&this.trackUnifiedSwapBridgeEvent(Y.UnifiedSwapBridgeEventName.QuotesValidationFailed,{failures:e})}),h.set(this,()=>({...this.messagingSystem.call("MultichainAssetsRatesController:getState"),...this.messagingSystem.call("CurrencyRateController:getState"),...this.messagingSystem.call("TokenRatesController:getState"),...this.state})),p.set(this,async({srcChainId:e,srcTokenAddress:t,destChainId:s,destTokenAddress:a})=>{const n=new Set([]),r=P(this,h,"f").call(this);t&&e&&!(0,L.selectIsAssetExchangeRateInState)(r,e,t)&&(0,$.getAssetIdsForToken)(t,e).forEach(e=>n.add(e)),a&&s&&!(0,L.selectIsAssetExchangeRateInState)(r,s,a)&&(0,$.getAssetIdsForToken)(a,s).forEach(e=>n.add(e));const o=this.messagingSystem.call("CurrencyRateController:getState").currentCurrency;if(0===n.size)return;const l=await(0,q.fetchAssetPrices)({assetIds:n,currencies:new Set([o]),clientId:P(this,i,"f"),fetchFn:P(this,c,"f")}),u=(0,$.toExchangeRates)(o,l);this.update(e=>{e.assetExchangeRates={...e.assetExchangeRates,...u}})}),g.set(this,async e=>{if((0,G.isNonEvmChainId)(e.srcChainId))return!0;const t=(0,W.formatChainIdToHex)(e.srcChainId),s=P(this,a,"m",A).call(this)?.provider,n=(0,W.formatAddressToCaipReference)(e.srcTokenAddress);return s&&n&&e.srcTokenAmount&&t&&await(0,U.hasSufficientBalance)(s,e.walletAddress,n,e.srcTokenAmount,t)}),this.stopPollingForQuotes=e=>{this.stopAllPolling(),P(this,n,"f")?.abort(e)},this.resetState=()=>{this.stopPollingForQuotes(Y.AbortReason.ResetState),this.update(e=>{e.quoteRequest=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteRequest,e.quotesInitialLoadTime=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesInitialLoadTime,e.quotes=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quotes,e.quotesLastFetched=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesLastFetched,e.quotesLoadingStatus=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesLoadingStatus,e.quoteFetchError=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteFetchError,e.quotesRefreshCount=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesRefreshCount,e.assetExchangeRates=O.DEFAULT_BRIDGE_CONTROLLER_STATE.assetExchangeRates,e.minimumBalanceForRentExemptionInLamports=O.DEFAULT_BRIDGE_CONTROLLER_STATE.minimumBalanceForRentExemptionInLamports})},this.setChainIntervalLength=()=>{const{state:e}=this,{srcChainId:t}=e.quoteRequest,s=(0,H.getBridgeFeatureFlags)(this.messagingSystem),a=t?s.chains[(0,W.formatChainIdToCaip)(t)]?.refreshRate:undefined,n=s.refreshRate;this.setIntervalLength(a??n)},f.set(this,async({networkClientId:e,updatedQuoteRequest:t,context:s})=>{P(this,n,"f")?.abort("New quote request"),_(this,n,new AbortController,"f"),this.trackUnifiedSwapBridgeEvent(Y.UnifiedSwapBridgeEventName.QuotesRequested,s),this.update(e=>{e.quotesLoadingStatus=F.RequestStatus.LOADING,e.quoteRequest=t,e.quoteFetchError=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteFetchError});try{await P(this,u,"f").call(this,{name:(0,G.isCrossChain)(t.srcChainId,t.destChainId)?B.TraceName.BridgeQuotesFetched:B.TraceName.SwapQuotesFetched,data:{srcChainId:(0,W.formatChainIdToCaip)(t.srcChainId),destChainId:(0,W.formatChainIdToCaip)(t.destChainId)}},async()=>{P(this,w,"f").call(this,t.srcChainId);const e=await this.fetchQuotes(t,P(this,n,"f").signal);this.update(t=>{t.quotes=e,t.quotesLoadingStatus=F.RequestStatus.FETCHED})})}catch(e){if("AbortError"===e.name||[Y.AbortReason.ResetState,Y.AbortReason.NewQuoteRequest,Y.AbortReason.QuoteRequestUpdated].includes(e))return;this.update(t=>{t.quoteFetchError=e instanceof Error?e.message:e?.toString()??null,t.quotesLoadingStatus=F.RequestStatus.ERROR,t.quotes=O.DEFAULT_BRIDGE_CONTROLLER_STATE.quotes}),this.trackUnifiedSwapBridgeEvent(Y.UnifiedSwapBridgeEventName.QuotesError,s),console.log("Failed to fetch bridge quotes",e)}const a=(0,H.getBridgeFeatureFlags)(this.messagingSystem),{maxRefreshCount:i}=a;(t.insufficientBal||!t.insufficientBal&&this.state.quotesRefreshCount>=i)&&this.stopAllPolling();const o=Date.now();this.update(e=>{e.quotesInitialLoadTime=0===e.quotesRefreshCount&&P(this,r,"f")?o-P(this,r,"f"):this.state.quotesInitialLoadTime,e.quotesLastFetched=o,e.quotesRefreshCount+=1})}),y.set(this,async e=>{if(e.some(({quote:e})=>{const t=(0,W.formatChainIdToCaip)(e.srcChainId);return![j.CHAIN_IDS.OPTIMISM,j.CHAIN_IDS.BASE].map(W.formatChainIdToCaip).includes(t)}))return undefined;const t=Promise.allSettled(e.map(async e=>{const{quote:t,trade:s,approval:a}=e,n=(0,D.numberToHex)(t.srcChainId),r=e=>({from:e.from,to:e.to,value:e.value,data:e.data,gasLimit:e.gasLimit?.toString()}),i=a?await P(this,o,"f").call(this,{transactionParams:r(a),chainId:n}):"0x0",c=await P(this,o,"f").call(this,{transactionParams:r(s),chainId:n});return i===undefined||c===undefined?undefined:{...e,l1GasFeesInHexWei:(0,G.sumHexes)(i,c)}}));return(await t).reduce((e,t)=>("fulfilled"===t.status&&t.value?e.push(t.value):"rejected"===t.status&&console.error("Error calculating L1 gas fees for quote",t.reason),e),[])}),w.set(this,e=>{const t=P(this,a,"m",k).call(this);return(0,G.isSolanaChainId)(e)&&t?.metadata?.snap?.id?this.messagingSystem.call("SnapController:handleRequest",(0,J.getMinimumBalanceForRentExemptionRequest)(t.metadata.snap?.id)).then(e=>{this.update(t=>{t.minimumBalanceForRentExemptionInLamports=String(e)})}).catch(e=>{console.error("Error setting minimum balance for rent exemption",e),this.update(e=>{e.minimumBalanceForRentExemptionInLamports=O.DEFAULT_BRIDGE_CONTROLLER_STATE.minimumBalanceForRentExemptionInLamports})}):undefined}),b.set(this,async(e,t)=>{if(e.some(({quote:{srcChainId:e}})=>!(0,G.isNonEvmChainId)(e)))return undefined;const s=P(this,a,"m",k).call(this,t),n=Promise.allSettled(e.map(async e=>{const{trade:t,quote:a}=e;if(s?.metadata?.snap?.id&&"string"==typeof t){const n=(0,W.formatChainIdToCaip)(a.srcChainId),r=await this.messagingSystem.call("SnapController:handleRequest",(0,J.computeFeeRequest)(s.metadata.snap?.id,t,s.id,n)),i=r?.find(e=>"base"===e.type),o=i?.asset?.amount||"0";return{...e,nonEvmFeesInNative:o}}return e}));return(await n).reduce((e,t)=>("fulfilled"===t.status&&t.value?e.push(t.value):"rejected"===t.status&&console.error("Error calculating non-EVM fees for quote",t.reason),e),[])}),T.set(this,()=>{const e=(0,W.formatChainIdToCaip)(this.state.quoteRequest.srcChainId||P(this,a,"m",A).call(this).configuration.chainId);return(0,V.getRequestParams)(this.state.quoteRequest,e)}),v.set(this,()=>({slippage_limit:this.state.quoteRequest.slippage,swap_type:(0,V.getSwapTypeFromQuote)(this.state.quoteRequest),custom_slippage:(0,V.isCustomSlippage)(this.state.quoteRequest.slippage)})),E.set(this,()=>({quotes_count:this.state.quotes.length,quotes_list:this.state.quotes.map(({quote:e})=>(0,V.formatProviderLabel)(e)),initial_load_time_all_quotes:this.state.quotesInitialLoadTime??0})),C.set(this,(e,t)=>{const s={...t,action_type:Y.MetricsActionType.SWAPBRIDGE_V1};switch(e){case Y.UnifiedSwapBridgeEventName.ButtonClicked:case Y.UnifiedSwapBridgeEventName.PageViewed:return{...P(this,T,"f").call(this),...s};case Y.UnifiedSwapBridgeEventName.QuotesValidationFailed:return{...P(this,T,"f").call(this),refresh_count:this.state.quotesRefreshCount,...s};case Y.UnifiedSwapBridgeEventName.QuotesReceived:return{...P(this,T,"f").call(this),...P(this,v,"f").call(this),...P(this,E,"f").call(this),is_hardware_wallet:(0,V.isHardwareWallet)(P(this,a,"m",k).call(this)),refresh_count:this.state.quotesRefreshCount,...s};case Y.UnifiedSwapBridgeEventName.QuotesRequested:return{...P(this,T,"f").call(this),...P(this,v,"f").call(this),is_hardware_wallet:(0,V.isHardwareWallet)(P(this,a,"m",k).call(this)),has_sufficient_funds:!this.state.quoteRequest.insufficientBal,...s};case Y.UnifiedSwapBridgeEventName.QuotesError:return{...P(this,T,"f").call(this),...P(this,v,"f").call(this),is_hardware_wallet:(0,V.isHardwareWallet)(P(this,a,"m",k).call(this)),error_message:this.state.quoteFetchError,has_sufficient_funds:!this.state.quoteRequest.insufficientBal,...s};case Y.UnifiedSwapBridgeEventName.AllQuotesOpened:case Y.UnifiedSwapBridgeEventName.AllQuotesSorted:case Y.UnifiedSwapBridgeEventName.QuoteSelected:return{...P(this,T,"f").call(this),...P(this,v,"f").call(this),...P(this,E,"f").call(this),is_hardware_wallet:(0,V.isHardwareWallet)(P(this,a,"m",k).call(this)),...s};case Y.UnifiedSwapBridgeEventName.Failed:return{...s,...P(this,T,"f").call(this),...P(this,v,"f").call(this),...P(this,E,"f").call(this),...t};case Y.UnifiedSwapBridgeEventName.AssetDetailTooltipClicked:return s;case Y.UnifiedSwapBridgeEventName.Submitted:case Y.UnifiedSwapBridgeEventName.Completed:return t;case Y.UnifiedSwapBridgeEventName.InputChanged:default:return s}}),I.set(this,e=>{Object.entries(e).forEach(([t,s])=>{const a=V.toInputChangedPropertyKey[t],n=V.toInputChangedPropertyValue[t]?.(e);a&&n!==undefined&&s!==this.state.quoteRequest[t]&&this.trackUnifiedSwapBridgeEvent(Y.UnifiedSwapBridgeEventName.InputChanged,{input:a,input_value:n})})}),this.trackUnifiedSwapBridgeEvent=(e,t)=>{try{const s=P(this,C,"f").call(this,e,t);P(this,l,"f").call(this,e,s)}catch(e){console.error("Error tracking cross-chain swaps MetaMetrics event",e)}},this.getBridgeERC20Allowance=async(e,t)=>{const s=P(this,a,"m",A).call(this)?.provider;if(!s)throw new Error("No provider found");const n=new x.Web3Provider(s),r=new R.Contract(e,N.abiERC20,n);return(await r.allowance(this.state.quoteRequest.walletAddress,O.METABRIDGE_CHAIN_TO_ADDRESS_MAP[t])).toString()},this.setIntervalLength(O.REFRESH_INTERVAL_MS),_(this,n,new AbortController,"f"),_(this,o,M,"f"),_(this,i,s,"f"),_(this,c,X,"f"),_(this,l,ee,"f"),_(this,d,Z??{},"f"),_(this,u,te??((e,t)=>t?.()),"f"),this.messagingSystem.registerActionHandler(`${O.BRIDGE_CONTROLLER_NAME}:setChainIntervalLength`,this.setChainIntervalLength.bind(this)),this.messagingSystem.registerActionHandler(`${O.BRIDGE_CONTROLLER_NAME}:updateBridgeQuoteRequestParams`,this.updateBridgeQuoteRequestParams.bind(this)),this.messagingSystem.registerActionHandler(`${O.BRIDGE_CONTROLLER_NAME}:resetState`,this.resetState.bind(this)),this.messagingSystem.registerActionHandler(`${O.BRIDGE_CONTROLLER_NAME}:getBridgeERC20Allowance`,this.getBridgeERC20Allowance.bind(this)),this.messagingSystem.registerActionHandler(`${O.BRIDGE_CONTROLLER_NAME}:trackUnifiedSwapBridgeEvent`,this.trackUnifiedSwapBridgeEvent.bind(this)),this.messagingSystem.registerActionHandler(`${O.BRIDGE_CONTROLLER_NAME}:stopPollingForQuotes`,this.stopPollingForQuotes.bind(this)),this.messagingSystem.registerActionHandler(`${O.BRIDGE_CONTROLLER_NAME}:fetchQuotes`,this.fetchQuotes.bind(this))}}s.BridgeController=X,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,l=new WeakMap,u=new WeakMap,d=new WeakMap,m=new WeakMap,h=new WeakMap,p=new WeakMap,g=new WeakMap,f=new WeakMap,y=new WeakMap,w=new WeakMap,b=new WeakMap,T=new WeakMap,v=new WeakMap,E=new WeakMap,C=new WeakMap,I=new WeakMap,a=new WeakSet,k=function(e){const t=e??this.state.quoteRequest.walletAddress;if(!t)throw new Error("Account address is required");const s=this.messagingSystem.call("AccountsController:getAccountByAddress",t);if(!s)throw new Error("Account not found");return s},S=function(){const{selectedNetworkClientId:e}=this.messagingSystem.call("NetworkController:getState");return e},A=function(){const e=P(this,a,"m",S).call(this);return this.messagingSystem.call("NetworkController:getNetworkClientById",e)}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/bridge-controller.cjs"}],[1224,{"./chains.cjs":1225,"@ethersproject/constants":651,"@metamask/keyring-api":1994},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.METABRIDGE_CHAIN_TO_ADDRESS_MAP=s.DEFAULT_BRIDGE_CONTROLLER_STATE=s.DEFAULT_FEATURE_FLAG_CONFIG=s.BRIDGE_CONTROLLER_NAME=s.DEFAULT_MAX_REFRESH_COUNT=s.REFRESH_INTERVAL_MS=s.BRIDGE_MM_FEE_RATE=s.BRIDGE_PREFERRED_GAS_ESTIMATE=s.BRIDGE_QUOTE_MAX_RETURN_DIFFERENCE_PERCENTAGE=s.BRIDGE_QUOTE_MAX_ETA_SECONDS=s.METABRIDGE_ETHEREUM_ADDRESS=s.ETH_USDT_ADDRESS=s.BridgeClientId=s.BRIDGE_PROD_API_BASE_URL=s.BRIDGE_DEV_API_BASE_URL=s.ALLOWED_BRIDGE_CHAIN_IDS=void 0;const a=e("@ethersproject/constants"),n=e("@metamask/keyring-api"),r=e("./chains.cjs");var i;s.ALLOWED_BRIDGE_CHAIN_IDS=[r.CHAIN_IDS.MAINNET,r.CHAIN_IDS.BSC,r.CHAIN_IDS.POLYGON,r.CHAIN_IDS.ZKSYNC_ERA,r.CHAIN_IDS.AVALANCHE,r.CHAIN_IDS.OPTIMISM,r.CHAIN_IDS.ARBITRUM,r.CHAIN_IDS.LINEA_MAINNET,r.CHAIN_IDS.BASE,r.CHAIN_IDS.SEI,n.SolScope.Mainnet,n.BtcScope.Mainnet],s.BRIDGE_DEV_API_BASE_URL="https://bridge.dev-api.cx.metamask.io",s.BRIDGE_PROD_API_BASE_URL="https://bridge.api.cx.metamask.io",function(e){e.EXTENSION="extension",e.MOBILE="mobile"}(i||(s.BridgeClientId=i={})),s.ETH_USDT_ADDRESS="0xdac17f958d2ee523a2206206994597c13d831ec7",s.METABRIDGE_ETHEREUM_ADDRESS="0x0439e60F02a8900a951603950d8D4527f400C3f1",s.BRIDGE_QUOTE_MAX_ETA_SECONDS=3600,s.BRIDGE_QUOTE_MAX_RETURN_DIFFERENCE_PERCENTAGE=.5,s.BRIDGE_PREFERRED_GAS_ESTIMATE="medium",s.BRIDGE_MM_FEE_RATE=.875,s.REFRESH_INTERVAL_MS=3e4,s.DEFAULT_MAX_REFRESH_COUNT=5,s.BRIDGE_CONTROLLER_NAME="BridgeController",s.DEFAULT_FEATURE_FLAG_CONFIG={minimumVersion:"0.0.0",refreshRate:s.REFRESH_INTERVAL_MS,maxRefreshCount:s.DEFAULT_MAX_REFRESH_COUNT,support:!1,chains:{}},s.DEFAULT_BRIDGE_CONTROLLER_STATE={quoteRequest:{srcTokenAddress:a.AddressZero},quotesInitialLoadTime:null,quotes:[],quotesLastFetched:null,quotesLoadingStatus:null,quoteFetchError:null,quotesRefreshCount:0,assetExchangeRates:{},minimumBalanceForRentExemptionInLamports:"0"},s.METABRIDGE_CHAIN_TO_ADDRESS_MAP={[r.CHAIN_IDS.MAINNET]:s.METABRIDGE_ETHEREUM_ADDRESS}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/constants/bridge.cjs"}],[1225,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.NETWORK_TO_NAME_MAP=s.SEI_DISPLAY_NAME=s.MODE_DISPLAY_NAME=s.MODE_SEPOLIA_DISPLAY_NAME=s.SONEIUM_DISPLAY_NAME=s.INK_DISPLAY_NAME=s.INK_SEPOLIA_DISPLAY_NAME=s.LISK_SEPOLIA_DISPLAY_NAME=s.LISK_DISPLAY_NAME=s.METACHAIN_ONE_DISPLAY_NAME=s.BERACHAIN_DISPLAY_NAME=s.OP_BNB_DISPLAY_NAME=s.SCROLL_SEPOLIA_DISPLAY_NAME=s.SCROLL_DISPLAY_NAME=s.MOONRIVER_DISPLAY_NAME=s.MOONBEAM_DISPLAY_NAME=s.POLYGON_ZKEVM_DISPLAY_NAME=s.CRONOS_DISPLAY_NAME=s.AURORA_DISPLAY_NAME=s.BASE_DISPLAY_NAME=s.ZK_SYNC_ERA_DISPLAY_NAME=s.GNOSIS_DISPLAY_NAME=s.CELO_DISPLAY_NAME=s.PALM_DISPLAY_NAME=s.HARMONY_DISPLAY_NAME=s.FANTOM_DISPLAY_NAME=s.OPTIMISM_DISPLAY_NAME=s.BNB_DISPLAY_NAME=s.ARBITRUM_DISPLAY_NAME=s.AVALANCHE_DISPLAY_NAME=s.POLYGON_DISPLAY_NAME=s.BSC_DISPLAY_NAME=s.LOCALHOST_DISPLAY_NAME=s.LINEA_MAINNET_DISPLAY_NAME=s.LINEA_SEPOLIA_DISPLAY_NAME=s.LINEA_GOERLI_DISPLAY_NAME=s.SEPOLIA_DISPLAY_NAME=s.GOERLI_DISPLAY_NAME=s.MAINNET_DISPLAY_NAME=s.NETWORK_TYPES=s.CHAIN_IDS=void 0,s.CHAIN_IDS={MAINNET:"0x1",GOERLI:"0x5",LOCALHOST:"0x539",BSC:"0x38",BSC_TESTNET:"0x61",OPTIMISM:"0xa",OPTIMISM_TESTNET:"0xaa37dc",OPTIMISM_GOERLI:"0x1a4",BASE:"0x2105",BASE_TESTNET:"0x14a33",OPBNB:"0xcc",OPBNB_TESTNET:"0x15eb",POLYGON:"0x89",POLYGON_TESTNET:"0x13881",AVALANCHE:"0xa86a",AVALANCHE_TESTNET:"0xa869",FANTOM:"0xfa",FANTOM_TESTNET:"0xfa2",CELO:"0xa4ec",ARBITRUM:"0xa4b1",HARMONY:"0x63564c40",PALM:"0x2a15c308d",SEPOLIA:"0xaa36a7",HOLESKY:"0x4268",LINEA_GOERLI:"0xe704",LINEA_SEPOLIA:"0xe705",AMOY:"0x13882",BASE_SEPOLIA:"0x14a34",BLAST_SEPOLIA:"0xa0c71fd",OPTIMISM_SEPOLIA:"0xaa37dc",PALM_TESTNET:"0x2a15c3083",CELO_TESTNET:"0xaef3",ZK_SYNC_ERA_TESTNET:"0x12c",MANTA_SEPOLIA:"0x138b",UNICHAIN_SEPOLIA:"0x515",LINEA_MAINNET:"0xe708",AURORA:"0x4e454152",MOONBEAM:"0x504",MOONBEAM_TESTNET:"0x507",MOONRIVER:"0x505",CRONOS:"0x19",GNOSIS:"0x64",ZKSYNC_ERA:"0x144",TEST_ETH:"0x539",ARBITRUM_GOERLI:"0x66eed",BLAST:"0x13e31",FILECOIN:"0x13a",POLYGON_ZKEVM:"0x44d",SCROLL:"0x82750",SCROLL_SEPOLIA:"0x8274f",WETHIO:"0x4e",CHZ:"0x15b38",NUMBERS:"0x290b",SEI:"0x531",APE_TESTNET:"0x8157",APE_MAINNET:"0x8173",BERACHAIN:"0x138d5",METACHAIN_ONE:"0x1b6e6",ARBITRUM_SEPOLIA:"0x66eee",NEAR:"0x18d",NEAR_TESTNET:"0x18e",B3:"0x208d",B3_TESTNET:"0x7c9",GRAVITY_ALPHA_MAINNET:"0x659",GRAVITY_ALPHA_TESTNET_SEPOLIA:"0x34c1",LISK:"0x46f",LISK_SEPOLIA:"0x106a",INK_SEPOLIA:"0xba5eD",INK:"0xdef1",MODE_SEPOLIA:"0x397",MODE:"0x868b"},s.NETWORK_TYPES={GOERLI:"goerli",LOCALHOST:"localhost",MAINNET:"mainnet",SEPOLIA:"sepolia",LINEA_GOERLI:"linea-goerli",LINEA_SEPOLIA:"linea-sepolia",LINEA_MAINNET:"linea-mainnet"},s.MAINNET_DISPLAY_NAME="Ethereum Mainnet",s.GOERLI_DISPLAY_NAME="Goerli",s.SEPOLIA_DISPLAY_NAME="Sepolia",s.LINEA_GOERLI_DISPLAY_NAME="Linea Goerli",s.LINEA_SEPOLIA_DISPLAY_NAME="Linea Sepolia",s.LINEA_MAINNET_DISPLAY_NAME="Linea Mainnet",s.LOCALHOST_DISPLAY_NAME="Localhost 8545",s.BSC_DISPLAY_NAME="Binance Smart Chain",s.POLYGON_DISPLAY_NAME="Polygon",s.AVALANCHE_DISPLAY_NAME="Avalanche Network C-Chain",s.ARBITRUM_DISPLAY_NAME="Arbitrum One",s.BNB_DISPLAY_NAME="BNB Chain",s.OPTIMISM_DISPLAY_NAME="OP Mainnet",s.FANTOM_DISPLAY_NAME="Fantom Opera",s.HARMONY_DISPLAY_NAME="Harmony Mainnet Shard 0",s.PALM_DISPLAY_NAME="Palm",s.CELO_DISPLAY_NAME="Celo Mainnet",s.GNOSIS_DISPLAY_NAME="Gnosis",s.ZK_SYNC_ERA_DISPLAY_NAME="zkSync Era Mainnet",s.BASE_DISPLAY_NAME="Base Mainnet",s.AURORA_DISPLAY_NAME="Aurora Mainnet",s.CRONOS_DISPLAY_NAME="Cronos",s.POLYGON_ZKEVM_DISPLAY_NAME="Polygon zkEVM",s.MOONBEAM_DISPLAY_NAME="Moonbeam",s.MOONRIVER_DISPLAY_NAME="Moonriver",s.SCROLL_DISPLAY_NAME="Scroll",s.SCROLL_SEPOLIA_DISPLAY_NAME="Scroll Sepolia",s.OP_BNB_DISPLAY_NAME="opBNB",s.BERACHAIN_DISPLAY_NAME="Berachain Artio",s.METACHAIN_ONE_DISPLAY_NAME="Metachain One Mainnet",s.LISK_DISPLAY_NAME="Lisk",s.LISK_SEPOLIA_DISPLAY_NAME="Lisk Sepolia",s.INK_SEPOLIA_DISPLAY_NAME="Ink Sepolia",s.INK_DISPLAY_NAME="Ink Mainnet",s.SONEIUM_DISPLAY_NAME="Soneium Mainnet",s.MODE_SEPOLIA_DISPLAY_NAME="Mode Sepolia",s.MODE_DISPLAY_NAME="Mode Mainnet",s.SEI_DISPLAY_NAME="Sei Network",s.NETWORK_TO_NAME_MAP={[s.NETWORK_TYPES.GOERLI]:s.GOERLI_DISPLAY_NAME,[s.NETWORK_TYPES.MAINNET]:s.MAINNET_DISPLAY_NAME,[s.NETWORK_TYPES.LINEA_GOERLI]:s.LINEA_GOERLI_DISPLAY_NAME,[s.NETWORK_TYPES.LINEA_SEPOLIA]:s.LINEA_SEPOLIA_DISPLAY_NAME,[s.NETWORK_TYPES.LINEA_MAINNET]:s.LINEA_MAINNET_DISPLAY_NAME,[s.NETWORK_TYPES.LOCALHOST]:s.LOCALHOST_DISPLAY_NAME,[s.NETWORK_TYPES.SEPOLIA]:s.SEPOLIA_DISPLAY_NAME,[s.CHAIN_IDS.ARBITRUM]:s.ARBITRUM_DISPLAY_NAME,[s.CHAIN_IDS.AVALANCHE]:s.AVALANCHE_DISPLAY_NAME,[s.CHAIN_IDS.BSC]:s.BSC_DISPLAY_NAME,[s.CHAIN_IDS.BASE]:s.BASE_DISPLAY_NAME,[s.CHAIN_IDS.GOERLI]:s.GOERLI_DISPLAY_NAME,[s.CHAIN_IDS.MAINNET]:s.MAINNET_DISPLAY_NAME,[s.CHAIN_IDS.LINEA_GOERLI]:s.LINEA_GOERLI_DISPLAY_NAME,[s.CHAIN_IDS.LINEA_MAINNET]:s.LINEA_MAINNET_DISPLAY_NAME,[s.CHAIN_IDS.LINEA_SEPOLIA]:s.LINEA_SEPOLIA_DISPLAY_NAME,[s.CHAIN_IDS.LOCALHOST]:s.LOCALHOST_DISPLAY_NAME,[s.CHAIN_IDS.OPTIMISM]:s.OPTIMISM_DISPLAY_NAME,[s.CHAIN_IDS.POLYGON]:s.POLYGON_DISPLAY_NAME,[s.CHAIN_IDS.SCROLL]:s.SCROLL_DISPLAY_NAME,[s.CHAIN_IDS.SCROLL_SEPOLIA]:s.SCROLL_SEPOLIA_DISPLAY_NAME,[s.CHAIN_IDS.SEPOLIA]:s.SEPOLIA_DISPLAY_NAME,[s.CHAIN_IDS.OPBNB]:s.OP_BNB_DISPLAY_NAME,[s.CHAIN_IDS.ZKSYNC_ERA]:s.ZK_SYNC_ERA_DISPLAY_NAME,[s.CHAIN_IDS.BERACHAIN]:s.BERACHAIN_DISPLAY_NAME,[s.CHAIN_IDS.METACHAIN_ONE]:s.METACHAIN_ONE_DISPLAY_NAME,[s.CHAIN_IDS.LISK]:s.LISK_DISPLAY_NAME,[s.CHAIN_IDS.LISK_SEPOLIA]:s.LISK_SEPOLIA_DISPLAY_NAME,[s.CHAIN_IDS.SEI]:s.SEI_DISPLAY_NAME}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/constants/chains.cjs"}],[1226,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.SWAPS_API_V2_BASE_URL=void 0,s.SWAPS_API_V2_BASE_URL="https://swap.api.cx.metamask.io"}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/constants/swaps.cjs"}],[1227,{"./chains.cjs":1225,"@metamask/keyring-api":1994},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.SYMBOL_TO_SLIP44_MAP=s.SWAPS_CHAINID_DEFAULT_TOKEN_MAP=void 0;const a=e("@metamask/keyring-api"),n=e("./chains.cjs"),r="0x0000000000000000000000000000000000000000",i="ETH",o="SOL",c="SEI",l="BTC",u={symbol:i,name:"Ether",address:r,decimals:18,iconUrl:""},d={symbol:"BNB",name:"Binance Coin",address:r,decimals:18,iconUrl:""},m={symbol:"POL",name:"Polygon",address:r,decimals:18,iconUrl:""},h={symbol:"AVAX",name:"Avalanche",address:r,decimals:18,iconUrl:""},p={symbol:"TESTETH",name:"Test Ether",address:r,decimals:18,iconUrl:""},g={symbol:i,name:"Ether",address:r,decimals:18,iconUrl:""},f={symbol:i,name:"Ether",address:r,decimals:18,iconUrl:""},y={...u},w={...u},b={...u},k={...u},S={...u},A={symbol:o,name:"Solana",address:r,decimals:9,iconUrl:""},T={symbol:l,name:"Bitcoin",address:r,decimals:8,iconUrl:""},v={symbol:c,name:"Sei",address:r,decimals:18,iconUrl:""},E="0x539";s.SWAPS_CHAINID_DEFAULT_TOKEN_MAP={[n.CHAIN_IDS.MAINNET]:u,[E]:p,[n.CHAIN_IDS.BSC]:d,[n.CHAIN_IDS.POLYGON]:m,[n.CHAIN_IDS.GOERLI]:g,[n.CHAIN_IDS.SEPOLIA]:f,[n.CHAIN_IDS.AVALANCHE]:h,[n.CHAIN_IDS.OPTIMISM]:w,[n.CHAIN_IDS.ARBITRUM]:y,[n.CHAIN_IDS.ZKSYNC_ERA]:b,[n.CHAIN_IDS.LINEA_MAINNET]:k,[n.CHAIN_IDS.BASE]:S,[n.CHAIN_IDS.SEI]:v,[a.SolScope.Mainnet]:A,[a.SolScope.Devnet]:A,[a.BtcScope.Mainnet]:T},s.SYMBOL_TO_SLIP44_MAP={SOL:"slip44:501",BTC:"slip44:0",ETH:"slip44:60",POL:"slip44:966",BNB:"slip44:714",AVAX:"slip44:9000",TESTETH:"slip44:60",SEI:"slip44:19000118"}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/constants/tokens.cjs"}],[1228,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a;Object.defineProperty(s,"__esModule",{value:!0}),s.TraceName=void 0,function(e){e.BridgeQuotesFetched="Bridge Quotes Fetched",e.SwapQuotesFetched="Swap Quotes Fetched"}(a||(s.TraceName=a={}))}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/constants/traces.cjs"}],[1229,{"./bridge-controller.cjs":1223,"./constants/bridge.cjs":1224,"./constants/swaps.cjs":1226,"./constants/tokens.cjs":1227,"./selectors.cjs":1230,"./types.cjs":1231,"./utils/balance.cjs":1233,"./utils/bridge.cjs":1234,"./utils/caip-formatters.cjs":1235,"./utils/feature-flags.cjs":1236,"./utils/fetch.cjs":1237,"./utils/metrics/constants.cjs":1238,"./utils/metrics/properties.cjs":1239,"./utils/quote.cjs":1240,"./utils/slippage.cjs":1241,"./utils/validators.cjs":1243},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchBridgeTokens=s.calcLatestSrcBalance=s.calcSlippagePercentage=s.formatEtaInMinutes=s.isValidQuoteRequest=s.isCrossChain=s.getDefaultBridgeControllerState=s.getNativeAssetForChainId=s.isNonEvmChainId=s.isBitcoinChainId=s.isSolanaChainId=s.isNativeAddress=s.isEthUsdt=s.getEthUsdtResetData=s.MetricsSwapType=s.MetricsActionType=s.SWAPS_API_V2_BASE_URL=s.SWAPS_CHAINID_DEFAULT_TOKEN_MAP=s.BRIDGE_PROD_API_BASE_URL=s.BRIDGE_DEV_API_BASE_URL=s.METABRIDGE_CHAIN_TO_ADDRESS_MAP=s.DEFAULT_BRIDGE_CONTROLLER_STATE=s.DEFAULT_MAX_REFRESH_COUNT=s.REFRESH_INTERVAL_MS=s.BRIDGE_MM_FEE_RATE=s.BRIDGE_PREFERRED_GAS_ESTIMATE=s.BRIDGE_QUOTE_MAX_RETURN_DIFFERENCE_PERCENTAGE=s.BRIDGE_QUOTE_MAX_ETA_SECONDS=s.BRIDGE_CONTROLLER_NAME=s.BridgeClientId=s.ALLOWED_BRIDGE_CHAIN_IDS=s.FeatureId=s.BridgeAssetSchema=s.ActionTypes=s.FeeType=s.BridgeBackgroundAction=s.BridgeUserAction=s.RequestStatus=s.ChainId=s.SortOrder=s.AssetType=s.StatusTypes=s.isCustomSlippage=s.isHardwareWallet=s.getSwapType=s.getRequestParams=s.formatProviderLabel=s.UNIFIED_SWAP_BRIDGE_EVENT_CATEGORY=s.UnifiedSwapBridgeEventName=s.BridgeController=void 0,s.BRIDGE_DEFAULT_SLIPPAGE=s.getBridgeFeatureFlags=s.DEFAULT_FEATURE_FLAG_CONFIG=s.selectMinimumBalanceForRentExemptionInSOL=s.selectBridgeFeatureFlags=s.selectIsQuoteExpired=s.selectExchangeRateByChainIdAndAddress=s.selectDefaultSlippagePercentage=s.selectBridgeQuotes=s.formatAddressToAssetId=s.formatAddressToCaipReference=s.formatChainIdToHex=s.formatChainIdToCaip=void 0;var a=e("./bridge-controller.cjs");Object.defineProperty(s,"BridgeController",{enumerable:!0,get:function(){return a.BridgeController}});var n=e("./utils/metrics/constants.cjs");Object.defineProperty(s,"UnifiedSwapBridgeEventName",{enumerable:!0,get:function(){return n.UnifiedSwapBridgeEventName}}),Object.defineProperty(s,"UNIFIED_SWAP_BRIDGE_EVENT_CATEGORY",{enumerable:!0,get:function(){return n.UNIFIED_SWAP_BRIDGE_EVENT_CATEGORY}});var r=e("./utils/metrics/properties.cjs");Object.defineProperty(s,"formatProviderLabel",{enumerable:!0,get:function(){return r.formatProviderLabel}}),Object.defineProperty(s,"getRequestParams",{enumerable:!0,get:function(){return r.getRequestParams}}),Object.defineProperty(s,"getSwapType",{enumerable:!0,get:function(){return r.getSwapType}}),Object.defineProperty(s,"isHardwareWallet",{enumerable:!0,get:function(){return r.isHardwareWallet}}),Object.defineProperty(s,"isCustomSlippage",{enumerable:!0,get:function(){return r.isCustomSlippage}});var i=e("./types.cjs");Object.defineProperty(s,"StatusTypes",{enumerable:!0,get:function(){return i.StatusTypes}});var o=e("./types.cjs");Object.defineProperty(s,"AssetType",{enumerable:!0,get:function(){return o.AssetType}}),Object.defineProperty(s,"SortOrder",{enumerable:!0,get:function(){return o.SortOrder}}),Object.defineProperty(s,"ChainId",{enumerable:!0,get:function(){return o.ChainId}}),Object.defineProperty(s,"RequestStatus",{enumerable:!0,get:function(){return o.RequestStatus}}),Object.defineProperty(s,"BridgeUserAction",{enumerable:!0,get:function(){return o.BridgeUserAction}}),Object.defineProperty(s,"BridgeBackgroundAction",{enumerable:!0,get:function(){return o.BridgeBackgroundAction}});var c=e("./utils/validators.cjs");Object.defineProperty(s,"FeeType",{enumerable:!0,get:function(){return c.FeeType}}),Object.defineProperty(s,"ActionTypes",{enumerable:!0,get:function(){return c.ActionTypes}}),Object.defineProperty(s,"BridgeAssetSchema",{enumerable:!0,get:function(){return c.BridgeAssetSchema}}),Object.defineProperty(s,"FeatureId",{enumerable:!0,get:function(){return c.FeatureId}});var l=e("./constants/bridge.cjs");Object.defineProperty(s,"ALLOWED_BRIDGE_CHAIN_IDS",{enumerable:!0,get:function(){return l.ALLOWED_BRIDGE_CHAIN_IDS}}),Object.defineProperty(s,"BridgeClientId",{enumerable:!0,get:function(){return l.BridgeClientId}}),Object.defineProperty(s,"BRIDGE_CONTROLLER_NAME",{enumerable:!0,get:function(){return l.BRIDGE_CONTROLLER_NAME}}),Object.defineProperty(s,"BRIDGE_QUOTE_MAX_ETA_SECONDS",{enumerable:!0,get:function(){return l.BRIDGE_QUOTE_MAX_ETA_SECONDS}}),Object.defineProperty(s,"BRIDGE_QUOTE_MAX_RETURN_DIFFERENCE_PERCENTAGE",{enumerable:!0,get:function(){return l.BRIDGE_QUOTE_MAX_RETURN_DIFFERENCE_PERCENTAGE}}),Object.defineProperty(s,"BRIDGE_PREFERRED_GAS_ESTIMATE",{enumerable:!0,get:function(){return l.BRIDGE_PREFERRED_GAS_ESTIMATE}}),Object.defineProperty(s,"BRIDGE_MM_FEE_RATE",{enumerable:!0,get:function(){return l.BRIDGE_MM_FEE_RATE}}),Object.defineProperty(s,"REFRESH_INTERVAL_MS",{enumerable:!0,get:function(){return l.REFRESH_INTERVAL_MS}}),Object.defineProperty(s,"DEFAULT_MAX_REFRESH_COUNT",{enumerable:!0,get:function(){return l.DEFAULT_MAX_REFRESH_COUNT}}),Object.defineProperty(s,"DEFAULT_BRIDGE_CONTROLLER_STATE",{enumerable:!0,get:function(){return l.DEFAULT_BRIDGE_CONTROLLER_STATE}}),Object.defineProperty(s,"METABRIDGE_CHAIN_TO_ADDRESS_MAP",{enumerable:!0,get:function(){return l.METABRIDGE_CHAIN_TO_ADDRESS_MAP}}),Object.defineProperty(s,"BRIDGE_DEV_API_BASE_URL",{enumerable:!0,get:function(){return l.BRIDGE_DEV_API_BASE_URL}}),Object.defineProperty(s,"BRIDGE_PROD_API_BASE_URL",{enumerable:!0,get:function(){return l.BRIDGE_PROD_API_BASE_URL}});var u=e("./constants/tokens.cjs");Object.defineProperty(s,"SWAPS_CHAINID_DEFAULT_TOKEN_MAP",{enumerable:!0,get:function(){return u.SWAPS_CHAINID_DEFAULT_TOKEN_MAP}});var d=e("./constants/swaps.cjs");Object.defineProperty(s,"SWAPS_API_V2_BASE_URL",{enumerable:!0,get:function(){return d.SWAPS_API_V2_BASE_URL}});var m=e("./utils/metrics/constants.cjs");Object.defineProperty(s,"MetricsActionType",{enumerable:!0,get:function(){return m.MetricsActionType}}),Object.defineProperty(s,"MetricsSwapType",{enumerable:!0,get:function(){return m.MetricsSwapType}});var h=e("./utils/bridge.cjs");Object.defineProperty(s,"getEthUsdtResetData",{enumerable:!0,get:function(){return h.getEthUsdtResetData}}),Object.defineProperty(s,"isEthUsdt",{enumerable:!0,get:function(){return h.isEthUsdt}}),Object.defineProperty(s,"isNativeAddress",{enumerable:!0,get:function(){return h.isNativeAddress}}),Object.defineProperty(s,"isSolanaChainId",{enumerable:!0,get:function(){return h.isSolanaChainId}}),Object.defineProperty(s,"isBitcoinChainId",{enumerable:!0,get:function(){return h.isBitcoinChainId}}),Object.defineProperty(s,"isNonEvmChainId",{enumerable:!0,get:function(){return h.isNonEvmChainId}}),Object.defineProperty(s,"getNativeAssetForChainId",{enumerable:!0,get:function(){return h.getNativeAssetForChainId}}),Object.defineProperty(s,"getDefaultBridgeControllerState",{enumerable:!0,get:function(){return h.getDefaultBridgeControllerState}}),Object.defineProperty(s,"isCrossChain",{enumerable:!0,get:function(){return h.isCrossChain}});var p=e("./utils/quote.cjs");Object.defineProperty(s,"isValidQuoteRequest",{enumerable:!0,get:function(){return p.isValidQuoteRequest}}),Object.defineProperty(s,"formatEtaInMinutes",{enumerable:!0,get:function(){return p.formatEtaInMinutes}}),Object.defineProperty(s,"calcSlippagePercentage",{enumerable:!0,get:function(){return p.calcSlippagePercentage}});var g=e("./utils/balance.cjs");Object.defineProperty(s,"calcLatestSrcBalance",{enumerable:!0,get:function(){return g.calcLatestSrcBalance}});var f=e("./utils/fetch.cjs");Object.defineProperty(s,"fetchBridgeTokens",{enumerable:!0,get:function(){return f.fetchBridgeTokens}});var y=e("./utils/caip-formatters.cjs");Object.defineProperty(s,"formatChainIdToCaip",{enumerable:!0,get:function(){return y.formatChainIdToCaip}}),Object.defineProperty(s,"formatChainIdToHex",{enumerable:!0,get:function(){return y.formatChainIdToHex}}),Object.defineProperty(s,"formatAddressToCaipReference",{enumerable:!0,get:function(){return y.formatAddressToCaipReference}}),Object.defineProperty(s,"formatAddressToAssetId",{enumerable:!0,get:function(){return y.formatAddressToAssetId}});var w=e("./selectors.cjs");Object.defineProperty(s,"selectBridgeQuotes",{enumerable:!0,get:function(){return w.selectBridgeQuotes}}),Object.defineProperty(s,"selectDefaultSlippagePercentage",{enumerable:!0,get:function(){return w.selectDefaultSlippagePercentage}}),Object.defineProperty(s,"selectExchangeRateByChainIdAndAddress",{enumerable:!0,get:function(){return w.selectExchangeRateByChainIdAndAddress}}),Object.defineProperty(s,"selectIsQuoteExpired",{enumerable:!0,get:function(){return w.selectIsQuoteExpired}}),Object.defineProperty(s,"selectBridgeFeatureFlags",{enumerable:!0,get:function(){return w.selectBridgeFeatureFlags}}),Object.defineProperty(s,"selectMinimumBalanceForRentExemptionInSOL",{enumerable:!0,get:function(){return w.selectMinimumBalanceForRentExemptionInSOL}});var b=e("./constants/bridge.cjs");Object.defineProperty(s,"DEFAULT_FEATURE_FLAG_CONFIG",{enumerable:!0,get:function(){return b.DEFAULT_FEATURE_FLAG_CONFIG}});var k=e("./utils/feature-flags.cjs");Object.defineProperty(s,"getBridgeFeatureFlags",{enumerable:!0,get:function(){return k.getBridgeFeatureFlags}});var S=e("./utils/slippage.cjs");Object.defineProperty(s,"BRIDGE_DEFAULT_SLIPPAGE",{enumerable:!0,get:function(){return S.BRIDGE_DEFAULT_SLIPPAGE}})}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/index.cjs"}],[1230,{"./constants/bridge.cjs":1224,"./types.cjs":1231,"./utils/bridge.cjs":1234,"./utils/caip-formatters.cjs":1235,"./utils/feature-flags.cjs":1236,"./utils/quote.cjs":1240,"./utils/slippage.cjs":1241,"@ethersproject/constants":651,"@metamask/utils":2799,"bignumber.js":1244,lodash:4534,reselect:4988},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.selectDefaultSlippagePercentage=s.selectMinimumBalanceForRentExemptionInSOL=s.selectBridgeQuotes=s.selectIsQuoteExpired=s.selectIsAssetExchangeRateInState=s.selectExchangeRateByChainIdAndAddress=s.selectBridgeFeatureFlags=void 0;const a=e("@ethersproject/constants"),n=e("@metamask/utils"),r=e("bignumber.js"),i=e("lodash"),o=e("reselect"),c=e("./constants/bridge.cjs"),l=e("./types.cjs"),u=e("./utils/bridge.cjs"),d=e("./utils/caip-formatters.cjs"),m=e("./utils/feature-flags.cjs"),h=e("./utils/quote.cjs"),p=e("./utils/slippage.cjs"),g=o.createStructuredSelector.withTypes(),f=o.createSelector.withTypes(),y=o.createSelector.withTypes();s.selectBridgeFeatureFlags=y([e=>e.remoteFeatureFlags.bridgeConfig],e=>(0,m.processFeatureFlags)(e));const w=(e,t,s)=>{if(!t||!s)return{};const a=(0,d.formatAddressToAssetId)(s,t);if(!a)return{};const{assetExchangeRates:i,currencyRates:o,marketData:c,conversionRates:l}=e,m=i?.[a]??i?.[a.toLowerCase()];if(m?.exchangeRate)return m;if((0,u.isNonEvmChainId)(t)){const e=l?.[a];return e?{exchangeRate:e.rate,usdExchangeRate:undefined}:{}}if((0,u.isNativeAddress)(s)){const{symbol:e}=(0,u.getNativeAssetForChainId)(t),s=o?.[e];return s?{exchangeRate:s?.conversionRate?.toString(),usdExchangeRate:s?.usdConversionRate?.toString()}:{}}if(!(0,u.isNonEvmChainId)(t)){const e=c?.[(0,d.formatChainIdToHex)(t)],a=(0,n.isStrictHexString)(s)?e?.[s]:null,i=a?o[a?.currency]:undefined;if(a&&i)return{exchangeRate:new r.BigNumber(a.price).multipliedBy(i.conversionRate??0).toString(),usdExchangeRate:new r.BigNumber(a.price).multipliedBy(i.usdConversionRate??0).toString()}}return{}};s.selectExchangeRateByChainIdAndAddress=(e,t,s)=>w(e,t,s);s.selectIsAssetExchangeRateInState=(...e)=>Boolean(w(...e)?.exchangeRate)&&Boolean(w(...e)?.usdExchangeRate);const b=f([({quotes:e})=>e,g({estimatedBaseFeeInDecGwei:({gasFeeEstimates:e})=>e?.estimatedBaseFee,maxPriorityFeePerGasInDecGwei:({gasFeeEstimates:e})=>e?.[c.BRIDGE_PREFERRED_GAS_ESTIMATE]?.suggestedMaxPriorityFeePerGas,maxFeePerGasInDecGwei:({gasFeeEstimates:e})=>e?.high?.suggestedMaxFeePerGas}),f([e=>e,({quoteRequest:{srcChainId:e}})=>e,({quoteRequest:{srcTokenAddress:e}})=>e],s.selectExchangeRateByChainIdAndAddress),f([e=>e,({quoteRequest:{destChainId:e}})=>e,({quoteRequest:{destTokenAddress:e}})=>e],s.selectExchangeRateByChainIdAndAddress),f([e=>e,({quoteRequest:{srcChainId:e}})=>e],(e,t)=>(0,s.selectExchangeRateByChainIdAndAddress)(e,t,a.AddressZero))],(e,t,s,a,n)=>e.map(e=>{const r=(0,h.calcSentAmount)(e.quote,s),i=(0,h.calcToAmount)(e.quote.destTokenAmount,e.quote.destAsset,a),o=(0,h.calcToAmount)(e.quote.minDestTokenAmount,e.quote.destAsset,a),c=(0,h.calcIncludedTxFees)(e.quote,s,a);let l,d,m,p;(0,u.isNonEvmChainId)(e.quote.srcChainId)?(l=(0,h.calcNonEvmTotalNetworkFee)(e,n),p={effective:l,total:l,max:l},d=l):(m=(0,h.calcRelayerFee)(e,n),p=(0,h.calcEstimatedAndMaxTotalGasFee)({bridgeQuote:e,...t,...n}),l=(0,h.calcTotalEstimatedNetworkFee)(p,m),d=(0,h.calcTotalMaxNetworkFee)(p,m));const g=(0,h.calcAdjustedReturn)(i,l,e.quote),f=(0,h.calcCost)(g,r);return{...e,sentAmount:r,toTokenAmount:i,minToTokenAmount:o,swapRate:(0,h.calcSwapRate)(r.amount,i.amount),totalNetworkFee:l,totalMaxNetworkFee:d,gasFee:p,adjustedReturn:g,cost:f,includedTxFees:c}})),k=f([b,(e,{sortOrder:t})=>t],(e,t)=>t===l.SortOrder.ETA_ASC?(0,i.orderBy)(e,e=>e.estimatedProcessingTimeInSeconds,"asc"):(0,i.orderBy)(e,({cost:e})=>e.valueInCurrency?Number(e.valueInCurrency):0,"asc")),S=f([k],e=>e.length>0?e[0]:null),A=f([S,(e,{selectedQuote:t})=>t],(e,t)=>t??e),T=f([s.selectBridgeFeatureFlags,e=>e.quoteRequest.insufficientBal,e=>e.quotesRefreshCount],(e,t,s)=>!t&&e.maxRefreshCount>s),v=f([s.selectBridgeFeatureFlags,e=>e.quoteRequest.srcChainId],(e,t)=>(t?e.chains[(0,d.formatChainIdToCaip)(t)]?.refreshRate:e.refreshRate)??e.refreshRate);s.selectIsQuoteExpired=f([T,({quotesLastFetched:e})=>e,v,(e,t,s)=>s],(e,t,s,a)=>Boolean(!e&&t&&a-t>s)),s.selectBridgeQuotes=g({sortedQuotes:k,recommendedQuote:S,activeQuote:A,quotesLastFetchedMs:e=>e.quotesLastFetched,isLoading:e=>e.quotesLoadingStatus===l.RequestStatus.LOADING,quoteFetchError:e=>e.quoteFetchError,quotesRefreshCount:e=>e.quotesRefreshCount,quotesInitialLoadTimeMs:e=>e.quotesInitialLoadTime,isQuoteGoingToRefresh:T});s.selectMinimumBalanceForRentExemptionInSOL=e=>new r.BigNumber(e.minimumBalanceForRentExemptionInLamports??0).div(10**9).toString(),s.selectDefaultSlippagePercentage=f([e=>(0,s.selectBridgeFeatureFlags)(e).chains,(e,t)=>t.srcTokenAddress,(e,t)=>t.destTokenAddress,(e,t)=>t.srcChainId?(0,d.formatChainIdToCaip)(t.srcChainId):undefined,(e,t)=>t.destChainId?(0,d.formatChainIdToCaip)(t.destChainId):undefined],(e,t,s,a,n)=>(0,p.getDefaultSlippagePercentage)({srcTokenAddress:t,destTokenAddress:s,srcChainId:a,destChainId:n},a?e[a]?.stablecoins:undefined,n?e[n]?.stablecoins:undefined))}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/selectors.cjs"}],[1231,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l;Object.defineProperty(s,"__esModule",{value:!0}),s.BridgeBackgroundAction=s.BridgeUserAction=s.RequestStatus=s.ChainId=s.StatusTypes=s.SortOrder=s.AssetType=void 0,function(e){e.native="NATIVE",e.token="TOKEN",e.NFT="NFT",e.unknown="UNKNOWN"}(a||(s.AssetType=a={})),function(e){e.COST_ASC="cost_ascending",e.ETA_ASC="time_descending"}(n||(s.SortOrder=n={})),function(e){e.UNKNOWN="UNKNOWN",e.FAILED="FAILED",e.PENDING="PENDING",e.COMPLETE="COMPLETE"}(r||(s.StatusTypes=r={})),function(e){e[e.ETH=1]="ETH",e[e.OPTIMISM=10]="OPTIMISM",e[e.BSC=56]="BSC",e[e.POLYGON=137]="POLYGON",e[e.ZKSYNC=324]="ZKSYNC",e[e.BASE=8453]="BASE",e[e.ARBITRUM=42161]="ARBITRUM",e[e.AVALANCHE=43114]="AVALANCHE",e[e.LINEA=59144]="LINEA",e[e.SOLANA=0x416edef1601be]="SOLANA",e[e.BTC=20000000000001]="BTC"}(i||(s.ChainId=i={})),function(e){e[e.LOADING=0]="LOADING",e[e.FETCHED=1]="FETCHED",e[e.ERROR=2]="ERROR"}(o||(s.RequestStatus=o={})),function(e){e.SELECT_DEST_NETWORK="selectDestNetwork",e.UPDATE_QUOTE_PARAMS="updateBridgeQuoteRequestParams"}(c||(s.BridgeUserAction=c={})),function(e){e.SET_CHAIN_INTERVAL_LENGTH="setChainIntervalLength",e.RESET_STATE="resetState",e.GET_BRIDGE_ERC20_ALLOWANCE="getBridgeERC20Allowance",e.TRACK_METAMETRICS_EVENT="trackUnifiedSwapBridgeEvent",e.STOP_POLLING_FOR_QUOTES="stopPollingForQuotes",e.FETCH_QUOTES="fetchQuotes"}(l||(s.BridgeBackgroundAction=l={}))}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/types.cjs"}],[1232,{"./bridge.cjs":1234,"./caip-formatters.cjs":1235},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.toExchangeRates=s.getAssetIdsForToken=void 0;const a=e("./bridge.cjs"),n=e("./caip-formatters.cjs");s.getAssetIdsForToken=(e,t)=>{const s=[],r=(0,n.formatAddressToAssetId)(e,t);return r&&(s.push(r),(0,a.getNativeAssetForChainId)(t)?.assetId&&s.push((0,a.getNativeAssetForChainId)(t).assetId)),s};s.toExchangeRates=(e,t)=>Object.entries(t).reduce((t,[s,a])=>(a&&(t[s]={exchangeRate:a[e],usdExchangeRate:a.usd}),t),{})}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/assets.cjs"}],[1233,{"./bridge.cjs":1234,"@ethersproject/address":638,"@ethersproject/contracts":654,"@ethersproject/providers":692,"@metamask/metamask-eth-abis":2064},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.hasSufficientBalance=s.calcLatestSrcBalance=s.fetchTokenBalance=void 0;const a=e("@ethersproject/address"),n=e("@ethersproject/contracts"),r=e("@ethersproject/providers"),i=e("@metamask/metamask-eth-abis"),o=e("./bridge.cjs");s.fetchTokenBalance=async(e,t,s)=>{const a=new r.Web3Provider(s),o=new n.Contract(e,i.abiERC20,a),c="function"==typeof o?.balanceOf?o.balanceOf(t):Promise.resolve(undefined);return await c};s.calcLatestSrcBalance=async(e,t,n,i)=>{if(n&&i){if((0,o.isNativeAddress)(n)){const s=new r.Web3Provider(e);return await s.getBalance((0,a.getAddress)(t))}return await(0,s.fetchTokenBalance)(n,t,e)}return undefined};s.hasSufficientBalance=async(e,t,a,n,r)=>{const i=await(0,s.calcLatestSrcBalance)(e,t,a,r);return!!i&&i.gte(n)}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/balance.cjs"}],[1234,{"../constants/bridge.cjs":1224,"../constants/chains.cjs":1225,"../constants/tokens.cjs":1227,"../types.cjs":1231,"./caip-formatters.cjs":1235,"@ethersproject/constants":651,"@ethersproject/contracts":654,"@metamask/keyring-api":1994,"@metamask/metamask-eth-abis":2064,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isCrossChain=s.isNonEvmChainId=s.isBitcoinChainId=s.isSolanaChainId=s.isNativeAddress=s.isSwapsDefaultTokenSymbol=s.isSwapsDefaultTokenAddress=s.sumHexes=s.isEthUsdt=s.getEthUsdtResetData=s.getNativeAssetForChainId=s.getDefaultBridgeControllerState=void 0;const a=e("@ethersproject/constants"),n=e("@ethersproject/contracts"),r=e("@metamask/keyring-api"),i=e("@metamask/metamask-eth-abis"),o=e("@metamask/utils"),c=e("./caip-formatters.cjs"),l=e("../constants/bridge.cjs"),u=e("../constants/chains.cjs"),d=e("../constants/tokens.cjs"),m=e("../types.cjs");s.getDefaultBridgeControllerState=()=>l.DEFAULT_BRIDGE_CONTROLLER_STATE;const h=(e,t)=>`${(0,c.formatChainIdToCaip)(e)}/${d.SYMBOL_TO_SLIP44_MAP[t]}`;s.getNativeAssetForChainId=e=>{const t=(0,c.formatChainIdToCaip)(e),s=d.SWAPS_CHAINID_DEFAULT_TOKEN_MAP[(0,c.formatChainIdToCaip)(e)]??d.SWAPS_CHAINID_DEFAULT_TOKEN_MAP[(0,c.formatChainIdToHex)(e)];if(!s)throw new Error(`No XChain Swaps native asset found for chainId: ${e}`);return{...s,chainId:(0,c.formatChainIdToDec)(e),assetId:h(t,s.symbol)}};s.getEthUsdtResetData=()=>new n.Contract(l.ETH_USDT_ADDRESS,i.abiERC20).interface.encodeFunctionData("approve",[l.METABRIDGE_ETHEREUM_ADDRESS,"0"]);s.isEthUsdt=(e,t)=>e===u.CHAIN_IDS.MAINNET&&t.toLowerCase()===l.ETH_USDT_ADDRESS.toLowerCase();s.sumHexes=(...e)=>{if(0===e.length)return"0x0";return`0x${e.reduce((e,t)=>e+BigInt(t),BigInt(0)).toString(16)}`};s.isSwapsDefaultTokenAddress=(e,t)=>!(!e||!t)&&e===(0,s.getNativeAssetForChainId)(t)?.address;s.isSwapsDefaultTokenSymbol=(e,t)=>!(!e||!t)&&e===(0,s.getNativeAssetForChainId)(t)?.symbol;s.isNativeAddress=e=>e===a.AddressZero||""===e||!e||!(0,o.isStrictHexString)(e)&&Object.values(d.SYMBOL_TO_SLIP44_MAP).some(t=>e.includes(t)||t.endsWith(e));s.isSolanaChainId=e=>(0,o.isCaipChainId)(e)?e===r.SolScope.Mainnet.toString():e.toString()===m.ChainId.SOLANA.toString();s.isBitcoinChainId=e=>(0,o.isCaipChainId)(e)?e===r.BtcScope.Mainnet.toString():e.toString()===m.ChainId.BTC.toString();s.isNonEvmChainId=e=>(0,s.isSolanaChainId)(e)||(0,s.isBitcoinChainId)(e);s.isCrossChain=(e,t)=>{try{return!!t&&(0,c.formatChainIdToCaip)(e)!==(0,c.formatChainIdToCaip)(t)}catch{return!1}}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/bridge.cjs"}],[1235,{"../types.cjs":1231,"./bridge.cjs":1234,"@ethersproject/address":638,"@ethersproject/constants":651,"@metamask/controller-utils":1301,"@metamask/keyring-api":1994,"@metamask/multichain-network-controller":2095,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.formatAddressToAssetId=s.formatAddressToCaipReference=s.formatChainIdToHex=s.formatChainIdToDec=s.formatChainIdToCaip=void 0;const a=e("@ethersproject/address"),n=e("@ethersproject/constants"),r=e("@metamask/controller-utils"),i=e("@metamask/keyring-api"),o=e("@metamask/multichain-network-controller"),c=e("@metamask/utils"),l=e("./bridge.cjs"),u=e("../types.cjs");s.formatChainIdToCaip=e=>(0,c.isCaipChainId)(e)?e:(0,c.isStrictHexString)(e)?(0,o.toEvmCaipChainId)(e):(0,l.isSolanaChainId)(e)?i.SolScope.Mainnet:(0,l.isBitcoinChainId)(e)?i.BtcScope.Mainnet:(0,o.toEvmCaipChainId)((0,c.numberToHex)(Number(e)));s.formatChainIdToDec=e=>(0,c.isStrictHexString)(e)?(0,r.convertHexToDecimal)(e):e===i.SolScope.Mainnet?u.ChainId.SOLANA:e===i.BtcScope.Mainnet?u.ChainId.BTC:(0,c.isCaipChainId)(e)?Number(e.split(":").at(-1)):"string"==typeof e?parseInt(e,10):e;s.formatChainIdToHex=e=>{if((0,c.isStrictHexString)(e))return e;if("number"==typeof e||parseInt(e,10))return(0,c.numberToHex)(Number(e));if((0,c.isCaipChainId)(e)){const{reference:t}=(0,c.parseCaipChainId)(e);if((0,c.isCaipReference)(t)&&!isNaN(Number(t)))return(0,c.numberToHex)(Number(t))}throw new Error(`Invalid cross-chain swaps chainId: ${e}`)};s.formatAddressToCaipReference=e=>{if((0,c.isStrictHexString)(e))return(0,a.getAddress)(e);if((0,l.isNativeAddress)(e))return n.AddressZero;const t=e.split(":").at(-1);if(!t)throw new Error("Invalid address");return t};s.formatAddressToAssetId=(e,t)=>(0,c.isCaipAssetType)(e)?e:(0,l.isNativeAddress)(e)?(0,l.getNativeAssetForChainId)(t).assetId:t===i.SolScope.Mainnet?c.CaipAssetTypeStruct.create(`${t}/token:${e}`):(0,c.isStrictHexString)(e)?c.CaipAssetTypeStruct.create(`${(0,s.formatChainIdToCaip)(t)}/erc20:${e}`):undefined}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/caip-formatters.cjs"}],[1236,{"../constants/bridge.cjs":1224,"./caip-formatters.cjs":1235,"./validators.cjs":1243},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getBridgeFeatureFlags=s.processFeatureFlags=s.formatFeatureFlags=void 0;const a=e("./caip-formatters.cjs"),n=e("./validators.cjs"),r=e("../constants/bridge.cjs");s.formatFeatureFlags=e=>{return{...e,chains:(t=e.chains,Object.entries(t).reduce((e,[t,s])=>({...e,[(0,a.formatChainIdToCaip)(t)]:s}),{}))};var t};s.processFeatureFlags=e=>(0,n.validateFeatureFlagsResponse)(e)?(0,s.formatFeatureFlags)(e):r.DEFAULT_FEATURE_FLAG_CONFIG,s.getBridgeFeatureFlags=function(e){const t=e.call("RemoteFeatureFlagController:getState"),a=t?.remoteFeatureFlags?.bridgeConfigV2,n=t?.remoteFeatureFlags?.bridgeConfig;return(0,s.processFeatureFlags)(a||n)}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/feature-flags.cjs"}],[1237,{"./bridge.cjs":1234,"./caip-formatters.cjs":1235,"./validators.cjs":1243,"@metamask/superstruct":2705,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchAssetPrices=s.fetchBridgeQuotes=s.fetchBridgeTokens=s.getClientIdHeader=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils"),r=e("./bridge.cjs"),i=e("./caip-formatters.cjs"),o=e("./validators.cjs"),c=10*n.Duration.Minute;s.getClientIdHeader=e=>({"X-Client-Id":e}),s.fetchBridgeTokens=async function(e,t,a,n){const r=`${n}/getTokens?chainId=${(0,i.formatChainIdToDec)(e)}`,l=await a(r,{headers:(0,s.getClientIdHeader)(t),cacheOptions:{cacheRefreshTime:c},functionName:"fetchBridgeTokens"}),u={};return l.forEach(e=>{(0,o.validateSwapsTokenObject)(e)&&(u[e.address]=e)}),u},s.fetchBridgeQuotes=async function(e,t,n,c,l,u){const d=e.destWalletAddress??e.walletAddress,m={walletAddress:(0,i.formatAddressToCaipReference)(e.walletAddress),destWalletAddress:(0,i.formatAddressToCaipReference)(d),srcChainId:(0,i.formatChainIdToDec)(e.srcChainId),destChainId:(0,i.formatChainIdToDec)(e.destChainId),srcTokenAddress:(0,i.formatAddressToCaipReference)(e.srcTokenAddress),destTokenAddress:(0,i.formatAddressToCaipReference)(e.destTokenAddress),srcTokenAmount:e.srcTokenAmount,insufficientBal:Boolean(e.insufficientBal),resetApproval:Boolean(e.resetApproval),gasIncluded:Boolean(e.gasIncluded),gasIncluded7702:Boolean(e.gasIncluded7702)};e.slippage!==undefined&&(m.slippage=e.slippage),e.noFee!==undefined&&(m.noFee=e.noFee),e.aggIds&&e.aggIds.length>0&&(m.aggIds=e.aggIds),e.bridgeIds&&e.bridgeIds.length>0&&(m.bridgeIds=e.bridgeIds);const h=new URLSearchParams;Object.entries(m).forEach(([e,t])=>{h.append(e,t.toString())});const p=`${l}/getQuote?${h}`,g=await c(p,{headers:(0,s.getClientIdHeader)(n),signal:t,cacheOptions:{cacheRefreshTime:0},functionName:"fetchBridgeQuotes"}),f=new Set([]),y=g.filter(t=>{try{return(0,r.isBitcoinChainId)(e.srcChainId)?(0,o.validateBitcoinQuoteResponse)(t):(0,o.validateQuoteResponse)(t)}catch(e){return e instanceof a.StructError&&e.failures().forEach(({branch:e,path:s})=>{const a=e?.[0]?.quote?.bridgeId||e?.[0]?.quote?.bridges?.[0]||t?.quote?.bridgeId||t?.quote?.bridges?.[0]||"unknown",n=s?.join(".")||"unknown";f.add([a,n].join("|"))}),!1}}).map(e=>({...e,featureId:u??undefined})),w=Array.from(f);return f.size>0&&console.warn("Quote validation failed",w),{quotes:y,validationFailures:w}};s.fetchAssetPrices=async e=>{const{currencies:t,...a}=e,r=await Promise.allSettled(Array.from(t).map(async e=>await(async e=>{const{currency:t,assetIds:a,clientId:r,fetchFn:i}=e,o=Array.from(a).filter(Boolean);if(0===o.length)return{};const c=`https://price.api.cx.metamask.io/v3/spot-prices?${new URLSearchParams({assetIds:o.filter(Boolean).join(","),vsCurrency:t})}`,l=await i(c,{headers:(0,s.getClientIdHeader)(r),cacheOptions:{cacheRefreshTime:Number(30*n.Duration.Second)},functionName:"fetchAssetExchangeRates"});return l&&"object"==typeof l?Object.entries(l).reduce((e,[s,a])=>a?(e[s]||(e[s]={}),a[t]&&(e[s][t]=a[t].toString()),e):e,{}):{}})({...a,currency:e}))).then(e=>e.reduce((e,t)=>("fulfilled"===t.status&&Object.entries(t.value).forEach(([t,s])=>{e[t]||(e[t]={}),Object.entries(s).forEach(([s,a])=>{e[t][s]=a})}),e),{}));return r}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/fetch.cjs"}],[1238,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o;Object.defineProperty(s,"__esModule",{value:!0}),s.MetricsSwapType=s.MetricsActionType=s.MetaMetricsSwapsEventSource=s.AbortReason=s.UnifiedSwapBridgeEventName=s.UNIFIED_SWAP_BRIDGE_EVENT_CATEGORY=void 0,s.UNIFIED_SWAP_BRIDGE_EVENT_CATEGORY="Unified SwapBridge",function(e){e.ButtonClicked="Unified SwapBridge Button Clicked",e.PageViewed="Unified SwapBridge Page Viewed",e.InputChanged="Unified SwapBridge Input Changed",e.InputSourceDestinationSwitched="Unified SwapBridge Source Destination Switched",e.QuotesRequested="Unified SwapBridge Quotes Requested",e.QuotesReceived="Unified SwapBridge Quotes Received",e.QuotesError="Unified SwapBridge Quotes Error",e.Submitted="Unified SwapBridge Submitted",e.Completed="Unified SwapBridge Completed",e.Failed="Unified SwapBridge Failed",e.AllQuotesOpened="Unified SwapBridge All Quotes Opened",e.AllQuotesSorted="Unified SwapBridge All Quotes Sorted",e.QuoteSelected="Unified SwapBridge Quote Selected",e.AssetDetailTooltipClicked="Unified SwapBridge Asset Detail Tooltip Clicked",e.QuotesValidationFailed="Unified SwapBridge Quotes Failed Validation",e.StatusValidationFailed="Unified SwapBridge Status Failed Validation"}(a||(s.UnifiedSwapBridgeEventName=a={})),function(e){e.NewQuoteRequest="New Quote Request",e.QuoteRequestUpdated="Quote Request Updated",e.ResetState="Reset controller state"}(n||(s.AbortReason=n={})),function(e){e.MainView="Main View",e.TokenView="Token View"}(r||(s.MetaMetricsSwapsEventSource=r={})),function(e){e.CROSSCHAIN_V1="crosschain-v1",e.SWAPBRIDGE_V1="swapbridge-v1"}(i||(s.MetricsActionType=i={})),function(e){e.SINGLE="single_chain",e.CROSSCHAIN="crosschain"}(o||(s.MetricsSwapType=o={}))}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/metrics/constants.cjs"}],[1239,{"../../constants/bridge.cjs":1224,"../bridge.cjs":1234,"../caip-formatters.cjs":1235,"./constants.cjs":1238},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isCustomSlippage=s.isHardwareWallet=s.getRequestParams=s.formatProviderLabel=s.getSwapTypeFromQuote=s.getSwapType=s.toInputChangedPropertyValue=s.toInputChangedPropertyKey=void 0;const a=e("./constants.cjs"),n=e("../../constants/bridge.cjs"),r=e("../bridge.cjs"),i=e("../caip-formatters.cjs");s.toInputChangedPropertyKey={srcTokenAddress:"token_source",destTokenAddress:"token_destination",srcChainId:"chain_source",destChainId:"chain_destination",slippage:"slippage"},s.toInputChangedPropertyValue={srcTokenAddress:({srcTokenAddress:e,srcChainId:t})=>t?(0,i.formatAddressToAssetId)(e??"",t):undefined,destTokenAddress:({destTokenAddress:e,destChainId:t})=>t?(0,i.formatAddressToAssetId)(e??"",t):undefined,srcChainId:({srcChainId:e})=>e?(0,i.formatChainIdToCaip)(e):undefined,destChainId:({destChainId:e})=>e?(0,i.formatChainIdToCaip)(e):undefined,slippage:({slippage:e})=>e?Number(e):e};s.getSwapType=(e,t)=>e&&!(0,r.isCrossChain)(e,t??e)?a.MetricsSwapType.SINGLE:a.MetricsSwapType.CROSSCHAIN;s.getSwapTypeFromQuote=e=>(0,s.getSwapType)(e.srcChainId,e.destChainId);s.formatProviderLabel=({bridgeId:e,bridges:t})=>`${e}_${t[0]}`;s.getRequestParams=({destChainId:e,srcTokenAddress:t,destTokenAddress:s},a)=>({chain_id_source:a,chain_id_destination:e?(0,i.formatChainIdToCaip)(e):null,token_address_source:t?(0,i.formatAddressToAssetId)(t,a)??(0,r.getNativeAssetForChainId)(a)?.assetId??null:(0,r.getNativeAssetForChainId)(a)?.assetId??null,token_address_destination:s?(0,i.formatAddressToAssetId)(s,e??a)??null:null});s.isHardwareWallet=e=>e?.metadata?.keyring.type?.includes("Hardware")??!1;s.isCustomSlippage=e=>e!==n.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteRequest.slippage}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/metrics/properties.cjs"}],[1240,{"./bridge.cjs":1234,"@metamask/controller-utils":1301,"bignumber.js":1244},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.formatEtaInMinutes=s.calcSlippagePercentage=s.calcCost=s.calcSwapRate=s.calcAdjustedReturn=s.calcIncludedTxFees=s.calcTotalMaxNetworkFee=s.calcTotalEstimatedNetworkFee=s.calcEstimatedAndMaxTotalGasFee=s.calcRelayerFee=s.calcSentAmount=s.calcToAmount=s.calcNonEvmTotalNetworkFee=s.getQuoteIdentifier=s.isValidQuoteRequest=void 0;const a=e("@metamask/controller-utils"),n=e("bignumber.js"),r=e("./bridge.cjs");s.isValidQuoteRequest=(e,t=!0)=>{const s=["srcTokenAddress","destTokenAddress","srcChainId","destChainId","walletAddress"];if(t&&s.push("srcTokenAmount"),e.destChainId&&e.srcChainId&&e.destChainId!==e.srcChainId&&((0,r.isNonEvmChainId)(e.destChainId)||(0,r.isNonEvmChainId)(e.srcChainId))&&(s.push("destWalletAddress"),!e.destWalletAddress))return!1;const a=[];return e.slippage!==undefined&&a.push("slippage"),s.every(t=>t in e&&"string"==typeof e[t]&&e[t]!==undefined&&""!==e[t]&&null!==e[t])&&a.every(t=>t in e&&"number"==typeof e[t]&&e[t]!==undefined&&!isNaN(Number(e[t]))&&null!==e[t])&&(!t||Boolean((e.srcTokenAmount??"").match(/^[1-9]\d*$/u)))};s.getQuoteIdentifier=e=>`${e.bridgeId}-${e.bridges[0]}-${e.steps.length}`;const i=(e,t)=>{const s=new n.BigNumber(10).pow(t??0);return new n.BigNumber(e).div(s)};s.calcNonEvmTotalNetworkFee=(e,{exchangeRate:t,usdExchangeRate:s})=>{const{nonEvmFeesInNative:a}=e,r=new n.BigNumber(a??"0");return{amount:r.toString(),valueInCurrency:t?r.times(t).toString():null,usd:s?r.times(s).toString():null}};s.calcToAmount=(e,t,{exchangeRate:s,usdExchangeRate:a})=>{const n=i(e,t.decimals);return{amount:n.toString(),valueInCurrency:s?n.times(s).toString():null,usd:a?n.times(a).toString():null}};s.calcSentAmount=({srcTokenAmount:e,srcAsset:t,feeData:s},{exchangeRate:a,usdExchangeRate:r})=>{const o=Object.values(s).filter(e=>e&&e.amount&&e.asset?.assetId===t.assetId).reduce((e,{amount:t})=>e.plus(t),new n.BigNumber(e)),c=i(o,t.decimals);return{amount:c.toString(),valueInCurrency:a?c.times(a).toString():null,usd:r?c.times(r).toString():null}};s.calcRelayerFee=({quote:e,trade:t},{exchangeRate:o,usdExchangeRate:c})=>{const l=new n.BigNumber((0,a.convertHexToDecimal)(t.value||"0x0"));let u=i(l,18);if((0,r.isNativeAddress)(e.srcAsset.address)){const t=(0,s.calcSentAmount)(e,{exchangeRate:o,usdExchangeRate:c}).amount;u=u.minus(t)}return{amount:u,valueInCurrency:o?u.times(o):null,usd:c?u.times(c):null}};const o=({approvalGasLimit:e,tradeGasLimit:t,l1GasFeesInHexWei:s,feePerGasInDecGwei:r,priorityFeePerGasInDecGwei:i,nativeToDisplayCurrencyExchangeRate:o,nativeToUsdExchangeRate:c})=>{const l=new n.BigNumber(t?.toString()??"0").plus(e?.toString()??"0"),u=new n.BigNumber(r).plus(i),d=(0,a.weiHexToGweiDec)((0,a.toHex)(s??"0")),m=l.times(u).plus(d).times(new n.BigNumber(10).pow(-9)),h=o?m.times(o.toString()):null,p=c?m.times(c.toString()):null;return{amount:m.toString(),valueInCurrency:h?.toString()??null,usd:p?.toString()??null}};s.calcEstimatedAndMaxTotalGasFee=({bridgeQuote:{approval:e,trade:t,l1GasFeesInHexWei:s},estimatedBaseFeeInDecGwei:a,maxFeePerGasInDecGwei:n,maxPriorityFeePerGasInDecGwei:r,exchangeRate:i,usdExchangeRate:c})=>{const{amount:l,valueInCurrency:u,usd:d}=o({approvalGasLimit:e?.effectiveGas??e?.gasLimit,tradeGasLimit:t?.effectiveGas??t?.gasLimit,l1GasFeesInHexWei:s,feePerGasInDecGwei:a,priorityFeePerGasInDecGwei:r,nativeToDisplayCurrencyExchangeRate:i,nativeToUsdExchangeRate:c}),{amount:m,valueInCurrency:h,usd:p}=o({approvalGasLimit:e?.gasLimit,tradeGasLimit:t?.gasLimit,l1GasFeesInHexWei:s,feePerGasInDecGwei:a,priorityFeePerGasInDecGwei:r,nativeToDisplayCurrencyExchangeRate:i,nativeToUsdExchangeRate:c}),{amount:g,valueInCurrency:f,usd:y}=o({approvalGasLimit:e?.gasLimit,tradeGasLimit:t?.gasLimit,l1GasFeesInHexWei:s,feePerGasInDecGwei:n,priorityFeePerGasInDecGwei:r,nativeToDisplayCurrencyExchangeRate:i,nativeToUsdExchangeRate:c});return{effective:{amount:l,valueInCurrency:u,usd:d},total:{amount:m,valueInCurrency:h,usd:p},max:{amount:g,valueInCurrency:f,usd:y}}};s.calcTotalEstimatedNetworkFee=({effective:e},t)=>({amount:new n.BigNumber(e?.amount??"0").plus(t.amount).toString(),valueInCurrency:e?.valueInCurrency?new n.BigNumber(e.valueInCurrency).plus(t.valueInCurrency||"0").toString():null,usd:e?.usd?new n.BigNumber(e.usd).plus(t.usd||"0").toString():null});s.calcTotalMaxNetworkFee=(e,t)=>({amount:new n.BigNumber(e.max.amount).plus(t.amount).toString(),valueInCurrency:e.max.valueInCurrency?new n.BigNumber(e.max.valueInCurrency).plus(t.valueInCurrency||"0").toString():null,usd:e.max.usd?new n.BigNumber(e.max.usd).plus(t.usd||"0").toString():null});s.calcIncludedTxFees=({gasIncluded:e,gasIncluded7702:t,srcAsset:s,feeData:{txFee:a}},n,r)=>{if(!a||!e&&!t)return null;const{exchangeRate:o,usdExchangeRate:c}=a.asset.assetId===s.assetId?n:r,l=i(a.amount,a.asset.decimals);return{amount:l.toString(),valueInCurrency:o?l.times(o).toString():null,usd:c?l.times(c).toString():null}};s.calcAdjustedReturn=(e,t,{feeData:{txFee:s},destAsset:{assetId:a}})=>s?.asset?.assetId===a?{valueInCurrency:e.valueInCurrency,usd:e.usd}:{valueInCurrency:e.valueInCurrency&&t.valueInCurrency?new n.BigNumber(e.valueInCurrency).minus(t.valueInCurrency).toString():null,usd:e.usd&&t.usd?new n.BigNumber(e.usd).minus(t.usd).toString():null};s.calcSwapRate=(e,t)=>new n.BigNumber(t).div(e).toString();s.calcCost=(e,t)=>({valueInCurrency:e.valueInCurrency&&t.valueInCurrency?new n.BigNumber(t.valueInCurrency).minus(e.valueInCurrency).toString():null,usd:e.usd&&t.usd?new n.BigNumber(t.usd).minus(e.usd).toString():null});s.calcSlippagePercentage=(e,t)=>{const a=(0,s.calcCost)(e,t);return a.valueInCurrency&&t.valueInCurrency?new n.BigNumber(a.valueInCurrency).div(t.valueInCurrency).times(100).abs().toString():a.usd&&t.usd?new n.BigNumber(a.usd).div(t.usd).times(100).abs().toString():null};s.formatEtaInMinutes=e=>e<60?"< 1":(e/60).toFixed()}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/quote.cjs"}],[1241,{"./bridge.cjs":1234},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getDefaultSlippagePercentage=s.BRIDGE_DEFAULT_SLIPPAGE=void 0;const a=e("./bridge.cjs");s.BRIDGE_DEFAULT_SLIPPAGE=.5;const n=undefined;s.getDefaultSlippagePercentage=({srcTokenAddress:e,destTokenAddress:t,srcChainId:r,destChainId:i},o,c)=>!r||(0,a.isCrossChain)(r,i)?s.BRIDGE_DEFAULT_SLIPPAGE:(0,a.isSolanaChainId)(r)?n:e&&t&&o?.map(e=>e.toLowerCase()).includes(e.toLowerCase())&&(c??o)?.map(e=>e.toLowerCase()).includes(t.toLowerCase())?.5:2}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/slippage.cjs"}],[1242,{"@metamask/keyring-api":1994,uuid:5366},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.computeFeeRequest=s.getMinimumBalanceForRentExemptionRequest=void 0;const a=e("@metamask/keyring-api"),n=e("uuid");s.getMinimumBalanceForRentExemptionRequest=e=>({snapId:e,origin:"metamask",handler:"onProtocolRequest",request:{method:" ",jsonrpc:"2.0",params:{scope:a.SolScope.Mainnet,request:{id:(0,n.v4)(),jsonrpc:"2.0",method:"getMinimumBalanceForRentExemption",params:[0,{commitment:"confirmed"}]}}}});s.computeFeeRequest=(e,t,s,a)=>({snapId:e,origin:"metamask",handler:"onClientRequest",request:{id:(0,n.v4)(),jsonrpc:"2.0",method:"computeFee",params:{transaction:t,accountId:s,scope:a}}})}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/snaps.cjs"}],[1243,{"@metamask/controller-utils":1301,"@metamask/superstruct":2705,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.validateBitcoinQuoteResponse=s.validateQuoteResponse=s.BitcoinQuoteResponseSchema=s.QuoteResponseSchema=s.BitcoinTradeDataSchema=s.TxDataSchema=s.QuoteSchema=s.StepSchema=s.ProtocolSchema=s.FeeDataSchema=s.validateSwapsTokenObject=s.validateFeatureFlagsResponse=s.PlatformConfigSchema=s.PriceImpactThresholdSchema=s.ChainConfigurationSchema=s.BridgeAssetSchema=s.truthyString=s.ActionTypes=s.FeatureId=s.FeeType=void 0;const a=e("@metamask/controller-utils"),n=e("@metamask/superstruct"),r=e("@metamask/utils");var i,o,c;!function(e){e.METABRIDGE="metabridge",e.REFUEL="refuel",e.TX_FEE="txFee"}(i||(s.FeeType=i={})),function(e){e.PERPS="perps"}(o||(s.FeatureId=o={})),function(e){e.BRIDGE="bridge",e.SWAP="swap",e.REFUEL="refuel"}(c||(s.ActionTypes=c={}));const l=(0,n.define)("HexAddress",e=>(0,a.isValidHexAddress)(e,{allowNonPrefixed:!1})),u=(0,n.define)("HexString",e=>(0,r.isStrictHexString)(e));s.truthyString=e=>Boolean(e?.length);const d=(0,n.pattern)((0,n.string)(),/^\d+$/u),m=(0,n.number)();s.BridgeAssetSchema=(0,n.type)({chainId:m,address:(0,n.string)(),assetId:r.CaipAssetTypeStruct,symbol:(0,n.string)(),name:(0,n.string)(),decimals:(0,n.number)(),icon:(0,n.optional)((0,n.nullable)((0,n.string)())),iconUrl:(0,n.optional)((0,n.nullable)((0,n.string)()))});const h=(0,n.type)({standard:(0,n.record)((0,n.string)(),(0,n.string)()),other:(0,n.record)((0,n.string)(),(0,n.string)())});s.ChainConfigurationSchema=(0,n.type)({isActiveSrc:(0,n.boolean)(),isActiveDest:(0,n.boolean)(),refreshRate:(0,n.optional)((0,n.number)()),topAssets:(0,n.optional)((0,n.array)((0,n.string)())),stablecoins:(0,n.optional)((0,n.array)((0,n.string)())),isUnifiedUIEnabled:(0,n.optional)((0,n.boolean)()),isSingleSwapBridgeButtonEnabled:(0,n.optional)((0,n.boolean)()),isGaslessSwapEnabled:(0,n.optional)((0,n.boolean)()),noFeeAssets:(0,n.optional)((0,n.array)((0,n.string)())),defaultPairs:(0,n.optional)(h)}),s.PriceImpactThresholdSchema=(0,n.type)({gasless:(0,n.number)(),normal:(0,n.number)()});const p=(0,n.type)({aggIds:(0,n.optional)((0,n.array)((0,n.string)())),bridgeIds:(0,n.optional)((0,n.array)((0,n.string)())),noFee:(0,n.optional)((0,n.boolean)())}),g=(0,n.enums)(Object.values(o));s.PlatformConfigSchema=(0,n.type)({priceImpactThreshold:(0,n.optional)(s.PriceImpactThresholdSchema),quoteRequestOverrides:(0,n.optional)((0,n.record)(g,(0,n.optional)(p))),minimumVersion:(0,n.string)(),refreshRate:(0,n.number)(),maxRefreshCount:(0,n.number)(),support:(0,n.boolean)(),chains:(0,n.record)((0,n.string)(),s.ChainConfigurationSchema),bip44DefaultPairs:(0,n.optional)((0,n.record)((0,n.string)(),(0,n.optional)(h)))});s.validateFeatureFlagsResponse=e=>(0,n.is)(e,s.PlatformConfigSchema);s.validateSwapsTokenObject=e=>(0,n.is)(e,s.BridgeAssetSchema),s.FeeDataSchema=(0,n.type)({amount:d,asset:s.BridgeAssetSchema}),s.ProtocolSchema=(0,n.type)({name:(0,n.string)(),displayName:(0,n.optional)((0,n.string)()),icon:(0,n.optional)((0,n.string)())}),s.StepSchema=(0,n.type)({action:(0,n.enums)(Object.values(c)),srcChainId:m,destChainId:(0,n.optional)(m),srcAsset:s.BridgeAssetSchema,destAsset:s.BridgeAssetSchema,srcAmount:(0,n.string)(),destAmount:(0,n.string)(),protocol:s.ProtocolSchema});const f=s.StepSchema;s.QuoteSchema=(0,n.type)({requestId:(0,n.string)(),srcChainId:m,srcAsset:s.BridgeAssetSchema,srcTokenAmount:(0,n.string)(),destChainId:m,destAsset:s.BridgeAssetSchema,destTokenAmount:(0,n.string)(),minDestTokenAmount:(0,n.string)(),feeData:(0,n.type)({[i.METABRIDGE]:s.FeeDataSchema,[i.TX_FEE]:(0,n.optional)((0,n.intersection)([s.FeeDataSchema,(0,n.type)({maxFeePerGas:(0,n.string)(),maxPriorityFeePerGas:(0,n.string)()})]))}),gasIncluded:(0,n.optional)((0,n.boolean)()),gasIncluded7702:(0,n.optional)((0,n.boolean)()),bridgeId:(0,n.string)(),bridges:(0,n.array)((0,n.string)()),steps:(0,n.array)(s.StepSchema),refuel:(0,n.optional)(f),priceData:(0,n.optional)((0,n.type)({totalFromAmountUsd:(0,n.optional)((0,n.string)()),totalToAmountUsd:(0,n.optional)((0,n.string)()),priceImpact:(0,n.optional)((0,n.string)()),totalFeeAmountUsd:(0,n.optional)((0,n.string)())}))}),s.TxDataSchema=(0,n.type)({chainId:(0,n.number)(),to:l,from:l,value:u,data:u,gasLimit:(0,n.nullable)((0,n.number)()),effectiveGas:(0,n.optional)((0,n.number)())}),s.BitcoinTradeDataSchema=(0,n.type)({unsignedPsbtBase64:(0,n.string)(),inputsToSign:(0,n.nullable)((0,n.array)((0,n.type)({})))}),s.QuoteResponseSchema=(0,n.type)({quote:s.QuoteSchema,estimatedProcessingTimeInSeconds:(0,n.number)(),approval:(0,n.optional)(s.TxDataSchema),trade:(0,n.union)([s.TxDataSchema,s.BitcoinTradeDataSchema,(0,n.string)()])}),s.BitcoinQuoteResponseSchema=(0,n.type)({quote:s.QuoteSchema,estimatedProcessingTimeInSeconds:(0,n.number)(),approval:(0,n.optional)(s.TxDataSchema),trade:s.BitcoinTradeDataSchema});s.validateQuoteResponse=e=>((0,n.assert)(e,s.QuoteResponseSchema),!0);s.validateBitcoinQuoteResponse=e=>((0,n.assert)(e,s.BitcoinQuoteResponseSchema),!0)}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/validators.cjs"}],[1244,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){!function(e){var s,a=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,n=Math.ceil,r=Math.floor,i="[BigNumber Error] ",o=i+"Number primitive has more than 15 significant digits: ",c=1e14,l=14,u=9007199254740991,d=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],m=1e7,h=1e9;function p(e){var t=0|e;return e>0||e===t?t:t-1}function g(e){for(var t,s,a=1,n=e.length,r=e[0]+"";a<n;){for(t=e[a++]+"",s=l-t.length;s--;t="0"+t);r+=t}for(n=r.length;48===r.charCodeAt(--n););return r.slice(0,n+1||1)}function f(e,t){var s,a,n=e.c,r=t.c,i=e.s,o=t.s,c=e.e,l=t.e;if(!i||!o)return null;if(s=n&&!n[0],a=r&&!r[0],s||a)return s?a?0:-o:i;if(i!=o)return i;if(s=i<0,a=c==l,!n||!r)return a?0:!n^s?1:-1;if(!a)return c>l^s?1:-1;for(o=(c=n.length)<(l=r.length)?c:l,i=0;i<o;i++)if(n[i]!=r[i])return n[i]>r[i]^s?1:-1;return c==l?0:c>l^s?1:-1}function y(e,t,s,a){if(e<t||e>s||e!==r(e))throw Error(i+(a||"Argument")+("number"==typeof e?e<t||e>s?" out of range: ":" not an integer: ":" not a primitive number: ")+String(e))}function w(e){var t=e.c.length-1;return p(e.e/l)==t&&e.c[t]%2!=0}function b(e,t){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(t<0?"e":"e+")+t}function k(e,t,s){var a,n;if(t<0){for(n=s+".";++t;n+=s);e=n+e}else if(++t>(a=e.length)){for(n=s,t-=a;--t;n+=s);e+=n}else t<a&&(e=e.slice(0,t)+"."+e.slice(t));return e}s=function e(t){var s,S,A,T,v,E,C,I,_,P,R=H.prototype={constructor:H,toString:null,valueOf:null},x=new H(1),N=20,M=4,D=-7,O=21,j=-1e7,B=1e7,L=!1,F=1,$=0,U={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},G="0123456789abcdefghijklmnopqrstuvwxyz",W=!0;function H(e,t){var s,n,i,c,d,m,h,p,g=this;if(!(g instanceof H))return new H(e,t);if(null==t){if(e&&!0===e._isBigNumber)return g.s=e.s,void(!e.c||e.e>B?g.c=g.e=null:e.e<j?g.c=[g.e=0]:(g.e=e.e,g.c=e.c.slice()));if((m="number"==typeof e)&&0*e==0){if(g.s=1/e<0?(e=-e,-1):1,e===~~e){for(c=0,d=e;d>=10;d/=10,c++);return void(c>B?g.c=g.e=null:(g.e=c,g.c=[e]))}p=String(e)}else{if(!a.test(p=String(e)))return A(g,p,m);g.s=45==p.charCodeAt(0)?(p=p.slice(1),-1):1}(c=p.indexOf("."))>-1&&(p=p.replace(".","")),(d=p.search(/e/i))>0?(c<0&&(c=d),c+=+p.slice(d+1),p=p.substring(0,d)):c<0&&(c=p.length)}else{if(y(t,2,G.length,"Base"),10==t&&W)return K(g=new H(e),N+g.e+1,M);if(p=String(e),m="number"==typeof e){if(0*e!=0)return A(g,p,m,t);if(g.s=1/e<0?(p=p.slice(1),-1):1,H.DEBUG&&p.replace(/^0\.0*|\./,"").length>15)throw Error(o+e)}else g.s=45===p.charCodeAt(0)?(p=p.slice(1),-1):1;for(s=G.slice(0,t),c=d=0,h=p.length;d<h;d++)if(s.indexOf(n=p.charAt(d))<0){if("."==n){if(d>c){c=h;continue}}else if(!i&&(p==p.toUpperCase()&&(p=p.toLowerCase())||p==p.toLowerCase()&&(p=p.toUpperCase()))){i=!0,d=-1,c=0;continue}return A(g,String(e),m,t)}m=!1,(c=(p=S(p,t,10,g.s)).indexOf("."))>-1?p=p.replace(".",""):c=p.length}for(d=0;48===p.charCodeAt(d);d++);for(h=p.length;48===p.charCodeAt(--h););if(p=p.slice(d,++h)){if(h-=d,m&&H.DEBUG&&h>15&&(e>u||e!==r(e)))throw Error(o+g.s*e);if((c=c-d-1)>B)g.c=g.e=null;else if(c<j)g.c=[g.e=0];else{if(g.e=c,g.c=[],d=(c+1)%l,c<0&&(d+=l),d<h){for(d&&g.c.push(+p.slice(0,d)),h-=l;d<h;)g.c.push(+p.slice(d,d+=l));d=l-(p=p.slice(d)).length}else d-=h;for(;d--;p+="0");g.c.push(+p)}}else g.c=[g.e=0]}function q(e,t,s,a){var n,r,i,o,c;if(null==s?s=M:y(s,0,8),!e.c)return e.toString();if(n=e.c[0],i=e.e,null==t)c=g(e.c),c=1==a||2==a&&(i<=D||i>=O)?b(c,i):k(c,i,"0");else if(r=(e=K(new H(e),t,s)).e,o=(c=g(e.c)).length,1==a||2==a&&(t<=r||r<=D)){for(;o<t;c+="0",o++);c=b(c,r)}else if(t-=i,c=k(c,r,"0"),r+1>o){if(--t>0)for(c+=".";t--;c+="0");}else if((t+=r-o)>0)for(r+1==o&&(c+=".");t--;c+="0");return e.s<0&&n?"-"+c:c}function Y(e,t){for(var s,a,n=1,r=new H(e[0]);n<e.length;n++)(!(a=new H(e[n])).s||(s=f(r,a))===t||0===s&&r.s===t)&&(r=a);return r}function V(e,t,s){for(var a=1,n=t.length;!t[--n];t.pop());for(n=t[0];n>=10;n/=10,a++);return(s=a+s*l-1)>B?e.c=e.e=null:s<j?e.c=[e.e=0]:(e.e=s,e.c=t),e}function K(e,t,s,a){var i,o,u,m,h,p,g,f=e.c,y=d;if(f){e:{for(i=1,m=f[0];m>=10;m/=10,i++);if((o=t-i)<0)o+=l,u=t,h=f[p=0],g=r(h/y[i-u-1]%10);else if((p=n((o+1)/l))>=f.length){if(!a)break e;for(;f.length<=p;f.push(0));h=g=0,i=1,u=(o%=l)-l+1}else{for(h=m=f[p],i=1;m>=10;m/=10,i++);g=(u=(o%=l)-l+i)<0?0:r(h/y[i-u-1]%10)}if(a=a||t<0||null!=f[p+1]||(u<0?h:h%y[i-u-1]),a=s<4?(g||a)&&(0==s||s==(e.s<0?3:2)):g>5||5==g&&(4==s||a||6==s&&(o>0?u>0?h/y[i-u]:0:f[p-1])%10&1||s==(e.s<0?8:7)),t<1||!f[0])return f.length=0,a?(t-=e.e+1,f[0]=y[(l-t%l)%l],e.e=-t||0):f[0]=e.e=0,e;if(0==o?(f.length=p,m=1,p--):(f.length=p+1,m=y[l-o],f[p]=u>0?r(h/y[i-u]%y[u])*m:0),a)for(;;){if(0==p){for(o=1,u=f[0];u>=10;u/=10,o++);for(u=f[0]+=m,m=1;u>=10;u/=10,m++);o!=m&&(e.e++,f[0]==c&&(f[0]=1));break}if(f[p]+=m,f[p]!=c)break;f[p--]=0,m=1}for(o=f.length;0===f[--o];f.pop());}e.e>B?e.c=e.e=null:e.e<j&&(e.c=[e.e=0])}return e}function J(e){var t,s=e.e;return null===s?e.toString():(t=g(e.c),t=s<=D||s>=O?b(t,s):k(t,s,"0"),e.s<0?"-"+t:t)}return H.clone=e,H.ROUND_UP=0,H.ROUND_DOWN=1,H.ROUND_CEIL=2,H.ROUND_FLOOR=3,H.ROUND_HALF_UP=4,H.ROUND_HALF_DOWN=5,H.ROUND_HALF_EVEN=6,H.ROUND_HALF_CEIL=7,H.ROUND_HALF_FLOOR=8,H.EUCLID=9,H.config=H.set=function(e){var t,s;if(null!=e){if("object"!=typeof e)throw Error(i+"Object expected: "+e);if(e.hasOwnProperty(t="DECIMAL_PLACES")&&(y(s=e[t],0,h,t),N=s),e.hasOwnProperty(t="ROUNDING_MODE")&&(y(s=e[t],0,8,t),M=s),e.hasOwnProperty(t="EXPONENTIAL_AT")&&((s=e[t])&&s.pop?(y(s[0],-h,0,t),y(s[1],0,h,t),D=s[0],O=s[1]):(y(s,-h,h,t),D=-(O=s<0?-s:s))),e.hasOwnProperty(t="RANGE"))if((s=e[t])&&s.pop)y(s[0],-h,-1,t),y(s[1],1,h,t),j=s[0],B=s[1];else{if(y(s,-h,h,t),!s)throw Error(i+t+" cannot be zero: "+s);j=-(B=s<0?-s:s)}if(e.hasOwnProperty(t="CRYPTO")){if((s=e[t])!==!!s)throw Error(i+t+" not true or false: "+s);if(s){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw L=!s,Error(i+"crypto unavailable");L=s}else L=s}if(e.hasOwnProperty(t="MODULO_MODE")&&(y(s=e[t],0,9,t),F=s),e.hasOwnProperty(t="POW_PRECISION")&&(y(s=e[t],0,h,t),$=s),e.hasOwnProperty(t="FORMAT")){if("object"!=typeof(s=e[t]))throw Error(i+t+" not an object: "+s);U=s}if(e.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(s=e[t])||/^.?$|[+\-.\s]|(.).*\1/.test(s))throw Error(i+t+" invalid: "+s);W="0123456789"==s.slice(0,10),G=s}}return{DECIMAL_PLACES:N,ROUNDING_MODE:M,EXPONENTIAL_AT:[D,O],RANGE:[j,B],CRYPTO:L,MODULO_MODE:F,POW_PRECISION:$,FORMAT:U,ALPHABET:G}},H.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!H.DEBUG)return!0;var t,s,a=e.c,n=e.e,o=e.s;e:if("[object Array]"=={}.toString.call(a)){if((1===o||-1===o)&&n>=-h&&n<=h&&n===r(n)){if(0===a[0]){if(0===n&&1===a.length)return!0;break e}if((t=(n+1)%l)<1&&(t+=l),String(a[0]).length==t){for(t=0;t<a.length;t++)if((s=a[t])<0||s>=c||s!==r(s))break e;if(0!==s)return!0}}}else if(null===a&&null===n&&(null===o||1===o||-1===o))return!0;throw Error(i+"Invalid BigNumber: "+e)},H.maximum=H.max=function(){return Y(arguments,-1)},H.minimum=H.min=function(){return Y(arguments,1)},H.random=(T=9007199254740992,v=Math.random()*T&2097151?function(){return r(Math.random()*T)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var t,s,a,o,c,u=0,m=[],p=new H(x);if(null==e?e=N:y(e,0,h),o=n(e/l),L)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(o*=2));u<o;)(c=131072*t[u]+(t[u+1]>>>11))>=9e15?(s=crypto.getRandomValues(new Uint32Array(2)),t[u]=s[0],t[u+1]=s[1]):(m.push(c%1e14),u+=2);u=o/2}else{if(!crypto.randomBytes)throw L=!1,Error(i+"crypto unavailable");for(t=crypto.randomBytes(o*=7);u<o;)(c=281474976710656*(31&t[u])+1099511627776*t[u+1]+4294967296*t[u+2]+16777216*t[u+3]+(t[u+4]<<16)+(t[u+5]<<8)+t[u+6])>=9e15?crypto.randomBytes(7).copy(t,u):(m.push(c%1e14),u+=7);u=o/7}if(!L)for(;u<o;)(c=v())<9e15&&(m[u++]=c%1e14);for(o=m[--u],e%=l,o&&e&&(c=d[l-e],m[u]=r(o/c)*c);0===m[u];m.pop(),u--);if(u<0)m=[a=0];else{for(a=-1;0===m[0];m.splice(0,1),a-=l);for(u=1,c=m[0];c>=10;c/=10,u++);u<l&&(a-=l-u)}return p.e=a,p.c=m,p}),H.sum=function(){for(var e=1,t=arguments,s=new H(t[0]);e<t.length;)s=s.plus(t[e++]);return s},S=function(){var e="0123456789";function t(e,t,s,a){for(var n,r,i=[0],o=0,c=e.length;o<c;){for(r=i.length;r--;i[r]*=t);for(i[0]+=a.indexOf(e.charAt(o++)),n=0;n<i.length;n++)i[n]>s-1&&(null==i[n+1]&&(i[n+1]=0),i[n+1]+=i[n]/s|0,i[n]%=s)}return i.reverse()}return function(a,n,r,i,o){var c,l,u,d,m,h,p,f,y=a.indexOf("."),w=N,b=M;for(y>=0&&(d=$,$=0,a=a.replace(".",""),h=(f=new H(n)).pow(a.length-y),$=d,f.c=t(k(g(h.c),h.e,"0"),10,r,e),f.e=f.c.length),u=d=(p=t(a,n,r,o?(c=G,e):(c=e,G))).length;0==p[--d];p.pop());if(!p[0])return c.charAt(0);if(y<0?--u:(h.c=p,h.e=u,h.s=i,p=(h=s(h,f,w,b,r)).c,m=h.r,u=h.e),y=p[l=u+w+1],d=r/2,m=m||l<0||null!=p[l+1],m=b<4?(null!=y||m)&&(0==b||b==(h.s<0?3:2)):y>d||y==d&&(4==b||m||6==b&&1&p[l-1]||b==(h.s<0?8:7)),l<1||!p[0])a=m?k(c.charAt(1),-w,c.charAt(0)):c.charAt(0);else{if(p.length=l,m)for(--r;++p[--l]>r;)p[l]=0,l||(++u,p=[1].concat(p));for(d=p.length;!p[--d];);for(y=0,a="";y<=d;a+=c.charAt(p[y++]));a=k(a,u,c.charAt(0))}return a}}(),s=function(){function e(e,t,s){var a,n,r,i,o=0,c=e.length,l=t%m,u=t/m|0;for(e=e.slice();c--;)o=((n=l*(r=e[c]%m)+(a=u*r+(i=e[c]/m|0)*l)%m*m+o)/s|0)+(a/m|0)+u*i,e[c]=n%s;return o&&(e=[o].concat(e)),e}function t(e,t,s,a){var n,r;if(s!=a)r=s>a?1:-1;else for(n=r=0;n<s;n++)if(e[n]!=t[n]){r=e[n]>t[n]?1:-1;break}return r}function s(e,t,s,a){for(var n=0;s--;)e[s]-=n,n=e[s]<t[s]?1:0,e[s]=n*a+e[s]-t[s];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(a,n,i,o,u){var d,m,h,g,f,y,w,b,k,S,A,T,v,E,C,I,_,P=a.s==n.s?1:-1,R=a.c,x=n.c;if(!(R&&R[0]&&x&&x[0]))return new H(a.s&&n.s&&(R?!x||R[0]!=x[0]:x)?R&&0==R[0]||!x?0*P:P/0:NaN);for(k=(b=new H(P)).c=[],P=i+(m=a.e-n.e)+1,u||(u=c,m=p(a.e/l)-p(n.e/l),P=P/l|0),h=0;x[h]==(R[h]||0);h++);if(x[h]>(R[h]||0)&&m--,P<0)k.push(1),g=!0;else{for(E=R.length,I=x.length,h=0,P+=2,(f=r(u/(x[0]+1)))>1&&(x=e(x,f,u),R=e(R,f,u),I=x.length,E=R.length),v=I,A=(S=R.slice(0,I)).length;A<I;S[A++]=0);_=x.slice(),_=[0].concat(_),C=x[0],x[1]>=u/2&&C++;do{if(f=0,(d=t(x,S,I,A))<0){if(T=S[0],I!=A&&(T=T*u+(S[1]||0)),(f=r(T/C))>1)for(f>=u&&(f=u-1),w=(y=e(x,f,u)).length,A=S.length;1==t(y,S,w,A);)f--,s(y,I<w?_:x,w,u),w=y.length,d=1;else 0==f&&(d=f=1),w=(y=x.slice()).length;if(w<A&&(y=[0].concat(y)),s(S,y,A,u),A=S.length,-1==d)for(;t(x,S,I,A)<1;)f++,s(S,I<A?_:x,A,u),A=S.length}else 0===d&&(f++,S=[0]);k[h++]=f,S[0]?S[A++]=R[v]||0:(S=[R[v]],A=1)}while((v++<E||null!=S[0])&&P--);g=null!=S[0],k[0]||k.splice(0,1)}if(u==c){for(h=1,P=k[0];P>=10;P/=10,h++);K(b,i+(b.e=h+m*l-1)+1,o,g)}else b.e=m,b.r=+g;return b}}(),E=/^(-?)0([xbo])(?=\w[\w.]*$)/i,C=/^([^.]+)\.$/,I=/^\.([^.]+)$/,_=/^-?(Infinity|NaN)$/,P=/^\s*\+(?=[\w.])|^\s+|\s+$/g,A=function(e,t,s,a){var n,r=s?t:t.replace(P,"");if(_.test(r))e.s=isNaN(r)?null:r<0?-1:1;else{if(!s&&(r=r.replace(E,function(e,t,s){return n="x"==(s=s.toLowerCase())?16:"b"==s?2:8,a&&a!=n?e:t}),a&&(n=a,r=r.replace(C,"$1").replace(I,"0.$1")),t!=r))return new H(r,n);if(H.DEBUG)throw Error(i+"Not a"+(a?" base "+a:"")+" number: "+t);e.s=null}e.c=e.e=null},R.absoluteValue=R.abs=function(){var e=new H(this);return e.s<0&&(e.s=1),e},R.comparedTo=function(e,t){return f(this,new H(e,t))},R.decimalPlaces=R.dp=function(e,t){var s,a,n,r=this;if(null!=e)return y(e,0,h),null==t?t=M:y(t,0,8),K(new H(r),e+r.e+1,t);if(!(s=r.c))return null;if(a=((n=s.length-1)-p(this.e/l))*l,n=s[n])for(;n%10==0;n/=10,a--);return a<0&&(a=0),a},R.dividedBy=R.div=function(e,t){return s(this,new H(e,t),N,M)},R.dividedToIntegerBy=R.idiv=function(e,t){return s(this,new H(e,t),0,1)},R.exponentiatedBy=R.pow=function(e,t){var s,a,o,c,u,d,m,h,p=this;if((e=new H(e)).c&&!e.isInteger())throw Error(i+"Exponent not an integer: "+J(e));if(null!=t&&(t=new H(t)),u=e.e>14,!p.c||!p.c[0]||1==p.c[0]&&!p.e&&1==p.c.length||!e.c||!e.c[0])return h=new H(Math.pow(+J(p),u?e.s*(2-w(e)):+J(e))),t?h.mod(t):h;if(d=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new H(NaN);(a=!d&&p.isInteger()&&t.isInteger())&&(p=p.mod(t))}else{if(e.e>9&&(p.e>0||p.e<-1||(0==p.e?p.c[0]>1||u&&p.c[1]>=24e7:p.c[0]<8e13||u&&p.c[0]<=9999975e7)))return c=p.s<0&&w(e)?-0:0,p.e>-1&&(c=1/c),new H(d?1/c:c);$&&(c=n($/l+2))}for(u?(s=new H(.5),d&&(e.s=1),m=w(e)):m=(o=Math.abs(+J(e)))%2,h=new H(x);;){if(m){if(!(h=h.times(p)).c)break;c?h.c.length>c&&(h.c.length=c):a&&(h=h.mod(t))}if(o){if(0===(o=r(o/2)))break;m=o%2}else if(K(e=e.times(s),e.e+1,1),e.e>14)m=w(e);else{if(0===(o=+J(e)))break;m=o%2}p=p.times(p),c?p.c&&p.c.length>c&&(p.c.length=c):a&&(p=p.mod(t))}return a?h:(d&&(h=x.div(h)),t?h.mod(t):c?K(h,$,M,undefined):h)},R.integerValue=function(e){var t=new H(this);return null==e?e=M:y(e,0,8),K(t,t.e+1,e)},R.isEqualTo=R.eq=function(e,t){return 0===f(this,new H(e,t))},R.isFinite=function(){return!!this.c},R.isGreaterThan=R.gt=function(e,t){return f(this,new H(e,t))>0},R.isGreaterThanOrEqualTo=R.gte=function(e,t){return 1===(t=f(this,new H(e,t)))||0===t},R.isInteger=function(){return!!this.c&&p(this.e/l)>this.c.length-2},R.isLessThan=R.lt=function(e,t){return f(this,new H(e,t))<0},R.isLessThanOrEqualTo=R.lte=function(e,t){return-1===(t=f(this,new H(e,t)))||0===t},R.isNaN=function(){return!this.s},R.isNegative=function(){return this.s<0},R.isPositive=function(){return this.s>0},R.isZero=function(){return!!this.c&&0==this.c[0]},R.minus=function(e,t){var s,a,n,r,i=this,o=i.s;if(t=(e=new H(e,t)).s,!o||!t)return new H(NaN);if(o!=t)return e.s=-t,i.plus(e);var u=i.e/l,d=e.e/l,m=i.c,h=e.c;if(!u||!d){if(!m||!h)return m?(e.s=-t,e):new H(h?i:NaN);if(!m[0]||!h[0])return h[0]?(e.s=-t,e):new H(m[0]?i:3==M?-0:0)}if(u=p(u),d=p(d),m=m.slice(),o=u-d){for((r=o<0)?(o=-o,n=m):(d=u,n=h),n.reverse(),t=o;t--;n.push(0));n.reverse()}else for(a=(r=(o=m.length)<(t=h.length))?o:t,o=t=0;t<a;t++)if(m[t]!=h[t]){r=m[t]<h[t];break}if(r&&(n=m,m=h,h=n,e.s=-e.s),(t=(a=h.length)-(s=m.length))>0)for(;t--;m[s++]=0);for(t=c-1;a>o;){if(m[--a]<h[a]){for(s=a;s&&!m[--s];m[s]=t);--m[s],m[a]+=c}m[a]-=h[a]}for(;0==m[0];m.splice(0,1),--d);return m[0]?V(e,m,d):(e.s=3==M?-1:1,e.c=[e.e=0],e)},R.modulo=R.mod=function(e,t){var a,n,r=this;return e=new H(e,t),!r.c||!e.s||e.c&&!e.c[0]?new H(NaN):!e.c||r.c&&!r.c[0]?new H(r):(9==F?(n=e.s,e.s=1,a=s(r,e,0,3),e.s=n,a.s*=n):a=s(r,e,0,F),(e=r.minus(a.times(e))).c[0]||1!=F||(e.s=r.s),e)},R.multipliedBy=R.times=function(e,t){var s,a,n,r,i,o,u,d,h,g,f,y,w,b,k,S=this,A=S.c,T=(e=new H(e,t)).c;if(!(A&&T&&A[0]&&T[0]))return!S.s||!e.s||A&&!A[0]&&!T||T&&!T[0]&&!A?e.c=e.e=e.s=null:(e.s*=S.s,A&&T?(e.c=[0],e.e=0):e.c=e.e=null),e;for(a=p(S.e/l)+p(e.e/l),e.s*=S.s,(u=A.length)<(g=T.length)&&(w=A,A=T,T=w,n=u,u=g,g=n),n=u+g,w=[];n--;w.push(0));for(b=c,k=m,n=g;--n>=0;){for(s=0,f=T[n]%k,y=T[n]/k|0,r=n+(i=u);r>n;)s=((d=f*(d=A[--i]%k)+(o=y*d+(h=A[i]/k|0)*f)%k*k+w[r]+s)/b|0)+(o/k|0)+y*h,w[r--]=d%b;w[r]=s}return s?++a:w.splice(0,1),V(e,w,a)},R.negated=function(){var e=new H(this);return e.s=-e.s||null,e},R.plus=function(e,t){var s,a=this,n=a.s;if(t=(e=new H(e,t)).s,!n||!t)return new H(NaN);if(n!=t)return e.s=-t,a.minus(e);var r=a.e/l,i=e.e/l,o=a.c,u=e.c;if(!r||!i){if(!o||!u)return new H(n/0);if(!o[0]||!u[0])return u[0]?e:new H(o[0]?a:0*n)}if(r=p(r),i=p(i),o=o.slice(),n=r-i){for(n>0?(i=r,s=u):(n=-n,s=o),s.reverse();n--;s.push(0));s.reverse()}for((n=o.length)-(t=u.length)<0&&(s=u,u=o,o=s,t=n),n=0;t;)n=(o[--t]=o[t]+u[t]+n)/c|0,o[t]=c===o[t]?0:o[t]%c;return n&&(o=[n].concat(o),++i),V(e,o,i)},R.precision=R.sd=function(e,t){var s,a,n,r=this;if(null!=e&&e!==!!e)return y(e,1,h),null==t?t=M:y(t,0,8),K(new H(r),e,t);if(!(s=r.c))return null;if(a=(n=s.length-1)*l+1,n=s[n]){for(;n%10==0;n/=10,a--);for(n=s[0];n>=10;n/=10,a++);}return e&&r.e+1>a&&(a=r.e+1),a},R.shiftedBy=function(e){return y(e,-9007199254740991,u),this.times("1e"+e)},R.squareRoot=R.sqrt=function(){var e,t,a,n,r,i=this,o=i.c,c=i.s,l=i.e,u=N+4,d=new H("0.5");if(1!==c||!o||!o[0])return new H(!c||c<0&&(!o||o[0])?NaN:o?i:1/0);if(0==(c=Math.sqrt(+J(i)))||c==1/0?(((t=g(o)).length+l)%2==0&&(t+="0"),c=Math.sqrt(+t),l=p((l+1)/2)-(l<0||l%2),a=new H(t=c==1/0?"5e"+l:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+l)):a=new H(c+""),a.c[0])for((c=(l=a.e)+u)<3&&(c=0);;)if(r=a,a=d.times(r.plus(s(i,r,u,1))),g(r.c).slice(0,c)===(t=g(a.c)).slice(0,c)){if(a.e<l&&--c,"9999"!=(t=t.slice(c-3,c+1))&&(n||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(K(a,a.e+N+2,1),e=!a.times(a).eq(i));break}if(!n&&(K(r,r.e+N+2,0),r.times(r).eq(i))){a=r;break}u+=4,c+=4,n=1}return K(a,a.e+N+1,M,e)},R.toExponential=function(e,t){return null!=e&&(y(e,0,h),e++),q(this,e,t,1)},R.toFixed=function(e,t){return null!=e&&(y(e,0,h),e=e+this.e+1),q(this,e,t)},R.toFormat=function(e,t,s){var a,n=this;if(null==s)null!=e&&t&&"object"==typeof t?(s=t,t=null):e&&"object"==typeof e?(s=e,e=t=null):s=U;else if("object"!=typeof s)throw Error(i+"Argument not an object: "+s);if(a=n.toFixed(e,t),n.c){var r,o=a.split("."),c=+s.groupSize,l=+s.secondaryGroupSize,u=s.groupSeparator||"",d=o[0],m=o[1],h=n.s<0,p=h?d.slice(1):d,g=p.length;if(l&&(r=c,c=l,l=r,g-=r),c>0&&g>0){for(r=g%c||c,d=p.substr(0,r);r<g;r+=c)d+=u+p.substr(r,c);l>0&&(d+=u+p.slice(r)),h&&(d="-"+d)}a=m?d+(s.decimalSeparator||"")+((l=+s.fractionGroupSize)?m.replace(new RegExp("\\d{"+l+"}\\B","g"),"$&"+(s.fractionGroupSeparator||"")):m):d}return(s.prefix||"")+a+(s.suffix||"")},R.toFraction=function(e){var t,a,n,r,o,c,u,m,h,p,f,y,w=this,b=w.c;if(null!=e&&(!(u=new H(e)).isInteger()&&(u.c||1!==u.s)||u.lt(x)))throw Error(i+"Argument "+(u.isInteger()?"out of range: ":"not an integer: ")+J(u));if(!b)return new H(w);for(t=new H(x),h=a=new H(x),n=m=new H(x),y=g(b),o=t.e=y.length-w.e-1,t.c[0]=d[(c=o%l)<0?l+c:c],e=!e||u.comparedTo(t)>0?o>0?t:h:u,c=B,B=1/0,u=new H(y),m.c[0]=0;p=s(u,t,0,1),1!=(r=a.plus(p.times(n))).comparedTo(e);)a=n,n=r,h=m.plus(p.times(r=h)),m=r,t=u.minus(p.times(r=t)),u=r;return r=s(e.minus(a),n,0,1),m=m.plus(r.times(h)),a=a.plus(r.times(n)),m.s=h.s=w.s,f=s(h,n,o*=2,M).minus(w).abs().comparedTo(s(m,a,o,M).minus(w).abs())<1?[h,n]:[m,a],B=c,f},R.toNumber=function(){return+J(this)},R.toPrecision=function(e,t){return null!=e&&y(e,1,h),q(this,e,t,2)},R.toString=function(e){var t,s=this,a=s.s,n=s.e;return null===n?a?(t="Infinity",a<0&&(t="-"+t)):t="NaN":(null==e?t=n<=D||n>=O?b(g(s.c),n):k(g(s.c),n,"0"):10===e&&W?t=k(g((s=K(new H(s),N+n+1,M)).c),s.e,"0"):(y(e,2,G.length,"Base"),t=S(k(g(s.c),n,"0"),10,e,a,!0)),a<0&&s.c[0]&&(t="-"+t)),t},R.valueOf=R.toJSON=function(){return J(this)},R._isBigNumber=!0,null!=t&&H.set(t),H}(),s.default=s.BigNumber=s,"function"==typeof define&&define.amd?define(function(){return s}):void 0!==t&&t.exports?t.exports=s:(e||(e="undefined"!=typeof self&&self?self:window),e.BigNumber=s)}(this)}}},{package:"@metamask/bridge-controller>bignumber.js",file:"node_modules/@metamask/bridge-controller/node_modules/bignumber.js/bignumber.js"}],[1245,{"./constants.cjs":1246,"./types.cjs":1248,"./utils/bridge-status.cjs":1249,"./utils/gas.cjs":1250,"./utils/metrics.cjs":1251,"./utils/transaction.cjs":1254,"@metamask/bridge-controller":1229,"@metamask/controller-utils":1301,"@metamask/polling-controller":2280,"@metamask/transaction-controller":2754,"@metamask/utils":2799},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,i,o,c,l,u,d,m,h,p,g,f,y,w,b,k,S,A,T,v,E,C,I,_,P,R,x=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},N=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.BridgeStatusController=void 0;const M=e("@metamask/bridge-controller"),D=e("@metamask/controller-utils"),O=e("@metamask/polling-controller"),j=e("@metamask/transaction-controller"),B=e("@metamask/utils"),L=e("./constants.cjs"),F=e("./types.cjs"),$=e("./utils/bridge-status.cjs"),U=e("./utils/gas.cjs"),G=e("./utils/metrics.cjs"),W=e("./utils/transaction.cjs"),H={txHistory:{includeInStateLogs:!0,persist:!0,anonymous:!1,usedInUi:!0}};class q extends((0,O.StaticIntervalPollingController)()){constructor({messenger:e,state:t,clientId:s,fetchFn:O,addTransactionFn:q,addTransactionBatchFn:Y,updateTransactionFn:V,estimateGasFeeFn:K,config:J,traceFn:z}){super({name:L.BRIDGE_STATUS_CONTROLLER_NAME,metadata:H,messenger:e,state:{...L.DEFAULT_BRIDGE_STATUS_CONTROLLER_STATE,...t}}),a.add(this),n.set(this,{}),r.set(this,void 0),i.set(this,void 0),o.set(this,void 0),c.set(this,void 0),l.set(this,void 0),u.set(this,void 0),d.set(this,void 0),m.set(this,void 0),h.set(this,({id:e})=>{const t=this.state.txHistory[e]?e:Object.keys(this.state.txHistory).find(t=>this.state.txHistory[t].approvalTxId===e);t&&this.update(e=>{e.txHistory[t].status.status=M.StatusTypes.FAILED})}),this.resetState=()=>{this.update(e=>{e.txHistory=L.DEFAULT_BRIDGE_STATUS_CONTROLLER_STATE.txHistory})},this.wipeBridgeStatus=({address:e,ignoreNetwork:t})=>{if(t)this.update(e=>{e.txHistory=L.DEFAULT_BRIDGE_STATUS_CONTROLLER_STATE.txHistory});else{const{selectedNetworkClientId:t}=this.messagingSystem.call("NetworkController:getState"),s=this.messagingSystem.call("NetworkController:getNetworkClientById",t).configuration.chainId;N(this,A,"f").call(this,e,s)}},this.restartPollingForFailedAttempts=e=>{const{txMetaId:t,txHash:s}=e;if(!t&&!s)throw new Error("Either txMetaId or txHash must be provided");let a;if(t?this.state.txHistory[t]&&(a=t):s&&(a=Object.keys(this.state.txHistory).find(e=>this.state.txHistory[e].status.srcChain.txHash===s)),!a)throw new Error("No bridge transaction history found for "+(t?`txMetaId: ${t}`:`txHash: ${s}`));const r=this.state.txHistory[a];this.update(e=>{a&&(e.txHistory[a].attempts=undefined)});if((0,M.isCrossChain)(r.quote.srcChainId,r.quote.destChainId)){N(this,n,"f")[a]||N(this,f,"f").call(this,a)}},this.getBridgeHistoryItemByTxMetaId=e=>this.state.txHistory[e],p.set(this,()=>{const{txHistory:e}=this.state;Object.values(e).filter(e=>e.status.status===M.StatusTypes.PENDING||e.status.status===M.StatusTypes.UNKNOWN).filter(e=>!N(this,n,"f")[e.txMetaId]).filter(e=>(0,M.isCrossChain)(e.quote.srcChainId,e.quote.destChainId)).forEach(e=>{const t=e.txMetaId;(0,$.shouldSkipFetchDueToFetchFailures)(e.attempts)||N(this,f,"f").call(this,t)})}),g.set(this,e=>{const{bridgeTxMeta:t,statusRequest:s,quoteResponse:a,startTime:n,slippagePercentage:r,initialDestAssetBalance:i,targetContractAddress:o,approvalTxId:c,isStxEnabled:l,accountAddress:u}=e,d={txMetaId:t.id,batchId:t.batchId,quote:a.quote,startTime:n,estimatedProcessingTimeInSeconds:a.estimatedProcessingTimeInSeconds,slippagePercentage:r,pricingData:{amountSent:a.sentAmount?.amount??"0",amountSentInUsd:a.sentAmount?.usd??undefined,quotedGasInUsd:a.gasFee?.effective?.usd??undefined,quotedReturnInUsd:a.toTokenAmount?.usd??undefined,quotedGasAmount:a.gasFee?.effective?.amount??undefined},initialDestAssetBalance:i,targetContractAddress:o,account:u,status:{status:M.StatusTypes.PENDING,srcChain:{chainId:s.srcChainId,txHash:s.srcTxHash}},hasApprovalTx:Boolean(a.approval),approvalTxId:c,isStxEnabled:l??!1,featureId:a.featureId};this.update(e=>{e.txHistory[t.id]=d})}),f.set(this,e=>{const t=N(this,n,"f")[e];t&&this.stopPollingByPollingToken(t);const s=this.state.txHistory[e];if(!s)return;const{quote:a}=s;(0,M.isCrossChain)(a.srcChainId,a.destChainId)&&(N(this,n,"f")[e]=this.startPolling({bridgeTxMetaId:e}))}),this.startPollingForBridgeTxStatus=e=>{const{bridgeTxMeta:t}=e;N(this,g,"f").call(this,e),N(this,f,"f").call(this,t.id)},this._executePoll=async e=>{await N(this,b,"f").call(this,e)},w.set(this,e=>{const{attempts:t}=this.state.txHistory[e],s=t?{counter:t.counter+1,lastAttemptTime:Date.now()}:{counter:1,lastAttemptTime:Date.now()},a=N(this,n,"f")[e];s.counter>=L.MAX_ATTEMPTS&&a&&(this.stopPollingByPollingToken(a),delete N(this,n,"f")[e]),this.update(t=>{t.txHistory[e].attempts=s})}),b.set(this,async({bridgeTxMetaId:e})=>{const{txHistory:t}=this.state;if(!(0,$.shouldSkipFetchDueToFetchFailures)(t[e]?.attempts))try{const s=t[e],a=N(this,k,"f").call(this,e);if(!a)return;N(this,S,"f").call(this,e,a);const c=(0,$.getStatusRequestWithSrcTxHash)(s.quote,a),{status:l,validationFailures:u}=await(0,$.fetchBridgeTxStatus)(c,N(this,r,"f"),N(this,i,"f"),N(this,o,"f").customBridgeApiBaseUrl);if(u.length>0)throw N(this,R,"f").call(this,M.UnifiedSwapBridgeEventName.StatusValidationFailed,e,{failures:u}),new Error(`Bridge status validation failed: ${u.join(", ")}`);const d={...s,status:l,completionTime:l.status===M.StatusTypes.COMPLETE||l.status===M.StatusTypes.FAILED?Date.now():undefined,attempts:undefined};this.update(t=>{t.txHistory[e]=d});const m=N(this,n,"f")[e];if((l.status===M.StatusTypes.COMPLETE||l.status===M.StatusTypes.FAILED)&&m){if(this.stopPollingByPollingToken(m),delete N(this,n,"f")[e],s.featureId)return;l.status===M.StatusTypes.COMPLETE&&N(this,R,"f").call(this,M.UnifiedSwapBridgeEventName.Completed,e),l.status===M.StatusTypes.FAILED&&N(this,R,"f").call(this,M.UnifiedSwapBridgeEventName.Failed,e)}}catch(t){console.warn("Failed to fetch bridge tx status",t),N(this,w,"f").call(this,e)}}),k.set(this,e=>{const{txHistory:t}=this.state,s=t[e].status.srcChain.txHash;if(s)return s;const a=this.messagingSystem.call("TransactionController:getState").transactions.find(t=>t.id===e);return a?.hash}),S.set(this,(e,t)=>{const{txHistory:s}=this.state;s[e].status.srcChain.txHash||this.update(s=>{s.txHistory[e].status.srcChain.txHash=t})}),A.set(this,(e,t)=>{const s=Object.keys(this.state.txHistory).filter(s=>{const a=this.state.txHistory[s],n=(0,B.numberToHex)(a.quote.srcChainId);return a.account===e&&n===t});s.forEach(e=>{N(this,n,"f")[e]&&this.stopPollingByPollingToken(N(this,n,"f")[e])}),this.update(e=>{e.txHistory=s.reduce((e,t)=>(delete e[t],e),e.txHistory)})}),T.set(this,async(e,t)=>{if(!t.metadata?.snap?.id)throw new Error("Failed to submit cross-chain swap transaction: undefined snap id");const s=(0,W.getClientRequest)(e,t),a=await this.messagingSystem.call("SnapController:handleRequest",s);return(0,W.handleNonEvmTxResponse)(a,e,t)}),v.set(this,async e=>{const t=await e,s=this.messagingSystem.call("TransactionController:getState").transactions.find(e=>e.hash===t);if(!s)throw new Error("Failed to submit cross-chain swap tx: txMeta for txHash was not found");return s}),E.set(this,async(e,t,s)=>{const{approval:a}=t;if(a){const n=async()=>{await N(this,I,"f").call(this,t);const n=await N(this,C,"f").call(this,{transactionType:e?j.TransactionType.bridgeApproval:j.TransactionType.swapApproval,trade:a,requireApproval:s});return await(0,W.handleApprovalDelay)(t),n};return await N(this,m,"f").call(this,{name:e?L.TraceName.BridgeTransactionApprovalCompleted:L.TraceName.SwapTransactionApprovalCompleted,data:{srcChainId:(0,M.formatChainIdToCaip)(t.quote.srcChainId),stxEnabled:!1}},n)}return undefined}),C.set(this,async({transactionType:e,trade:t,requireApproval:s=!1})=>{const a=(0,W.generateActionId)().toString();if(!this.messagingSystem.call("AccountsController:getAccountByAddress",t.from))throw new Error("Failed to submit cross-chain swap transaction: unknown account in trade data");const n=(0,M.formatChainIdToHex)(t.chainId),r=this.messagingSystem.call("NetworkController:findNetworkClientIdByChainId",n),i={actionId:a,networkClientId:r,requireApproval:s,type:e,origin:"metamask"},o={...t,chainId:n,gasLimit:t.gasLimit?.toString(),gas:t.gasLimit?.toString()},l={...o,...await N(this,_,"f").call(this,o,r,n)},{result:u}=await N(this,c,"f").call(this,l,i);return await N(this,v,"f").call(this,u)}),I.set(this,async e=>{const t=await(0,W.getUSDTAllowanceResetTx)(this.messagingSystem,e);t&&await N(this,C,"f").call(this,{transactionType:j.TransactionType.bridgeApproval,trade:t})}),_.set(this,async(e,t,s)=>{const{gasFeeEstimates:a}=this.messagingSystem.call("GasFeeController:getState"),{estimates:n}=await N(this,d,"f").call(this,{transactionParams:e,chainId:s,networkClientId:t}),{maxFeePerGas:r,maxPriorityFeePerGas:i}=(0,U.getTxGasEstimates)({networkGasFeeEstimates:a,txGasFeeEstimates:n});return{maxFeePerGas:r,maxPriorityFeePerGas:i,gas:(0,D.toHex)(e.gas??0)}}),P.set(this,async e=>{const t=await(0,W.getAddTransactionBatchParams)({messagingSystem:this.messagingSystem,estimateGasFeeFn:N(this,d,"f"),...e}),s={[j.TransactionType.bridgeApproval]:t.transactions.find(({type:e})=>e===j.TransactionType.bridgeApproval)?.params.data,[j.TransactionType.swapApproval]:t.transactions.find(({type:e})=>e===j.TransactionType.swapApproval)?.params.data,[j.TransactionType.bridge]:t.transactions.find(({type:e})=>e===j.TransactionType.bridge)?.params.data,[j.TransactionType.swap]:t.transactions.find(({type:e})=>e===j.TransactionType.swap)?.params.data},{batchId:a}=await N(this,l,"f").call(this,t),{approvalMeta:n,tradeMeta:r}=(0,W.findAndUpdateTransactionsInBatch)({messagingSystem:this.messagingSystem,updateTransactionFn:N(this,u,"f"),batchId:a,txDataByType:s});if(!r)throw new Error("Failed to update cross-chain swap transaction batch: tradeMeta not found");return{approvalMeta:n,tradeMeta:r}}),this.submitTx=async(e,t,s)=>{this.messagingSystem.call("BridgeController:stopPollingForQuotes");const n=N(this,a,"m",y).call(this,e);if(!n)throw new Error("Failed to submit cross-chain swap transaction: undefined multichain account");const i=(0,M.isHardwareWallet)(n),o=(0,G.getPreConfirmationPropertiesFromQuote)(t,s,i);let c,l;!t.featureId&&N(this,R,"f").call(this,M.UnifiedSwapBridgeEventName.Submitted,undefined,o);const u=Date.now(),d=(0,M.isCrossChain)(t.quote.srcChainId,t.quote.destChainId);if((0,M.isNonEvmChainId)(t.quote.srcChainId)&&("string"==typeof t.trade||"object"==typeof t.trade&&"unsignedPsbtBase64"in t.trade))c=await N(this,m,"f").call(this,{name:d?L.TraceName.BridgeTransactionCompleted:L.TraceName.SwapTransactionCompleted,data:{srcChainId:(0,M.formatChainIdToCaip)(t.quote.srcChainId),stxEnabled:!1}},async()=>{try{return await N(this,T,"f").call(this,t,n)}catch(e){throw!t.featureId&&N(this,R,"f").call(this,M.UnifiedSwapBridgeEventName.Failed,c?.id,{error_message:e?.message,...o}),e}});else{const e=N(this,r,"f")===F.BridgeClientId.MOBILE&&i;c=await N(this,m,"f").call(this,{name:d?L.TraceName.BridgeTransactionCompleted:L.TraceName.SwapTransactionCompleted,data:{srcChainId:(0,M.formatChainIdToCaip)(t.quote.srcChainId),stxEnabled:s}},async()=>{if(s||t.quote.gasIncluded7702){const{tradeMeta:s,approvalMeta:a}=await N(this,P,"f").call(this,{isBridgeTx:d,resetApproval:await(0,W.getUSDTAllowanceResetTx)(this.messagingSystem,t),approval:t.approval,trade:t.trade,quoteResponse:t,requireApproval:e});return l=a?.id,s}const a=await N(this,E,"f").call(this,d,t,e);return l=a?.id,await(0,W.handleMobileHardwareWalletDelay)(e),await N(this,C,"f").call(this,{transactionType:d?j.TransactionType.bridge:j.TransactionType.swap,trade:t.trade,requireApproval:e})})}try{N(this,g,"f").call(this,{accountAddress:n.address,bridgeTxMeta:c,statusRequest:{...(0,W.getStatusRequestParams)(t),srcTxHash:c.hash},quoteResponse:t,slippagePercentage:0,isStxEnabled:s,startTime:u,approvalTxId:l}),(0,M.isNonEvmChainId)(t.quote.srcChainId)&&(N(this,f,"f").call(this,c.id),d||N(this,R,"f").call(this,M.UnifiedSwapBridgeEventName.Completed,c.id))}catch{}return c},R.set(this,(e,t,s)=>{const a={action_type:M.MetricsActionType.SWAPBRIDGE_V1,...s??{}};if(!t)return void this.messagingSystem.call("BridgeController:trackUnifiedSwapBridgeEvent",e,a);const n=this.state.txHistory[t];if(!n)return void this.messagingSystem.call("BridgeController:trackUnifiedSwapBridgeEvent",e,s??{});const r=(0,G.getRequestParamFromHistory)(n);if(e===M.UnifiedSwapBridgeEventName.StatusValidationFailed){const{chain_id_source:t,chain_id_destination:s,token_address_source:i,token_address_destination:o}=r;return void this.messagingSystem.call("BridgeController:trackUnifiedSwapBridgeEvent",e,{...a,chain_id_source:t,chain_id_destination:s,token_address_source:i,token_address_destination:o,refresh_count:n.attempts?.counter??0})}if(n.featureId)return;const i=this.messagingSystem.call("AccountsController:getAccountByAddress",n.account),{transactions:o}=this.messagingSystem.call("TransactionController:getState"),c=o?.find(({id:e})=>e===t),l=o?.find(({id:e})=>e===n.approvalTxId),u={...a,...r,...(0,G.getRequestMetadataFromHistory)(n,i),...(0,G.getTradeDataFromHistory)(n),...(0,G.getTxStatusesFromHistory)(n),...(0,G.getFinalizedTxProperties)(n,c,l),...(0,G.getPriceImpactFromQuote)(n.quote)};this.messagingSystem.call("BridgeController:trackUnifiedSwapBridgeEvent",e,u)}),x(this,r,s,"f"),x(this,i,O,"f"),x(this,c,q,"f"),x(this,l,Y,"f"),x(this,u,V,"f"),x(this,d,K,"f"),x(this,o,{customBridgeApiBaseUrl:J?.customBridgeApiBaseUrl??L.BRIDGE_PROD_API_BASE_URL},"f"),x(this,m,z??((e,t)=>t?.()),"f"),this.messagingSystem.registerActionHandler(`${L.BRIDGE_STATUS_CONTROLLER_NAME}:startPollingForBridgeTxStatus`,this.startPollingForBridgeTxStatus.bind(this)),this.messagingSystem.registerActionHandler(`${L.BRIDGE_STATUS_CONTROLLER_NAME}:wipeBridgeStatus`,this.wipeBridgeStatus.bind(this)),this.messagingSystem.registerActionHandler(`${L.BRIDGE_STATUS_CONTROLLER_NAME}:resetState`,this.resetState.bind(this)),this.messagingSystem.registerActionHandler(`${L.BRIDGE_STATUS_CONTROLLER_NAME}:submitTx`,this.submitTx.bind(this)),this.messagingSystem.registerActionHandler(`${L.BRIDGE_STATUS_CONTROLLER_NAME}:restartPollingForFailedAttempts`,this.restartPollingForFailedAttempts.bind(this)),this.messagingSystem.registerActionHandler(`${L.BRIDGE_STATUS_CONTROLLER_NAME}:getBridgeHistoryItemByTxMetaId`,this.getBridgeHistoryItemByTxMetaId.bind(this)),this.setIntervalLength(L.REFRESH_INTERVAL_MS),this.messagingSystem.subscribe("TransactionController:transactionFailed",({transactionMeta:e})=>{const{type:t,status:s,id:a}=e;t&&[j.TransactionType.bridge,j.TransactionType.swap,j.TransactionType.bridgeApproval,j.TransactionType.swapApproval].includes(t)&&[j.TransactionStatus.failed,j.TransactionStatus.dropped,j.TransactionStatus.rejected].includes(s)&&(N(this,h,"f").call(this,e),s!==j.TransactionStatus.rejected&&N(this,R,"f").call(this,M.UnifiedSwapBridgeEventName.Failed,a,(0,G.getEVMTxPropertiesFromTransactionMeta)(e)))}),this.messagingSystem.subscribe("TransactionController:transactionConfirmed",e=>{const{type:t,id:s,chainId:a}=e;t===j.TransactionType.swap&&N(this,R,"f").call(this,M.UnifiedSwapBridgeEventName.Completed,s),t!==j.TransactionType.bridge||(0,M.isNonEvmChainId)(a)||N(this,f,"f").call(this,s)}),N(this,p,"f").call(this)}}s.BridgeStatusController=q,n=new WeakMap,r=new WeakMap,i=new WeakMap,o=new WeakMap,c=new WeakMap,l=new WeakMap,u=new WeakMap,d=new WeakMap,m=new WeakMap,h=new WeakMap,p=new WeakMap,g=new WeakMap,f=new WeakMap,w=new WeakMap,b=new WeakMap,k=new WeakMap,S=new WeakMap,A=new WeakMap,T=new WeakMap,v=new WeakMap,E=new WeakMap,C=new WeakMap,I=new WeakMap,_=new WeakMap,P=new WeakMap,R=new WeakMap,a=new WeakSet,y=function(e){return this.messagingSystem.call("AccountsController:getAccountByAddress",e)}}}},{package:"@metamask/bridge-status-controller",file:"node_modules/@metamask/bridge-status-controller/dist/bridge-status-controller.cjs"}],[1246,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a;Object.defineProperty(s,"__esModule",{value:!0}),s.TraceName=s.APPROVAL_DELAY_MS=s.BRIDGE_PROD_API_BASE_URL=s.DEFAULT_BRIDGE_STATUS_CONTROLLER_STATE=s.BRIDGE_STATUS_CONTROLLER_NAME=s.MAX_ATTEMPTS=s.REFRESH_INTERVAL_MS=void 0,s.REFRESH_INTERVAL_MS=1e4,s.MAX_ATTEMPTS=7,s.BRIDGE_STATUS_CONTROLLER_NAME="BridgeStatusController",s.DEFAULT_BRIDGE_STATUS_CONTROLLER_STATE={txHistory:{}},s.BRIDGE_PROD_API_BASE_URL="https://bridge.api.cx.metamask.io",s.APPROVAL_DELAY_MS=5e3,function(e){e.BridgeTransactionApprovalCompleted="Bridge Transaction Approval Completed",e.BridgeTransactionCompleted="Bridge Transaction Completed",e.SwapTransactionApprovalCompleted="Swap Transaction Approval Completed",e.SwapTransactionCompleted="Swap Transaction Completed"}(a||(s.TraceName=a={}))}}},{package:"@metamask/bridge-status-controller",file:"node_modules/@metamask/bridge-status-controller/dist/constants.cjs"}],[1247,{"./bridge-status-controller.cjs":1245,"./constants.cjs":1246,"./types.cjs":1248,"./utils/transaction.cjs":1254},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getTxMetaFields=s.BridgeStatusController=s.BridgeStatusAction=s.BridgeId=s.MAX_ATTEMPTS=s.BRIDGE_STATUS_CONTROLLER_NAME=s.DEFAULT_BRIDGE_STATUS_CONTROLLER_STATE=s.REFRESH_INTERVAL_MS=void 0;var a=e("./constants.cjs");Object.defineProperty(s,"REFRESH_INTERVAL_MS",{enumerable:!0,get:function(){return a.REFRESH_INTERVAL_MS}}),Object.defineProperty(s,"DEFAULT_BRIDGE_STATUS_CONTROLLER_STATE",{enumerable:!0,get:function(){return a.DEFAULT_BRIDGE_STATUS_CONTROLLER_STATE}}),Object.defineProperty(s,"BRIDGE_STATUS_CONTROLLER_NAME",{enumerable:!0,get:function(){return a.BRIDGE_STATUS_CONTROLLER_NAME}}),Object.defineProperty(s,"MAX_ATTEMPTS",{enumerable:!0,get:function(){return a.MAX_ATTEMPTS}});var n=e("./types.cjs");Object.defineProperty(s,"BridgeId",{enumerable:!0,get:function(){return n.BridgeId}}),Object.defineProperty(s,"BridgeStatusAction",{enumerable:!0,get:function(){return n.BridgeStatusAction}});var r=e("./bridge-status-controller.cjs");Object.defineProperty(s,"BridgeStatusController",{enumerable:!0,get:function(){return r.BridgeStatusController}});var i=e("./utils/transaction.cjs");Object.defineProperty(s,"getTxMetaFields",{enumerable:!0,get:function(){return i.getTxMetaFields}})}}},{package:"@metamask/bridge-status-controller",file:"node_modules/@metamask/bridge-status-controller/dist/index.cjs"}],[1248,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r;Object.defineProperty(s,"__esModule",{value:!0}),s.BridgeStatusAction=s.BridgeId=s.BridgeClientId=void 0,function(e){e.EXTENSION="extension",e.MOBILE="mobile"}(a||(s.BridgeClientId=a={})),function(e){e.HOP="hop",e.CELER="celer",e.CELERCIRCLE="celercircle",e.CONNEXT="connext",e.POLYGON="polygon",e.AVALANCHE="avalanche",e.MULTICHAIN="multichain",e.AXELAR="axelar",e.ACROSS="across",e.STARGATE="stargate",e.RELAY="relay",e.MAYAN="mayan"}(n||(s.BridgeId=n={})),function(e){e.START_POLLING_FOR_BRIDGE_TX_STATUS="startPollingForBridgeTxStatus",e.WIPE_BRIDGE_STATUS="wipeBridgeStatus",e.GET_STATE="getState",e.RESET_STATE="resetState",e.SUBMIT_TX="submitTx",e.RESTART_POLLING_FOR_FAILED_ATTEMPTS="restartPollingForFailedAttempts",e.GET_BRIDGE_HISTORY_ITEM_BY_TX_META_ID="getBridgeHistoryItemByTxMetaId"}(r||(s.BridgeStatusAction=r={}))}}},{package:"@metamask/bridge-status-controller",file:"node_modules/@metamask/bridge-status-controller/dist/types.cjs"}],[1249,{"../constants.cjs":1246,"./validators.cjs":1255,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.shouldSkipFetchDueToFetchFailures=s.getStatusRequestWithSrcTxHash=s.fetchBridgeTxStatus=s.getStatusRequestDto=s.getBridgeStatusUrl=s.getClientIdHeader=void 0;const a=e("@metamask/superstruct"),n=e("./validators.cjs"),r=e("../constants.cjs");s.getClientIdHeader=e=>({"X-Client-Id":e});s.getBridgeStatusUrl=e=>`${e}/getTxStatus`;s.getStatusRequestDto=e=>{const{quote:t,...s}=e;return{...Object.fromEntries(Object.entries(s).map(([e,t])=>[e,t.toString()])),...t?.requestId?{requestId:t.requestId}:{}}};s.fetchBridgeTxStatus=async(e,t,r,i)=>{const o=(0,s.getStatusRequestDto)(e),c=new URLSearchParams(o),l=`${(0,s.getBridgeStatusUrl)(i)}?${c.toString()}`,u=await r(l,{headers:(0,s.getClientIdHeader)(t)}),d=[];try{(0,n.validateBridgeStatusResponse)(u)}catch(t){t instanceof a.StructError&&t.failures().forEach(({branch:t,path:s})=>{const a=t?.[0]?.quote?.bridgeId||t?.[0]?.quote?.bridges?.[0]||u?.bridge||e.bridge||e.bridgeId||"unknown",n=s?.join(".")||"unknown";d.push([a,n].join("|"))})}return{status:u,validationFailures:d}};s.getStatusRequestWithSrcTxHash=(e,t)=>{const{bridgeId:s,bridges:a,srcChainId:n,destChainId:r,refuel:i}=e;return{bridgeId:s,srcTxHash:t,bridge:a[0],srcChainId:n,destChainId:r,quote:e,refuel:Boolean(i)}};s.shouldSkipFetchDueToFetchFailures=e=>{if(e){const t=r.REFRESH_INTERVAL_MS*Math.pow(2,e.counter-1);if(Date.now()-e.lastAttemptTime<t)return!0}return!1}}}},{package:"@metamask/bridge-status-controller",file:"node_modules/@metamask/bridge-status-controller/dist/utils/bridge-status.cjs"}],[1250,{"@metamask/controller-utils":1301,"bignumber.js":1256},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.calcActualGasUsed=s.calculateGasFees=s.getTxGasEstimates=void 0;const a=e("@metamask/controller-utils"),n=e("bignumber.js");s.getTxGasEstimates=({txGasFeeEstimates:e,networkGasFeeEstimates:t})=>{const{estimatedBaseFee:s="0"}=t;return((e,t)=>{const{maxFeePerGas:s,maxPriorityFeePerGas:a}=e?.high??{};return{baseAndPriorityFeePerGas:a?new n.BigNumber(t,10).times(10**9).plus(a,16):undefined,maxFeePerGas:s,maxPriorityFeePerGas:a}})(e,s)};s.calculateGasFees=async(e,t,n,{chainId:r,gasLimit:i,...o},c,l,u)=>{if(!e)return{};if(u)return{...u,gas:i?.toString()};const d={...o,gas:i?.toString(),data:o.data,to:o.to,value:o.value},{gasFeeEstimates:m}=t.call("GasFeeController:getState"),{estimates:h}=await n({transactionParams:d,chainId:l,networkClientId:c}),{maxFeePerGas:p,maxPriorityFeePerGas:g}=(0,s.getTxGasEstimates)({networkGasFeeEstimates:m,txGasFeeEstimates:h});return{maxFeePerGas:p,maxPriorityFeePerGas:g,gas:(0,a.toHex)(d.gas??0)}};const r=(e,t)=>e&&t?new n.BigNumber(e,16).times(new n.BigNumber(t,16)):null;s.calcActualGasUsed=({pricingData:e},t,s)=>{const a=e?.quotedGasInUsd&&e?.quotedGasAmount?new n.BigNumber(e?.quotedGasInUsd).div(e.quotedGasAmount):null,i=r(t?.gasUsed,t?.effectiveGasPrice)?.plus(r(s?.gasUsed,s?.effectiveGasPrice)??0),o=i?.div(new n.BigNumber(10).pow(18)).toString(10);return i&&o?{amount:i.toString(10),usd:a?.multipliedBy(o).toString(10)??null}:null}}}},{package:"@metamask/bridge-status-controller",file:"node_modules/@metamask/bridge-status-controller/dist/utils/gas.cjs"}],[1251,{"./gas.cjs":1250,"./swap-received-amount.cjs":1253,"@metamask/bridge-controller":1229,"@metamask/transaction-controller":2754,"bignumber.js":1256},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getEVMTxPropertiesFromTransactionMeta=s.getRequestMetadataFromHistory=s.getTradeDataFromHistory=s.getPreConfirmationPropertiesFromQuote=s.getPriceImpactFromQuote=s.getTradeDataFromQuote=s.getRequestParamFromHistory=s.getFinalizedTxProperties=s.getTxStatusesFromHistory=void 0;const a=e("@metamask/bridge-controller"),n=e("@metamask/transaction-controller"),r=e("bignumber.js"),i=e("./gas.cjs"),o=e("./swap-received-amount.cjs");s.getTxStatusesFromHistory=({status:e,hasApprovalTx:t,approvalTxId:s,quote:n})=>{const r=e.srcChain.txHash?a.StatusTypes.COMPLETE:a.StatusTypes.PENDING,i=e.destChain?.txHash?e.status:a.StatusTypes.PENDING,o=(0,a.formatChainIdToHex)(n.srcChainId),c=(0,a.isEthUsdt)(o,n.srcAsset.address),l=e.srcChain.txHash?a.StatusTypes.COMPLETE:undefined,u=e.srcChain.txHash?a.StatusTypes.COMPLETE:a.StatusTypes.PENDING;return{allowance_reset_transaction:c?l:undefined,approval_transaction:t||s?u:undefined,source_transaction:r,destination_transaction:e.status===a.StatusTypes.FAILED?a.StatusTypes.FAILED:i}};s.getFinalizedTxProperties=(e,t,s)=>{const a=s?.submittedTime??t?.submittedTime??e.startTime,c=t?.type===n.TransactionType.swap?t?.time:e.completionTime,l=(0,i.calcActualGasUsed)(e,t?.txReceipt,s?.txReceipt),u=t?.type===n.TransactionType.swap?(0,o.getActualSwapReceivedAmount)(e,l,t):(0,o.getActualBridgeReceivedAmount)(e),d=e.pricingData?.quotedGasAmount&&l?.amount?new r.BigNumber(e.pricingData.quotedGasAmount).multipliedBy(new r.BigNumber(10).pow(18)).div(l.amount).toNumber():0,m=e.pricingData?.quotedReturnInUsd&&u?.usd?new r.BigNumber(e.pricingData.quotedReturnInUsd).div(u.usd).toNumber():0;return{actual_time_minutes:c&&a?(c-a)/6e4:0,usd_actual_return:Number(u?.usd??0),usd_actual_gas:l?.usd??0,quote_vs_execution_ratio:m,quoted_vs_used_gas_ratio:d}};s.getRequestParamFromHistory=e=>({chain_id_source:(0,a.formatChainIdToCaip)(e.quote.srcChainId),token_symbol_source:e.quote.srcAsset.symbol,token_address_source:e.quote.srcAsset.assetId,chain_id_destination:(0,a.formatChainIdToCaip)(e.quote.destChainId),token_symbol_destination:e.quote.destAsset.symbol,token_address_destination:e.quote.destAsset.assetId});s.getTradeDataFromQuote=e=>({usd_quoted_gas:Number(e.gasFee?.effective?.usd??0),gas_included:e.quote.gasIncluded??!1,gas_included_7702:e.quote.gasIncluded7702??!1,provider:(0,a.formatProviderLabel)(e.quote),quoted_time_minutes:Number(e.estimatedProcessingTimeInSeconds/60),usd_quoted_return:Number(e.adjustedReturn?.usd??0)});s.getPriceImpactFromQuote=e=>({price_impact:Number(e.priceData?.priceImpact??"0")});s.getPreConfirmationPropertiesFromQuote=(e,t,n)=>{const{quote:r}=e;return{...(0,s.getPriceImpactFromQuote)(r),...(0,s.getTradeDataFromQuote)(e),chain_id_source:(0,a.formatChainIdToCaip)(r.srcChainId),token_symbol_source:r.srcAsset.symbol,chain_id_destination:(0,a.formatChainIdToCaip)(r.destChainId),token_symbol_destination:r.destAsset.symbol,is_hardware_wallet:n,swap_type:(0,a.getSwapType)(e.quote.srcChainId,e.quote.destChainId),usd_amount_source:Number(e.sentAmount?.usd??0),stx_enabled:t,action_type:a.MetricsActionType.SWAPBRIDGE_V1,custom_slippage:!1}};s.getTradeDataFromHistory=e=>({usd_quoted_gas:Number(e.pricingData?.quotedGasInUsd??0),gas_included:e.quote.gasIncluded??!1,gas_included_7702:e.quote.gasIncluded7702??!1,provider:(0,a.formatProviderLabel)(e.quote),quoted_time_minutes:Number(e.estimatedProcessingTimeInSeconds/60),usd_quoted_return:Number(e.pricingData?.quotedReturnInUsd??0)});s.getRequestMetadataFromHistory=(e,t)=>{const{quote:s,slippagePercentage:n,isStxEnabled:r}=e;return{slippage_limit:n,custom_slippage:(0,a.isCustomSlippage)(n),usd_amount_source:Number(e.pricingData?.amountSentInUsd??0),swap_type:(0,a.getSwapType)(s.srcChainId,s.destChainId),is_hardware_wallet:(0,a.isHardwareWallet)(t),stx_enabled:r??!1,security_warnings:[]}};s.getEVMTxPropertiesFromTransactionMeta=e=>({source_transaction:[n.TransactionStatus.failed,n.TransactionStatus.dropped,n.TransactionStatus.rejected].includes(e.status)?a.StatusTypes.FAILED:a.StatusTypes.COMPLETE,error_message:e.error?.message??"",chain_id_source:(0,a.formatChainIdToCaip)(e.chainId),chain_id_destination:(0,a.formatChainIdToCaip)(e.chainId),token_symbol_source:e.sourceTokenSymbol??"",token_symbol_destination:e.destinationTokenSymbol??"",usd_amount_source:100,stx_enabled:!1,token_address_source:(0,a.formatAddressToAssetId)(e.sourceTokenAddress??"",e.chainId)??"",token_address_destination:(0,a.formatAddressToAssetId)(e.destinationTokenAddress??"",e.chainId)??"",custom_slippage:!1,is_hardware_wallet:!1,swap_type:e.type&&[n.TransactionType.swap,n.TransactionType.swapApproval].includes(e.type)?a.MetricsSwapType.SINGLE:a.MetricsSwapType.CROSSCHAIN,security_warnings:[],price_impact:0,usd_quoted_gas:0,gas_included:!1,gas_included_7702:!1,quoted_time_minutes:0,usd_quoted_return:0,provider:"",actual_time_minutes:0,quote_vs_execution_ratio:0,quoted_vs_used_gas_ratio:0,usd_actual_return:0,usd_actual_gas:0,action_type:a.MetricsActionType.SWAPBRIDGE_V1})}}},{package:"@metamask/bridge-status-controller",file:"node_modules/@metamask/bridge-status-controller/dist/utils/metrics.cjs"}],[1252,{uuid:5366},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createClientTransactionRequest=void 0;const a=e("uuid");s.createClientTransactionRequest=(e,t,s,n,r)=>({snapId:e,origin:"metamask",handler:"onClientRequest",request:{id:(0,a.v4)(),jsonrpc:"2.0",method:"signAndSendTransaction",params:{transaction:t,scope:s,accountId:n,...r&&{options:r}}}})}}},{package:"@metamask/bridge-status-controller",file:"node_modules/@metamask/bridge-status-controller/dist/utils/snaps.cjs"}],[1253,{"@metamask/bridge-controller":1229,"bignumber.js":1256},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getActualBridgeReceivedAmount=s.getActualSwapReceivedAmount=void 0;const a=e("@metamask/bridge-controller"),n=e("bignumber.js");s.getActualSwapReceivedAmount=(e,t,s)=>{const{pricingData:r}=e,i=e.quote.destTokenAmount;if(!s?.txReceipt)return null;const o=(0,a.isNativeAddress)(e.quote.destAsset.address)?((e,t,s)=>{const{preTxBalance:a,postTxBalance:r}=s;return a&&r&&a!==r?t&&r&&a?new n.BigNumber(r,16).minus(a,16).minus(t.amount).div(10**e.quote.destAsset.decimals):null:new n.BigNumber(e.quote.destTokenAmount).div(new n.BigNumber(10).pow(e.quote.destAsset.decimals)).toString(10)})(e,t,s):((e,t)=>{const{txReceipt:s}=t;if(!s||!s.logs||"0x0"===s.status)return null;const{account:a,quote:r}=e,i=s.logs.find(e=>{const t=e.topics&&e.topics[0].startsWith("0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"),s=e.address?.toLowerCase()===r.destAsset.address?.toLowerCase(),n=e.topics&&e.topics[2]&&(e.topics[2]===a||e.topics[2].match(a?.slice(2)));return t&&s&&n});return i?.data?new n.BigNumber(i.data,16).div(new n.BigNumber(10).pow(r.destAsset.decimals)):null})(e,s),c=r?.quotedReturnInUsd&&i?new n.BigNumber(r.quotedReturnInUsd).div(i).multipliedBy(10**e.quote.destAsset.decimals):null;return{amount:o,usd:o&&c?c.multipliedBy(o):null}};s.getActualBridgeReceivedAmount=e=>{const{quote:t,pricingData:s,status:a}=e,r=s?.quotedReturnInUsd?new n.BigNumber(s.quotedReturnInUsd).div(t.destTokenAmount):null,i=a.destChain?.amount;return i&&r?{amount:i,usd:r.multipliedBy(i).toString(10)}:null}}}},{package:"@metamask/bridge-status-controller",file:"node_modules/@metamask/bridge-status-controller/dist/utils/swap-received-amount.cjs"}],[1254,{"../constants.cjs":1246,"./gas.cjs":1250,"./snaps.cjs":1252,"@metamask/bridge-controller":1229,"@metamask/controller-utils":1301,"@metamask/transaction-controller":2754,"@metamask/utils":2799,"bignumber.js":1256,uuid:5366},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.findAndUpdateTransactionsInBatch=s.getAddTransactionBatchParams=s.toBatchTxParams=s.getClientRequest=s.handleMobileHardwareWalletDelay=s.handleApprovalDelay=s.handleNonEvmTxResponse=s.getTxMetaFields=s.getStatusRequestParams=s.getUSDTAllowanceResetTx=s.generateActionId=void 0;const a=e("@metamask/bridge-controller"),n=e("@metamask/controller-utils"),r=e("@metamask/transaction-controller"),i=e("@metamask/utils"),o=e("bignumber.js"),c=e("uuid"),l=e("./gas.cjs"),u=e("./snaps.cjs"),d=e("../constants.cjs");s.generateActionId=()=>(Date.now()+Math.random()).toString();s.getUSDTAllowanceResetTx=async(e,t)=>{const s=(0,a.formatChainIdToHex)(t.quote.srcChainId);if(t.approval&&(0,a.isEthUsdt)(s,t.quote.srcAsset.address)){const n=new o.BigNumber(await e.call("BridgeController:getBridgeERC20Allowance",t.quote.srcAsset.address,s));if(n.lt(t.sentAmount?.amount??"0")&&n.gt(0))return{...t.approval,data:(0,a.getEthUsdtResetData)()}}return undefined};s.getStatusRequestParams=e=>({bridgeId:e.quote.bridgeId,bridge:e.quote.bridges[0],srcChainId:e.quote.srcChainId,destChainId:e.quote.destChainId,quote:e.quote,refuel:Boolean(e.quote.refuel)});s.getTxMetaFields=(e,t)=>{let s;try{s=(0,a.formatChainIdToHex)(e.quote.destChainId)}catch{s="0x1"}return{destinationChainId:s,sourceTokenAmount:e.quote.srcTokenAmount,sourceTokenSymbol:e.quote.srcAsset.symbol,sourceTokenDecimals:e.quote.srcAsset.decimals,sourceTokenAddress:e.quote.srcAsset.address,destinationTokenAmount:e.quote.destTokenAmount,destinationTokenSymbol:e.quote.destAsset.symbol,destinationTokenDecimals:e.quote.destAsset.decimals,destinationTokenAddress:e.quote.destAsset.address,approvalTxId:t,swapTokenValue:e.sentAmount.amount}};s.handleNonEvmTxResponse=(e,t,n)=>{const i=n.address,o=n.metadata.snap?.id;let l;"string"==typeof e?l=e:e&&"object"==typeof e&&("transactionId"in e&&e.transactionId?l=e.transactionId:"result"in e&&e.result&&"object"==typeof e.result?l=e.result.signature||e.result.txid||e.result.hash||e.result.txHash:"signature"in e&&e.signature&&"string"==typeof e.signature&&(l=e.signature));const u=(0,a.isCrossChain)(t.quote.srcChainId,t.quote.destChainId);let d;try{d=(0,a.formatChainIdToHex)(t.quote.srcChainId)}catch{d="0x1"}const m="string"==typeof t.trade?t.trade:t.trade.unsignedPsbtBase64;return{...(0,s.getTxMetaFields)(t),time:Date.now(),id:l??(0,c.v4)(),chainId:d,networkClientId:o??d,txParams:{from:i,data:m},type:u?r.TransactionType.bridge:r.TransactionType.swap,status:r.TransactionStatus.submitted,hash:l,origin:o,isSolana:!0,isBridgeTx:u}};s.handleApprovalDelay=async e=>{if([a.ChainId.LINEA,a.ChainId.BASE].includes(e.quote.srcChainId)){(0,i.createProjectLogger)("bridge")("Delaying submitting bridge tx to make Linea and Base confirmation more likely");const e=new Promise(e=>setTimeout(e,d.APPROVAL_DELAY_MS));await e}};s.handleMobileHardwareWalletDelay=async e=>{if(e){const e=new Promise(e=>setTimeout(e,1e3));await e}};s.getClientRequest=(e,t)=>{const s=(0,a.formatChainIdToCaip)(e.quote.srcChainId),n="string"==typeof e.trade?e.trade:e.trade.unsignedPsbtBase64;return(0,u.createClientTransactionRequest)(t.metadata.snap?.id,n,s,t.id)};s.toBatchTxParams=(e,{chainId:t,gasLimit:s,...a},{maxFeePerGas:r,maxPriorityFeePerGas:i,gas:o})=>{const c={...a,data:a.data,to:a.to,value:a.value};return e?{...c,gas:(0,n.toHex)(o??0),maxFeePerGas:(0,n.toHex)(r??0),maxPriorityFeePerGas:(0,n.toHex)(i??0)}:c};s.getAddTransactionBatchParams=async({messagingSystem:e,isBridgeTx:t,approval:n,resetApproval:i,trade:o,quoteResponse:{quote:{feeData:{txFee:c},gasIncluded:u,gasIncluded7702:d},sentAmount:m,toTokenAmount:h},requireApproval:p=!1,estimateGasFeeFn:g})=>{const f=u||d;if(!e.call("AccountsController:getAccountByAddress",o.from))throw new Error("Failed to submit cross-chain swap batch transaction: unknown account in trade data");const y=(0,a.formatChainIdToHex)(o.chainId),w=e.call("NetworkController:findNetworkClientIdByChainId",y),b=!0!==d,k=[];if(i){const a=await(0,l.calculateGasFees)(b,e,g,i,w,y,f?c:undefined);k.push({type:t?r.TransactionType.bridgeApproval:r.TransactionType.swapApproval,params:(0,s.toBatchTxParams)(b,i,a)})}if(n){const a=await(0,l.calculateGasFees)(b,e,g,n,w,y,f?c:undefined);k.push({type:t?r.TransactionType.bridgeApproval:r.TransactionType.swapApproval,params:(0,s.toBatchTxParams)(b,n,a)})}const S=await(0,l.calculateGasFees)(b,e,g,o,w,y,f?c:undefined);k.push({type:t?r.TransactionType.bridge:r.TransactionType.swap,params:(0,s.toBatchTxParams)(b,o,S),assetsFiatValues:{sending:m?.valueInCurrency?.toString(),receiving:h?.valueInCurrency?.toString()}});return{disable7702:b,isGasFeeIncluded:Boolean(d),networkClientId:w,requireApproval:p,origin:"metamask",from:o.from,transactions:k}};s.findAndUpdateTransactionsInBatch=({messagingSystem:e,updateTransactionFn:t,batchId:s,txDataByType:a})=>{const n=e.call("TransactionController:getState").transactions,i={approvalMeta:undefined,tradeMeta:undefined};return Object.entries(a).forEach(([e,a])=>{const o=n.find(t=>{if(t.batchId!==s)return!1;if(Array.isArray(t.txParams.authorizationList)&&t.txParams.authorizationList.length>0||Boolean(t.delegationAddress)){if(e===r.TransactionType.swap&&t.type===r.TransactionType.batch)return!0;if(e===r.TransactionType.swapApproval&&t.txParams.data===a)return!0}return t.txParams.data===a});if(o){const s={...o,type:e};t(s,`Update tx type to ${e}`),i[[r.TransactionType.bridgeApproval,r.TransactionType.swapApproval].includes(e)?"approvalMeta":"tradeMeta"]=s}}),i}}}},{package:"@metamask/bridge-status-controller",file:"node_modules/@metamask/bridge-status-controller/dist/utils/transaction.cjs"}],[1255,{"@metamask/bridge-controller":1229,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.validateBridgeStatusResponse=s.StatusResponseSchema=void 0;const a=e("@metamask/bridge-controller"),n=e("@metamask/superstruct"),r=(0,n.number)(),i=(0,n.type)({}),o=(0,n.type)({chainId:r,txHash:(0,n.optional)((0,n.string)()),amount:(0,n.optional)((0,n.string)()),token:(0,n.optional)((0,n.union)([i,a.BridgeAssetSchema]))}),c=(0,n.type)({chainId:r,txHash:(0,n.optional)((0,n.string)()),amount:(0,n.optional)((0,n.string)()),token:(0,n.optional)((0,n.union)([i,a.BridgeAssetSchema]))}),l=(0,n.type)({});s.StatusResponseSchema=(0,n.type)({status:(0,n.enums)(Object.values(a.StatusTypes)),srcChain:o,destChain:(0,n.optional)(c),bridge:(0,n.optional)((0,n.string)()),isExpectedToken:(0,n.optional)((0,n.boolean)()),isUnrecognizedRouterAddress:(0,n.optional)((0,n.boolean)()),refuel:(0,n.optional)(l)});s.validateBridgeStatusResponse=e=>((0,n.assert)(e,s.StatusResponseSchema),!0)}}},{package:"@metamask/bridge-status-controller",file:"node_modules/@metamask/bridge-status-controller/dist/utils/validators.cjs"}],[1256,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){!function(e){var s,a=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,n=Math.ceil,r=Math.floor,i="[BigNumber Error] ",o=i+"Number primitive has more than 15 significant digits: ",c=1e14,l=14,u=9007199254740991,d=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],m=1e7,h=1e9;function p(e){var t=0|e;return e>0||e===t?t:t-1}function g(e){for(var t,s,a=1,n=e.length,r=e[0]+"";a<n;){for(t=e[a++]+"",s=l-t.length;s--;t="0"+t);r+=t}for(n=r.length;48===r.charCodeAt(--n););return r.slice(0,n+1||1)}function f(e,t){var s,a,n=e.c,r=t.c,i=e.s,o=t.s,c=e.e,l=t.e;if(!i||!o)return null;if(s=n&&!n[0],a=r&&!r[0],s||a)return s?a?0:-o:i;if(i!=o)return i;if(s=i<0,a=c==l,!n||!r)return a?0:!n^s?1:-1;if(!a)return c>l^s?1:-1;for(o=(c=n.length)<(l=r.length)?c:l,i=0;i<o;i++)if(n[i]!=r[i])return n[i]>r[i]^s?1:-1;return c==l?0:c>l^s?1:-1}function y(e,t,s,a){if(e<t||e>s||e!==r(e))throw Error(i+(a||"Argument")+("number"==typeof e?e<t||e>s?" out of range: ":" not an integer: ":" not a primitive number: ")+String(e))}function w(e){var t=e.c.length-1;return p(e.e/l)==t&&e.c[t]%2!=0}function b(e,t){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(t<0?"e":"e+")+t}function k(e,t,s){var a,n;if(t<0){for(n=s+".";++t;n+=s);e=n+e}else if(++t>(a=e.length)){for(n=s,t-=a;--t;n+=s);e+=n}else t<a&&(e=e.slice(0,t)+"."+e.slice(t));return e}s=function e(t){var s,S,A,T,v,E,C,I,_,P,R=H.prototype={constructor:H,toString:null,valueOf:null},x=new H(1),N=20,M=4,D=-7,O=21,j=-1e7,B=1e7,L=!1,F=1,$=0,U={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},G="0123456789abcdefghijklmnopqrstuvwxyz",W=!0;function H(e,t){var s,n,i,c,d,m,h,p,g=this;if(!(g instanceof H))return new H(e,t);if(null==t){if(e&&!0===e._isBigNumber)return g.s=e.s,void(!e.c||e.e>B?g.c=g.e=null:e.e<j?g.c=[g.e=0]:(g.e=e.e,g.c=e.c.slice()));if((m="number"==typeof e)&&0*e==0){if(g.s=1/e<0?(e=-e,-1):1,e===~~e){for(c=0,d=e;d>=10;d/=10,c++);return void(c>B?g.c=g.e=null:(g.e=c,g.c=[e]))}p=String(e)}else{if(!a.test(p=String(e)))return A(g,p,m);g.s=45==p.charCodeAt(0)?(p=p.slice(1),-1):1}(c=p.indexOf("."))>-1&&(p=p.replace(".","")),(d=p.search(/e/i))>0?(c<0&&(c=d),c+=+p.slice(d+1),p=p.substring(0,d)):c<0&&(c=p.length)}else{if(y(t,2,G.length,"Base"),10==t&&W)return K(g=new H(e),N+g.e+1,M);if(p=String(e),m="number"==typeof e){if(0*e!=0)return A(g,p,m,t);if(g.s=1/e<0?(p=p.slice(1),-1):1,H.DEBUG&&p.replace(/^0\.0*|\./,"").length>15)throw Error(o+e)}else g.s=45===p.charCodeAt(0)?(p=p.slice(1),-1):1;for(s=G.slice(0,t),c=d=0,h=p.length;d<h;d++)if(s.indexOf(n=p.charAt(d))<0){if("."==n){if(d>c){c=h;continue}}else if(!i&&(p==p.toUpperCase()&&(p=p.toLowerCase())||p==p.toLowerCase()&&(p=p.toUpperCase()))){i=!0,d=-1,c=0;continue}return A(g,String(e),m,t)}m=!1,(c=(p=S(p,t,10,g.s)).indexOf("."))>-1?p=p.replace(".",""):c=p.length}for(d=0;48===p.charCodeAt(d);d++);for(h=p.length;48===p.charCodeAt(--h););if(p=p.slice(d,++h)){if(h-=d,m&&H.DEBUG&&h>15&&(e>u||e!==r(e)))throw Error(o+g.s*e);if((c=c-d-1)>B)g.c=g.e=null;else if(c<j)g.c=[g.e=0];else{if(g.e=c,g.c=[],d=(c+1)%l,c<0&&(d+=l),d<h){for(d&&g.c.push(+p.slice(0,d)),h-=l;d<h;)g.c.push(+p.slice(d,d+=l));d=l-(p=p.slice(d)).length}else d-=h;for(;d--;p+="0");g.c.push(+p)}}else g.c=[g.e=0]}function q(e,t,s,a){var n,r,i,o,c;if(null==s?s=M:y(s,0,8),!e.c)return e.toString();if(n=e.c[0],i=e.e,null==t)c=g(e.c),c=1==a||2==a&&(i<=D||i>=O)?b(c,i):k(c,i,"0");else if(r=(e=K(new H(e),t,s)).e,o=(c=g(e.c)).length,1==a||2==a&&(t<=r||r<=D)){for(;o<t;c+="0",o++);c=b(c,r)}else if(t-=i,c=k(c,r,"0"),r+1>o){if(--t>0)for(c+=".";t--;c+="0");}else if((t+=r-o)>0)for(r+1==o&&(c+=".");t--;c+="0");return e.s<0&&n?"-"+c:c}function Y(e,t){for(var s,a,n=1,r=new H(e[0]);n<e.length;n++)(!(a=new H(e[n])).s||(s=f(r,a))===t||0===s&&r.s===t)&&(r=a);return r}function V(e,t,s){for(var a=1,n=t.length;!t[--n];t.pop());for(n=t[0];n>=10;n/=10,a++);return(s=a+s*l-1)>B?e.c=e.e=null:s<j?e.c=[e.e=0]:(e.e=s,e.c=t),e}function K(e,t,s,a){var i,o,u,m,h,p,g,f=e.c,y=d;if(f){e:{for(i=1,m=f[0];m>=10;m/=10,i++);if((o=t-i)<0)o+=l,u=t,h=f[p=0],g=r(h/y[i-u-1]%10);else if((p=n((o+1)/l))>=f.length){if(!a)break e;for(;f.length<=p;f.push(0));h=g=0,i=1,u=(o%=l)-l+1}else{for(h=m=f[p],i=1;m>=10;m/=10,i++);g=(u=(o%=l)-l+i)<0?0:r(h/y[i-u-1]%10)}if(a=a||t<0||null!=f[p+1]||(u<0?h:h%y[i-u-1]),a=s<4?(g||a)&&(0==s||s==(e.s<0?3:2)):g>5||5==g&&(4==s||a||6==s&&(o>0?u>0?h/y[i-u]:0:f[p-1])%10&1||s==(e.s<0?8:7)),t<1||!f[0])return f.length=0,a?(t-=e.e+1,f[0]=y[(l-t%l)%l],e.e=-t||0):f[0]=e.e=0,e;if(0==o?(f.length=p,m=1,p--):(f.length=p+1,m=y[l-o],f[p]=u>0?r(h/y[i-u]%y[u])*m:0),a)for(;;){if(0==p){for(o=1,u=f[0];u>=10;u/=10,o++);for(u=f[0]+=m,m=1;u>=10;u/=10,m++);o!=m&&(e.e++,f[0]==c&&(f[0]=1));break}if(f[p]+=m,f[p]!=c)break;f[p--]=0,m=1}for(o=f.length;0===f[--o];f.pop());}e.e>B?e.c=e.e=null:e.e<j&&(e.c=[e.e=0])}return e}function J(e){var t,s=e.e;return null===s?e.toString():(t=g(e.c),t=s<=D||s>=O?b(t,s):k(t,s,"0"),e.s<0?"-"+t:t)}return H.clone=e,H.ROUND_UP=0,H.ROUND_DOWN=1,H.ROUND_CEIL=2,H.ROUND_FLOOR=3,H.ROUND_HALF_UP=4,H.ROUND_HALF_DOWN=5,H.ROUND_HALF_EVEN=6,H.ROUND_HALF_CEIL=7,H.ROUND_HALF_FLOOR=8,H.EUCLID=9,H.config=H.set=function(e){var t,s;if(null!=e){if("object"!=typeof e)throw Error(i+"Object expected: "+e);if(e.hasOwnProperty(t="DECIMAL_PLACES")&&(y(s=e[t],0,h,t),N=s),e.hasOwnProperty(t="ROUNDING_MODE")&&(y(s=e[t],0,8,t),M=s),e.hasOwnProperty(t="EXPONENTIAL_AT")&&((s=e[t])&&s.pop?(y(s[0],-h,0,t),y(s[1],0,h,t),D=s[0],O=s[1]):(y(s,-h,h,t),D=-(O=s<0?-s:s))),e.hasOwnProperty(t="RANGE"))if((s=e[t])&&s.pop)y(s[0],-h,-1,t),y(s[1],1,h,t),j=s[0],B=s[1];else{if(y(s,-h,h,t),!s)throw Error(i+t+" cannot be zero: "+s);j=-(B=s<0?-s:s)}if(e.hasOwnProperty(t="CRYPTO")){if((s=e[t])!==!!s)throw Error(i+t+" not true or false: "+s);if(s){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw L=!s,Error(i+"crypto unavailable");L=s}else L=s}if(e.hasOwnProperty(t="MODULO_MODE")&&(y(s=e[t],0,9,t),F=s),e.hasOwnProperty(t="POW_PRECISION")&&(y(s=e[t],0,h,t),$=s),e.hasOwnProperty(t="FORMAT")){if("object"!=typeof(s=e[t]))throw Error(i+t+" not an object: "+s);U=s}if(e.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(s=e[t])||/^.?$|[+\-.\s]|(.).*\1/.test(s))throw Error(i+t+" invalid: "+s);W="0123456789"==s.slice(0,10),G=s}}return{DECIMAL_PLACES:N,ROUNDING_MODE:M,EXPONENTIAL_AT:[D,O],RANGE:[j,B],CRYPTO:L,MODULO_MODE:F,POW_PRECISION:$,FORMAT:U,ALPHABET:G}},H.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!H.DEBUG)return!0;var t,s,a=e.c,n=e.e,o=e.s;e:if("[object Array]"=={}.toString.call(a)){if((1===o||-1===o)&&n>=-h&&n<=h&&n===r(n)){if(0===a[0]){if(0===n&&1===a.length)return!0;break e}if((t=(n+1)%l)<1&&(t+=l),String(a[0]).length==t){for(t=0;t<a.length;t++)if((s=a[t])<0||s>=c||s!==r(s))break e;if(0!==s)return!0}}}else if(null===a&&null===n&&(null===o||1===o||-1===o))return!0;throw Error(i+"Invalid BigNumber: "+e)},H.maximum=H.max=function(){return Y(arguments,-1)},H.minimum=H.min=function(){return Y(arguments,1)},H.random=(T=9007199254740992,v=Math.random()*T&2097151?function(){return r(Math.random()*T)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var t,s,a,o,c,u=0,m=[],p=new H(x);if(null==e?e=N:y(e,0,h),o=n(e/l),L)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(o*=2));u<o;)(c=131072*t[u]+(t[u+1]>>>11))>=9e15?(s=crypto.getRandomValues(new Uint32Array(2)),t[u]=s[0],t[u+1]=s[1]):(m.push(c%1e14),u+=2);u=o/2}else{if(!crypto.randomBytes)throw L=!1,Error(i+"crypto unavailable");for(t=crypto.randomBytes(o*=7);u<o;)(c=281474976710656*(31&t[u])+1099511627776*t[u+1]+4294967296*t[u+2]+16777216*t[u+3]+(t[u+4]<<16)+(t[u+5]<<8)+t[u+6])>=9e15?crypto.randomBytes(7).copy(t,u):(m.push(c%1e14),u+=7);u=o/7}if(!L)for(;u<o;)(c=v())<9e15&&(m[u++]=c%1e14);for(o=m[--u],e%=l,o&&e&&(c=d[l-e],m[u]=r(o/c)*c);0===m[u];m.pop(),u--);if(u<0)m=[a=0];else{for(a=-1;0===m[0];m.splice(0,1),a-=l);for(u=1,c=m[0];c>=10;c/=10,u++);u<l&&(a-=l-u)}return p.e=a,p.c=m,p}),H.sum=function(){for(var e=1,t=arguments,s=new H(t[0]);e<t.length;)s=s.plus(t[e++]);return s},S=function(){var e="0123456789";function t(e,t,s,a){for(var n,r,i=[0],o=0,c=e.length;o<c;){for(r=i.length;r--;i[r]*=t);for(i[0]+=a.indexOf(e.charAt(o++)),n=0;n<i.length;n++)i[n]>s-1&&(null==i[n+1]&&(i[n+1]=0),i[n+1]+=i[n]/s|0,i[n]%=s)}return i.reverse()}return function(a,n,r,i,o){var c,l,u,d,m,h,p,f,y=a.indexOf("."),w=N,b=M;for(y>=0&&(d=$,$=0,a=a.replace(".",""),h=(f=new H(n)).pow(a.length-y),$=d,f.c=t(k(g(h.c),h.e,"0"),10,r,e),f.e=f.c.length),u=d=(p=t(a,n,r,o?(c=G,e):(c=e,G))).length;0==p[--d];p.pop());if(!p[0])return c.charAt(0);if(y<0?--u:(h.c=p,h.e=u,h.s=i,p=(h=s(h,f,w,b,r)).c,m=h.r,u=h.e),y=p[l=u+w+1],d=r/2,m=m||l<0||null!=p[l+1],m=b<4?(null!=y||m)&&(0==b||b==(h.s<0?3:2)):y>d||y==d&&(4==b||m||6==b&&1&p[l-1]||b==(h.s<0?8:7)),l<1||!p[0])a=m?k(c.charAt(1),-w,c.charAt(0)):c.charAt(0);else{if(p.length=l,m)for(--r;++p[--l]>r;)p[l]=0,l||(++u,p=[1].concat(p));for(d=p.length;!p[--d];);for(y=0,a="";y<=d;a+=c.charAt(p[y++]));a=k(a,u,c.charAt(0))}return a}}(),s=function(){function e(e,t,s){var a,n,r,i,o=0,c=e.length,l=t%m,u=t/m|0;for(e=e.slice();c--;)o=((n=l*(r=e[c]%m)+(a=u*r+(i=e[c]/m|0)*l)%m*m+o)/s|0)+(a/m|0)+u*i,e[c]=n%s;return o&&(e=[o].concat(e)),e}function t(e,t,s,a){var n,r;if(s!=a)r=s>a?1:-1;else for(n=r=0;n<s;n++)if(e[n]!=t[n]){r=e[n]>t[n]?1:-1;break}return r}function s(e,t,s,a){for(var n=0;s--;)e[s]-=n,n=e[s]<t[s]?1:0,e[s]=n*a+e[s]-t[s];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(a,n,i,o,u){var d,m,h,g,f,y,w,b,k,S,A,T,v,E,C,I,_,P=a.s==n.s?1:-1,R=a.c,x=n.c;if(!(R&&R[0]&&x&&x[0]))return new H(a.s&&n.s&&(R?!x||R[0]!=x[0]:x)?R&&0==R[0]||!x?0*P:P/0:NaN);for(k=(b=new H(P)).c=[],P=i+(m=a.e-n.e)+1,u||(u=c,m=p(a.e/l)-p(n.e/l),P=P/l|0),h=0;x[h]==(R[h]||0);h++);if(x[h]>(R[h]||0)&&m--,P<0)k.push(1),g=!0;else{for(E=R.length,I=x.length,h=0,P+=2,(f=r(u/(x[0]+1)))>1&&(x=e(x,f,u),R=e(R,f,u),I=x.length,E=R.length),v=I,A=(S=R.slice(0,I)).length;A<I;S[A++]=0);_=x.slice(),_=[0].concat(_),C=x[0],x[1]>=u/2&&C++;do{if(f=0,(d=t(x,S,I,A))<0){if(T=S[0],I!=A&&(T=T*u+(S[1]||0)),(f=r(T/C))>1)for(f>=u&&(f=u-1),w=(y=e(x,f,u)).length,A=S.length;1==t(y,S,w,A);)f--,s(y,I<w?_:x,w,u),w=y.length,d=1;else 0==f&&(d=f=1),w=(y=x.slice()).length;if(w<A&&(y=[0].concat(y)),s(S,y,A,u),A=S.length,-1==d)for(;t(x,S,I,A)<1;)f++,s(S,I<A?_:x,A,u),A=S.length}else 0===d&&(f++,S=[0]);k[h++]=f,S[0]?S[A++]=R[v]||0:(S=[R[v]],A=1)}while((v++<E||null!=S[0])&&P--);g=null!=S[0],k[0]||k.splice(0,1)}if(u==c){for(h=1,P=k[0];P>=10;P/=10,h++);K(b,i+(b.e=h+m*l-1)+1,o,g)}else b.e=m,b.r=+g;return b}}(),E=/^(-?)0([xbo])(?=\w[\w.]*$)/i,C=/^([^.]+)\.$/,I=/^\.([^.]+)$/,_=/^-?(Infinity|NaN)$/,P=/^\s*\+(?=[\w.])|^\s+|\s+$/g,A=function(e,t,s,a){var n,r=s?t:t.replace(P,"");if(_.test(r))e.s=isNaN(r)?null:r<0?-1:1;else{if(!s&&(r=r.replace(E,function(e,t,s){return n="x"==(s=s.toLowerCase())?16:"b"==s?2:8,a&&a!=n?e:t}),a&&(n=a,r=r.replace(C,"$1").replace(I,"0.$1")),t!=r))return new H(r,n);if(H.DEBUG)throw Error(i+"Not a"+(a?" base "+a:"")+" number: "+t);e.s=null}e.c=e.e=null},R.absoluteValue=R.abs=function(){var e=new H(this);return e.s<0&&(e.s=1),e},R.comparedTo=function(e,t){return f(this,new H(e,t))},R.decimalPlaces=R.dp=function(e,t){var s,a,n,r=this;if(null!=e)return y(e,0,h),null==t?t=M:y(t,0,8),K(new H(r),e+r.e+1,t);if(!(s=r.c))return null;if(a=((n=s.length-1)-p(this.e/l))*l,n=s[n])for(;n%10==0;n/=10,a--);return a<0&&(a=0),a},R.dividedBy=R.div=function(e,t){return s(this,new H(e,t),N,M)},R.dividedToIntegerBy=R.idiv=function(e,t){return s(this,new H(e,t),0,1)},R.exponentiatedBy=R.pow=function(e,t){var s,a,o,c,u,d,m,h,p=this;if((e=new H(e)).c&&!e.isInteger())throw Error(i+"Exponent not an integer: "+J(e));if(null!=t&&(t=new H(t)),u=e.e>14,!p.c||!p.c[0]||1==p.c[0]&&!p.e&&1==p.c.length||!e.c||!e.c[0])return h=new H(Math.pow(+J(p),u?e.s*(2-w(e)):+J(e))),t?h.mod(t):h;if(d=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new H(NaN);(a=!d&&p.isInteger()&&t.isInteger())&&(p=p.mod(t))}else{if(e.e>9&&(p.e>0||p.e<-1||(0==p.e?p.c[0]>1||u&&p.c[1]>=24e7:p.c[0]<8e13||u&&p.c[0]<=9999975e7)))return c=p.s<0&&w(e)?-0:0,p.e>-1&&(c=1/c),new H(d?1/c:c);$&&(c=n($/l+2))}for(u?(s=new H(.5),d&&(e.s=1),m=w(e)):m=(o=Math.abs(+J(e)))%2,h=new H(x);;){if(m){if(!(h=h.times(p)).c)break;c?h.c.length>c&&(h.c.length=c):a&&(h=h.mod(t))}if(o){if(0===(o=r(o/2)))break;m=o%2}else if(K(e=e.times(s),e.e+1,1),e.e>14)m=w(e);else{if(0===(o=+J(e)))break;m=o%2}p=p.times(p),c?p.c&&p.c.length>c&&(p.c.length=c):a&&(p=p.mod(t))}return a?h:(d&&(h=x.div(h)),t?h.mod(t):c?K(h,$,M,undefined):h)},R.integerValue=function(e){var t=new H(this);return null==e?e=M:y(e,0,8),K(t,t.e+1,e)},R.isEqualTo=R.eq=function(e,t){return 0===f(this,new H(e,t))},R.isFinite=function(){return!!this.c},R.isGreaterThan=R.gt=function(e,t){return f(this,new H(e,t))>0},R.isGreaterThanOrEqualTo=R.gte=function(e,t){return 1===(t=f(this,new H(e,t)))||0===t},R.isInteger=function(){return!!this.c&&p(this.e/l)>this.c.length-2},R.isLessThan=R.lt=function(e,t){return f(this,new H(e,t))<0},R.isLessThanOrEqualTo=R.lte=function(e,t){return-1===(t=f(this,new H(e,t)))||0===t},R.isNaN=function(){return!this.s},R.isNegative=function(){return this.s<0},R.isPositive=function(){return this.s>0},R.isZero=function(){return!!this.c&&0==this.c[0]},R.minus=function(e,t){var s,a,n,r,i=this,o=i.s;if(t=(e=new H(e,t)).s,!o||!t)return new H(NaN);if(o!=t)return e.s=-t,i.plus(e);var u=i.e/l,d=e.e/l,m=i.c,h=e.c;if(!u||!d){if(!m||!h)return m?(e.s=-t,e):new H(h?i:NaN);if(!m[0]||!h[0])return h[0]?(e.s=-t,e):new H(m[0]?i:3==M?-0:0)}if(u=p(u),d=p(d),m=m.slice(),o=u-d){for((r=o<0)?(o=-o,n=m):(d=u,n=h),n.reverse(),t=o;t--;n.push(0));n.reverse()}else for(a=(r=(o=m.length)<(t=h.length))?o:t,o=t=0;t<a;t++)if(m[t]!=h[t]){r=m[t]<h[t];break}if(r&&(n=m,m=h,h=n,e.s=-e.s),(t=(a=h.length)-(s=m.length))>0)for(;t--;m[s++]=0);for(t=c-1;a>o;){if(m[--a]<h[a]){for(s=a;s&&!m[--s];m[s]=t);--m[s],m[a]+=c}m[a]-=h[a]}for(;0==m[0];m.splice(0,1),--d);return m[0]?V(e,m,d):(e.s=3==M?-1:1,e.c=[e.e=0],e)},R.modulo=R.mod=function(e,t){var a,n,r=this;return e=new H(e,t),!r.c||!e.s||e.c&&!e.c[0]?new H(NaN):!e.c||r.c&&!r.c[0]?new H(r):(9==F?(n=e.s,e.s=1,a=s(r,e,0,3),e.s=n,a.s*=n):a=s(r,e,0,F),(e=r.minus(a.times(e))).c[0]||1!=F||(e.s=r.s),e)},R.multipliedBy=R.times=function(e,t){var s,a,n,r,i,o,u,d,h,g,f,y,w,b,k,S=this,A=S.c,T=(e=new H(e,t)).c;if(!(A&&T&&A[0]&&T[0]))return!S.s||!e.s||A&&!A[0]&&!T||T&&!T[0]&&!A?e.c=e.e=e.s=null:(e.s*=S.s,A&&T?(e.c=[0],e.e=0):e.c=e.e=null),e;for(a=p(S.e/l)+p(e.e/l),e.s*=S.s,(u=A.length)<(g=T.length)&&(w=A,A=T,T=w,n=u,u=g,g=n),n=u+g,w=[];n--;w.push(0));for(b=c,k=m,n=g;--n>=0;){for(s=0,f=T[n]%k,y=T[n]/k|0,r=n+(i=u);r>n;)s=((d=f*(d=A[--i]%k)+(o=y*d+(h=A[i]/k|0)*f)%k*k+w[r]+s)/b|0)+(o/k|0)+y*h,w[r--]=d%b;w[r]=s}return s?++a:w.splice(0,1),V(e,w,a)},R.negated=function(){var e=new H(this);return e.s=-e.s||null,e},R.plus=function(e,t){var s,a=this,n=a.s;if(t=(e=new H(e,t)).s,!n||!t)return new H(NaN);if(n!=t)return e.s=-t,a.minus(e);var r=a.e/l,i=e.e/l,o=a.c,u=e.c;if(!r||!i){if(!o||!u)return new H(n/0);if(!o[0]||!u[0])return u[0]?e:new H(o[0]?a:0*n)}if(r=p(r),i=p(i),o=o.slice(),n=r-i){for(n>0?(i=r,s=u):(n=-n,s=o),s.reverse();n--;s.push(0));s.reverse()}for((n=o.length)-(t=u.length)<0&&(s=u,u=o,o=s,t=n),n=0;t;)n=(o[--t]=o[t]+u[t]+n)/c|0,o[t]=c===o[t]?0:o[t]%c;return n&&(o=[n].concat(o),++i),V(e,o,i)},R.precision=R.sd=function(e,t){var s,a,n,r=this;if(null!=e&&e!==!!e)return y(e,1,h),null==t?t=M:y(t,0,8),K(new H(r),e,t);if(!(s=r.c))return null;if(a=(n=s.length-1)*l+1,n=s[n]){for(;n%10==0;n/=10,a--);for(n=s[0];n>=10;n/=10,a++);}return e&&r.e+1>a&&(a=r.e+1),a},R.shiftedBy=function(e){return y(e,-9007199254740991,u),this.times("1e"+e)},R.squareRoot=R.sqrt=function(){var e,t,a,n,r,i=this,o=i.c,c=i.s,l=i.e,u=N+4,d=new H("0.5");if(1!==c||!o||!o[0])return new H(!c||c<0&&(!o||o[0])?NaN:o?i:1/0);if(0==(c=Math.sqrt(+J(i)))||c==1/0?(((t=g(o)).length+l)%2==0&&(t+="0"),c=Math.sqrt(+t),l=p((l+1)/2)-(l<0||l%2),a=new H(t=c==1/0?"5e"+l:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+l)):a=new H(c+""),a.c[0])for((c=(l=a.e)+u)<3&&(c=0);;)if(r=a,a=d.times(r.plus(s(i,r,u,1))),g(r.c).slice(0,c)===(t=g(a.c)).slice(0,c)){if(a.e<l&&--c,"9999"!=(t=t.slice(c-3,c+1))&&(n||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(K(a,a.e+N+2,1),e=!a.times(a).eq(i));break}if(!n&&(K(r,r.e+N+2,0),r.times(r).eq(i))){a=r;break}u+=4,c+=4,n=1}return K(a,a.e+N+1,M,e)},R.toExponential=function(e,t){return null!=e&&(y(e,0,h),e++),q(this,e,t,1)},R.toFixed=function(e,t){return null!=e&&(y(e,0,h),e=e+this.e+1),q(this,e,t)},R.toFormat=function(e,t,s){var a,n=this;if(null==s)null!=e&&t&&"object"==typeof t?(s=t,t=null):e&&"object"==typeof e?(s=e,e=t=null):s=U;else if("object"!=typeof s)throw Error(i+"Argument not an object: "+s);if(a=n.toFixed(e,t),n.c){var r,o=a.split("."),c=+s.groupSize,l=+s.secondaryGroupSize,u=s.groupSeparator||"",d=o[0],m=o[1],h=n.s<0,p=h?d.slice(1):d,g=p.length;if(l&&(r=c,c=l,l=r,g-=r),c>0&&g>0){for(r=g%c||c,d=p.substr(0,r);r<g;r+=c)d+=u+p.substr(r,c);l>0&&(d+=u+p.slice(r)),h&&(d="-"+d)}a=m?d+(s.decimalSeparator||"")+((l=+s.fractionGroupSize)?m.replace(new RegExp("\\d{"+l+"}\\B","g"),"$&"+(s.fractionGroupSeparator||"")):m):d}return(s.prefix||"")+a+(s.suffix||"")},R.toFraction=function(e){var t,a,n,r,o,c,u,m,h,p,f,y,w=this,b=w.c;if(null!=e&&(!(u=new H(e)).isInteger()&&(u.c||1!==u.s)||u.lt(x)))throw Error(i+"Argument "+(u.isInteger()?"out of range: ":"not an integer: ")+J(u));if(!b)return new H(w);for(t=new H(x),h=a=new H(x),n=m=new H(x),y=g(b),o=t.e=y.length-w.e-1,t.c[0]=d[(c=o%l)<0?l+c:c],e=!e||u.comparedTo(t)>0?o>0?t:h:u,c=B,B=1/0,u=new H(y),m.c[0]=0;p=s(u,t,0,1),1!=(r=a.plus(p.times(n))).comparedTo(e);)a=n,n=r,h=m.plus(p.times(r=h)),m=r,t=u.minus(p.times(r=t)),u=r;return r=s(e.minus(a),n,0,1),m=m.plus(r.times(h)),a=a.plus(r.times(n)),m.s=h.s=w.s,f=s(h,n,o*=2,M).minus(w).abs().comparedTo(s(m,a,o,M).minus(w).abs())<1?[h,n]:[m,a],B=c,f},R.toNumber=function(){return+J(this)},R.toPrecision=function(e,t){return null!=e&&y(e,1,h),q(this,e,t,2)},R.toString=function(e){var t,s=this,a=s.s,n=s.e;return null===n?a?(t="Infinity",a<0&&(t="-"+t)):t="NaN":(null==e?t=n<=D||n>=O?b(g(s.c),n):k(g(s.c),n,"0"):10===e&&W?t=k(g((s=K(new H(s),N+n+1,M)).c),s.e,"0"):(y(e,2,G.length,"Base"),t=S(k(g(s.c),n,"0"),10,e,a,!0)),a<0&&s.c[0]&&(t="-"+t)),t},R.valueOf=R.toJSON=function(){return J(this)},R._isBigNumber=!0,null!=t&&H.set(t),H}(),s.default=s.BigNumber=s,"function"==typeof define&&define.amd?define(function(){return s}):void 0!==t&&t.exports?t.exports=s:(e||(e="undefined"!=typeof self&&self?self:window),e.BigNumber=s)}(this)}}},{package:"@metamask/bridge-status-controller>bignumber.js",file:"node_modules/@metamask/bridge-status-controller/node_modules/bignumber.js/bignumber.js"}],[1257,{"@metamask/utils":1268,buffer:3760},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.isVaultUpdated=s.updateVaultWithDetail=s.updateVault=s.generateSalt=s.serializeBufferForStorage=s.serializeBufferFromStorage=s.keyFromPassword=s.exportKey=s.importKey=s.decryptWithKey=s.decryptWithDetail=s.decrypt=s.encryptWithKey=s.encryptWithDetail=s.encrypt=void 0;const a=e("@metamask/utils"),n="jwk",r="AES-GCM",i="utf-8",o={algorithm:"PBKDF2",params:{iterations:1e4}},c={algorithm:"PBKDF2",params:{iterations:9e5}};async function l(e,t,s,a=f(),n=c){const r=s||await g(e,a,!1,n),i=await d(r,t);return i.salt=a,JSON.stringify(i)}async function u(e,t,s=f(),a=c){const n=await g(e,s,!0,a),r=await p(n);return{vault:await l(e,t,n,s),exportedKeyString:r}}async function d(e,s){const a=JSON.stringify(s),n=t.from(a,i),o=global.crypto.getRandomValues(new Uint8Array(16)),c=b(e),l=await global.crypto.subtle.encrypt({name:r,iv:o},c,n),u=new Uint8Array(l),d=t.from(o).toString("base64"),m={data:t.from(u).toString("base64"),iv:d};return y(e)&&(m.keyMetadata=e.derivationOptions),m}async function m(e,t,s){const a=JSON.parse(t),{salt:n,keyMetadata:r}=a,i=b(s||await g(e,n,!1,r));return await h(i,a)}async function h(e,s){const a=t.from(s.data,"base64"),n=t.from(s.iv,"base64"),o=b(e);let c;try{const e=await crypto.subtle.decrypt({name:r,iv:n},o,a),s=new Uint8Array(e),l=t.from(s).toString(i);c=JSON.parse(l)}catch(e){throw new Error("Incorrect password")}return c}async function p(e){return y(e)?JSON.stringify({key:await window.crypto.subtle.exportKey(n,e.key),derivationOptions:e.derivationOptions}):JSON.stringify(await window.crypto.subtle.exportKey(n,e))}async function g(e,s,a=!1,n=o){const c=t.from(e,i),l=t.from(s,"base64"),u=await global.crypto.subtle.importKey("raw",c,{name:"PBKDF2"},!1,["deriveBits","deriveKey"]),d=await global.crypto.subtle.deriveKey({name:"PBKDF2",salt:l,iterations:n.params.iterations,hash:"SHA-256"},u,{name:r,length:256},a,["encrypt","decrypt"]);return n?{key:d,derivationOptions:n}:d}function f(e=32){const t=new Uint8Array(e);global.crypto.getRandomValues(t);return btoa(String.fromCharCode.apply(null,t))}function y(e){return(0,a.isPlainObject)(e)&&(0,a.hasProperty)(e,"key")&&(0,a.hasProperty)(e,"derivationOptions")&&e.key instanceof CryptoKey&&w(e.derivationOptions)}function w(e){return(0,a.isPlainObject)(e)&&(0,a.hasProperty)(e,"algorithm")&&(0,a.hasProperty)(e,"params")}function b(e){return y(e)?e.key:e}function k(e,t=c){const{keyMetadata:s}=JSON.parse(e);return w(s)&&s.algorithm===t.algorithm&&s.params.iterations===t.params.iterations}s.encrypt=l,s.encryptWithDetail=u,s.encryptWithKey=d,s.decrypt=m,s.decryptWithDetail=async function(e,t){const s=JSON.parse(t),{salt:a,keyMetadata:n}=s,r=await g(e,a,!0,n);return{exportedKeyString:await p(r),vault:await m(e,t,r),salt:a}},s.decryptWithKey=h,s.importKey=async function(e){const t=JSON.parse(e);return s=t,(0,a.isPlainObject)(s)&&(0,a.hasProperty)(s,"key")&&(0,a.hasProperty)(s,"derivationOptions")&&w(s.derivationOptions)?{key:await window.crypto.subtle.importKey(n,t.key,r,!0,["encrypt","decrypt"]),derivationOptions:t.derivationOptions}:await window.crypto.subtle.importKey(n,t,r,!0,["encrypt","decrypt"]);var s},s.exportKey=p,s.keyFromPassword=g,s.serializeBufferFromStorage=function(e){const t="0x"===e.slice(0,2)?e.slice(2):e,s=new Uint8Array(t.length/2);for(let e=0;e<t.length;e+=2){const a=t.substr(e,2);s[e/2]=parseInt(a,16)}return s},s.serializeBufferForStorage=function(e){let t="0x";return e.forEach(e=>{t+=function(e){let t=e.toString(16);for(;t.length<2;)t=`0${t}`;return t}(e)}),t},s.generateSalt=f,s.updateVault=async function(e,t,s=c){return k(e,s)?e:l(t,await m(t,e),undefined,undefined,s)},s.updateVaultWithDetail=async function(e,t,s=c){return k(e.vault,s)?e:u(t,await m(t,e.vault),undefined,s)},s.isVaultUpdated=k}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/browser-passworder",file:"node_modules/@metamask/browser-passworder/dist/index.js"}],[1258,{"./errors.cjs":1266,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.assertExhaustive=s.assertStruct=s.assert=s.AssertionError=void 0;const a=e("@metamask/superstruct"),n=e("./errors.cjs");function r(e,t){return s=e,Boolean("string"==typeof s?.prototype?.constructor?.name)?new e({message:t}):e({message:t});var s}class i extends Error{constructor(e){super(e.message),this.code="ERR_ASSERTION"}}s.AssertionError=i,s.assert=function(e,t="Assertion failed.",s=i){if(!e){if(t instanceof Error)throw t;throw r(s,t)}},s.assertStruct=function(e,t,s="Assertion failed",o=i){try{(0,a.assert)(e,t)}catch(e){throw r(o,`${s}: ${function(e){return(0,n.getErrorMessage)(e).replace(/\.$/u,"")}(e)}.`)}},s.assertExhaustive=function(e){throw new Error("Invalid branch reached. Should be detected during compilation.")}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/assert.cjs"}],[1259,{"./assert.cjs":1258,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.base64=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs");s.base64=(e,t={})=>{const s=t.paddingRequired??!1,r=t.characterSet??"base64";let i,o;return"base64"===r?i=String.raw`[A-Za-z0-9+\/]`:((0,n.assert)("base64url"===r),i=String.raw`[-_A-Za-z0-9]`),o=s?new RegExp(`^(?:${i}{4})*(?:${i}{3}=|${i}{2}==)?$`,"u"):new RegExp(`^(?:${i}{4})*(?:${i}{2,3}|${i}{3}=|${i}{2}==)?$`,"u"),(0,a.pattern)(e,o)}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/base64.cjs"}],[1260,{"./assert.cjs":1258,"./hex.cjs":1267,"@scure/base":2876,buffer:3760},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.createDataView=s.concatBytes=s.valueToBytes=s.base64ToBytes=s.stringToBytes=s.numberToBytes=s.signedBigIntToBytes=s.bigIntToBytes=s.hexToBytes=s.bytesToBase64=s.bytesToString=s.bytesToNumber=s.bytesToSignedBigInt=s.bytesToBigInt=s.bytesToHex=s.assertIsBytes=s.isBytes=void 0;const a=e("@scure/base"),n=e("./assert.cjs"),r=e("./hex.cjs");const i=function(){const e=[];return()=>{if(0===e.length)for(let t=0;t<256;t++)e.push(t.toString(16).padStart(2,"0"));return e}}();function o(e){return e instanceof Uint8Array}function c(e){(0,n.assert)(o(e),"Value must be a Uint8Array.")}function l(e){if(c(e),0===e.length)return"0x";const t=i(),s=new Array(e.length);for(let a=0;a<e.length;a++)s[a]=t[e[a]];return(0,r.add0x)(s.join(""))}function u(e){c(e);const t=l(e);return BigInt(t)}function d(e){if("0x"===e?.toLowerCase?.())return new Uint8Array;(0,r.assertIsHexString)(e);const t=(0,r.remove0x)(e).toLowerCase(),s=t.length%2==0?t:`0${t}`,a=new Uint8Array(s.length/2);for(let e=0;e<a.length;e++){const t=s.charCodeAt(2*e),n=s.charCodeAt(2*e+1),r=t-(t<58?48:87),i=n-(n<58?48:87);a[e]=16*r+i}return a}function m(e){(0,n.assert)("bigint"==typeof e,"Value must be a bigint."),(0,n.assert)(e>=BigInt(0),"Value must be a non-negative bigint.");return d(e.toString(16))}function h(e){(0,n.assert)("number"==typeof e,"Value must be a number."),(0,n.assert)(e>=0,"Value must be a non-negative number."),(0,n.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToBytes` instead.");return d(e.toString(16))}function p(e){return(0,n.assert)("string"==typeof e,"Value must be a string."),(new TextEncoder).encode(e)}function g(e){if("bigint"==typeof e)return m(e);if("number"==typeof e)return h(e);if("string"==typeof e)return e.startsWith("0x")?d(e):p(e);if(o(e))return e;throw new TypeError(`Unsupported value type: "${typeof e}".`)}s.isBytes=o,s.assertIsBytes=c,s.bytesToHex=l,s.bytesToBigInt=u,s.bytesToSignedBigInt=function(e){c(e);let t=BigInt(0);for(const s of e)t=(t<<BigInt(8))+BigInt(s);return BigInt.asIntN(8*e.length,t)},s.bytesToNumber=function(e){c(e);const t=u(e);return(0,n.assert)(t<=BigInt(Number.MAX_SAFE_INTEGER),"Number is not a safe integer. Use `bytesToBigInt` instead."),Number(t)},s.bytesToString=function(e){return c(e),(new TextDecoder).decode(e)},s.bytesToBase64=function(e){return c(e),a.base64.encode(e)},s.hexToBytes=d,s.bigIntToBytes=m,s.signedBigIntToBytes=function(e,t){(0,n.assert)("bigint"==typeof e,"Value must be a bigint."),(0,n.assert)("number"==typeof t,"Byte length must be a number."),(0,n.assert)(t>0,"Byte length must be greater than 0."),(0,n.assert)(function(e,t){(0,n.assert)(t>0);const s=e>>BigInt(31);return!((~e&s)+(e&~s)>>BigInt(8*t-1))}(e,t),"Byte length is too small to represent the given value.");let s=e;const a=new Uint8Array(t);for(let e=0;e<a.length;e++)a[e]=Number(BigInt.asUintN(8,s)),s>>=BigInt(8);return a.reverse()},s.numberToBytes=h,s.stringToBytes=p,s.base64ToBytes=function(e){return(0,n.assert)("string"==typeof e,"Value must be a string."),a.base64.decode(e)},s.valueToBytes=g,s.concatBytes=function(e){const t=new Array(e.length);let s=0;for(let a=0;a<e.length;a++){const n=g(e[a]);t[a]=n,s+=n.length}const a=new Uint8Array(s);for(let e=0,s=0;e<t.length;e++)a.set(t[e],s),s+=t[e].length;return a},s.createDataView=function(e){if(void 0!==t&&e instanceof t){const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return new DataView(t)}return new DataView(e.buffer,e.byteOffset,e.byteLength)}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/bytes.cjs"}],[1261,{"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.toCaipChainId=s.parseCaipAccountId=s.parseCaipChainId=s.isCaipAccountAddress=s.isCaipAccountId=s.isCaipReference=s.isCaipNamespace=s.isCaipChainId=s.KnownCaipNamespace=s.CaipAccountAddressStruct=s.CaipAccountIdStruct=s.CaipReferenceStruct=s.CaipNamespaceStruct=s.CaipChainIdStruct=s.CAIP_ACCOUNT_ADDRESS_REGEX=s.CAIP_ACCOUNT_ID_REGEX=s.CAIP_REFERENCE_REGEX=s.CAIP_NAMESPACE_REGEX=s.CAIP_CHAIN_ID_REGEX=void 0;const a=e("@metamask/superstruct");function n(e){return(0,a.is)(e,s.CaipNamespaceStruct)}function r(e){return(0,a.is)(e,s.CaipReferenceStruct)}s.CAIP_CHAIN_ID_REGEX=/^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u,s.CAIP_NAMESPACE_REGEX=/^[-a-z0-9]{3,8}$/u,s.CAIP_REFERENCE_REGEX=/^[-_a-zA-Z0-9]{1,32}$/u,s.CAIP_ACCOUNT_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u,s.CAIP_ACCOUNT_ADDRESS_REGEX=/^[-.%a-zA-Z0-9]{1,128}$/u,s.CaipChainIdStruct=(0,a.pattern)((0,a.string)(),s.CAIP_CHAIN_ID_REGEX),s.CaipNamespaceStruct=(0,a.pattern)((0,a.string)(),s.CAIP_NAMESPACE_REGEX),s.CaipReferenceStruct=(0,a.pattern)((0,a.string)(),s.CAIP_REFERENCE_REGEX),s.CaipAccountIdStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ACCOUNT_ID_REGEX),s.CaipAccountAddressStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ACCOUNT_ADDRESS_REGEX),function(e){e.Eip155="eip155"}(s.KnownCaipNamespace||(s.KnownCaipNamespace={})),s.isCaipChainId=function(e){return(0,a.is)(e,s.CaipChainIdStruct)},s.isCaipNamespace=n,s.isCaipReference=r,s.isCaipAccountId=function(e){return(0,a.is)(e,s.CaipAccountIdStruct)},s.isCaipAccountAddress=function(e){return(0,a.is)(e,s.CaipAccountAddressStruct)},s.parseCaipChainId=function(e){const t=s.CAIP_CHAIN_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP chain ID.");return{namespace:t.groups.namespace,reference:t.groups.reference}},s.parseCaipAccountId=function(e){const t=s.CAIP_ACCOUNT_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP account ID.");return{address:t.groups.accountAddress,chainId:t.groups.chainId,chain:{namespace:t.groups.namespace,reference:t.groups.reference}}},s.toCaipChainId=function(e,t){if(!n(e))throw new Error(`Invalid "namespace", must match: ${s.CAIP_NAMESPACE_REGEX.toString()}`);if(!r(t))throw new Error(`Invalid "reference", must match: ${s.CAIP_REFERENCE_REGEX.toString()}`);return`${e}:${t}`}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/caip-types.cjs"}],[1262,{"./base64.cjs":1259,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ChecksumStruct=void 0;const a=e("@metamask/superstruct"),n=e("./base64.cjs");s.ChecksumStruct=(0,a.size)((0,n.base64)((0,a.string)(),{paddingRequired:!0}),44,44)}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/checksum.cjs"}],[1263,{"./assert.cjs":1258,"./bytes.cjs":1260,"./hex.cjs":1267,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createHex=s.createBytes=s.createBigInt=s.createNumber=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs"),r=e("./bytes.cjs"),i=e("./hex.cjs"),o=(0,a.union)([(0,a.number)(),(0,a.bigint)(),(0,a.string)(),i.StrictHexStruct]),c=(0,a.coerce)((0,a.number)(),o,Number),l=(0,a.coerce)((0,a.bigint)(),o,BigInt),u=((0,a.union)([i.StrictHexStruct,(0,a.instance)(Uint8Array)]),(0,a.coerce)((0,a.instance)(Uint8Array),(0,a.union)([i.StrictHexStruct]),r.hexToBytes)),d=(0,a.coerce)(i.StrictHexStruct,(0,a.instance)(Uint8Array),r.bytesToHex);s.createNumber=function(e){try{const t=(0,a.create)(e,c);return(0,n.assert)(Number.isFinite(t),`Expected a number-like value, got "${e}".`),t}catch(t){if(t instanceof a.StructError)throw new Error(`Expected a number-like value, got "${e}".`);throw t}},s.createBigInt=function(e){try{return(0,a.create)(e,l)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a number-like value, got "${String(e.value)}".`);throw e}},s.createBytes=function(e){if("string"==typeof e&&"0x"===e.toLowerCase())return new Uint8Array;try{return(0,a.create)(e,u)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}},s.createHex=function(e){if(e instanceof Uint8Array&&0===e.length||"string"==typeof e&&"0x"===e.toLowerCase())return"0x";try{return(0,a.create)(e,d)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/coercers.cjs"}],[1264,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},i=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s};Object.defineProperty(s,"__esModule",{value:!0}),s.FrozenSet=s.FrozenMap=void 0;class o{get size(){return r(this,a,"f").size}[(a=new WeakMap,Symbol.iterator)](){return r(this,a,"f")[Symbol.iterator]()}constructor(e){a.set(this,void 0),i(this,a,new Map(e),"f"),Object.freeze(this)}entries(){return r(this,a,"f").entries()}forEach(e,t){return r(this,a,"f").forEach((s,a,n)=>e.call(t,s,a,this))}get(e){return r(this,a,"f").get(e)}has(e){return r(this,a,"f").has(e)}keys(){return r(this,a,"f").keys()}values(){return r(this,a,"f").values()}toString(){return`FrozenMap(${this.size}) {${this.size>0?` ${[...this.entries()].map(([e,t])=>`${String(e)} => ${String(t)}`).join(", ")} `:""}}`}}s.FrozenMap=o;class c{get size(){return r(this,n,"f").size}[(n=new WeakMap,Symbol.iterator)](){return r(this,n,"f")[Symbol.iterator]()}constructor(e){n.set(this,void 0),i(this,n,new Set(e),"f"),Object.freeze(this)}entries(){return r(this,n,"f").entries()}forEach(e,t){return r(this,n,"f").forEach((s,a,n)=>e.call(t,s,a,this))}has(e){return r(this,n,"f").has(e)}keys(){return r(this,n,"f").keys()}values(){return r(this,n,"f").values()}toString(){return`FrozenSet(${this.size}) {${this.size>0?` ${[...this.values()].map(e=>String(e)).join(", ")} `:""}}`}}s.FrozenSet=c,Object.freeze(o),Object.freeze(o.prototype),Object.freeze(c),Object.freeze(c.prototype)}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/collections.cjs"}],[1265,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/encryption-types.cjs"}],[1266,{"./misc.cjs":1272,"pony-cause":4766},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.wrapError=s.getErrorMessage=s.isErrorWithStack=s.isErrorWithMessage=s.isErrorWithCode=void 0;const a=e("pony-cause"),n=e("./misc.cjs");function r(e){return"object"==typeof e&&null!==e&&"code"in e}function i(e){return"object"==typeof e&&null!==e&&"message"in e}s.isErrorWithCode=r,s.isErrorWithMessage=i,s.isErrorWithStack=function(e){return"object"==typeof e&&null!==e&&"stack"in e},s.getErrorMessage=function(e){return i(e)&&"string"==typeof e.message?e.message:(0,n.isNullOrUndefined)(e)?"":String(e)},s.wrapError=function(e,t){if((s=e)instanceof Error||(0,n.isObject)(s)&&"Error"===s.constructor.name){let s;return s=2===Error.length?new Error(t,{cause:e}):new a.ErrorWithCause(t,{cause:e}),r(e)&&(s.code=e.code),s}var s;return t.length>0?new Error(`${String(e)}: ${t}`):new Error(String(e))}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/errors.cjs"}],[1267,{"./assert.cjs":1258,"./bytes.cjs":1260,"@metamask/superstruct":2705,"@noble/hashes/sha3":2853},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.remove0x=s.add0x=s.isValidChecksumAddress=s.getChecksumAddress=s.isValidHexAddress=s.assertIsStrictHexString=s.assertIsHexString=s.isStrictHexString=s.isHexString=s.HexChecksumAddressStruct=s.HexAddressStruct=s.StrictHexStruct=s.HexStruct=void 0;const a=e("@metamask/superstruct"),n=e("@noble/hashes/sha3"),r=e("./assert.cjs"),i=e("./bytes.cjs");function o(e){return(0,a.is)(e,s.HexStruct)}function c(e){return(0,a.is)(e,s.StrictHexStruct)}function l(e){(0,r.assert)((0,a.is)(e,s.HexChecksumAddressStruct),"Invalid hex address.");const t=d(e.toLowerCase()),o=d((0,i.bytesToHex)((0,n.keccak_256)(t)));return`0x${t.split("").map((e,t)=>{const s=o[t];return(0,r.assert)((0,a.is)(s,(0,a.string)()),"Hash shorter than address."),parseInt(s,16)>7?e.toUpperCase():e}).join("")}`}function u(e){return!!(0,a.is)(e,s.HexChecksumAddressStruct)&&l(e)===e}function d(e){return e.startsWith("0x")||e.startsWith("0X")?e.substring(2):e}s.HexStruct=(0,a.pattern)((0,a.string)(),/^(?:0x)?[0-9a-f]+$/iu),s.StrictHexStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-f]+$/iu),s.HexAddressStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-f]{40}$/u),s.HexChecksumAddressStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-fA-F]{40}$/u),s.isHexString=o,s.isStrictHexString=c,s.assertIsHexString=function(e){(0,r.assert)(o(e),"Value must be a hexadecimal string.")},s.assertIsStrictHexString=function(e){(0,r.assert)(c(e),'Value must be a hexadecimal string, starting with "0x".')},s.isValidHexAddress=function(e){return(0,a.is)(e,s.HexAddressStruct)||u(e)},s.getChecksumAddress=l,s.isValidChecksumAddress=u,s.add0x=function(e){return e.startsWith("0x")?e:e.startsWith("0X")?`0x${e.substring(2)}`:`0x${e}`},s.remove0x=d}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/hex.cjs"}],[1268,{"./assert.cjs":1258,"./base64.cjs":1259,"./bytes.cjs":1260,"./caip-types.cjs":1261,"./checksum.cjs":1262,"./coercers.cjs":1263,"./collections.cjs":1264,"./encryption-types.cjs":1265,"./errors.cjs":1266,"./hex.cjs":1267,"./json.cjs":1269,"./keyring.cjs":1270,"./logging.cjs":1271,"./misc.cjs":1272,"./number.cjs":1273,"./opaque.cjs":1274,"./promise.cjs":1275,"./time.cjs":1276,"./transaction-types.cjs":1277,"./versions.cjs":1278},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./assert.cjs"),s),n(e("./base64.cjs"),s),n(e("./bytes.cjs"),s),n(e("./caip-types.cjs"),s),n(e("./checksum.cjs"),s),n(e("./coercers.cjs"),s),n(e("./collections.cjs"),s),n(e("./encryption-types.cjs"),s),n(e("./errors.cjs"),s),n(e("./hex.cjs"),s),n(e("./json.cjs"),s),n(e("./keyring.cjs"),s),n(e("./logging.cjs"),s),n(e("./misc.cjs"),s),n(e("./number.cjs"),s),n(e("./opaque.cjs"),s),n(e("./promise.cjs"),s),n(e("./time.cjs"),s),n(e("./transaction-types.cjs"),s),n(e("./versions.cjs"),s)}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/index.cjs"}],[1269,{"./assert.cjs":1258,"./misc.cjs":1272,"@metamask/superstruct":2705},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getJsonRpcIdValidator=s.assertIsJsonRpcError=s.isJsonRpcError=s.assertIsJsonRpcFailure=s.isJsonRpcFailure=s.assertIsJsonRpcSuccess=s.isJsonRpcSuccess=s.assertIsJsonRpcResponse=s.isJsonRpcResponse=s.assertIsPendingJsonRpcResponse=s.isPendingJsonRpcResponse=s.JsonRpcResponseStruct=s.JsonRpcFailureStruct=s.JsonRpcSuccessStruct=s.PendingJsonRpcResponseStruct=s.assertIsJsonRpcRequest=s.isJsonRpcRequest=s.assertIsJsonRpcNotification=s.isJsonRpcNotification=s.JsonRpcNotificationStruct=s.JsonRpcRequestStruct=s.JsonRpcParamsStruct=s.JsonRpcErrorStruct=s.JsonRpcIdStruct=s.JsonRpcVersionStruct=s.jsonrpc2=s.getJsonSize=s.getSafeJson=s.isValidJson=s.JsonStruct=s.UnsafeJsonStruct=s.exactOptional=s.object=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs"),r=e("./misc.cjs");function i({path:e,branch:t}){const s=e[e.length-1];return(0,r.hasProperty)(t[t.length-2],s)}function o(e){return new a.Struct({...e,type:`optional ${e.type}`,validator:(t,s)=>!i(s)||e.validator(t,s),refiner:(t,s)=>!i(s)||e.refiner(t,s)})}s.object=e=>(0,a.object)(e),s.exactOptional=o;function c(e){return(0,a.create)(e,s.JsonStruct)}s.UnsafeJsonStruct=(0,a.union)([(0,a.literal)(null),(0,a.boolean)(),(0,a.define)("finite number",e=>(0,a.is)(e,(0,a.number)())&&Number.isFinite(e)),(0,a.string)(),(0,a.array)((0,a.lazy)(()=>s.UnsafeJsonStruct)),(0,a.record)((0,a.string)(),(0,a.lazy)(()=>s.UnsafeJsonStruct))]),s.JsonStruct=(0,a.coerce)(s.UnsafeJsonStruct,(0,a.any)(),e=>((0,n.assertStruct)(e,s.UnsafeJsonStruct),JSON.parse(JSON.stringify(e,(e,t)=>"__proto__"===e||"constructor"===e?undefined:t)))),s.isValidJson=function(e){try{return c(e),!0}catch{return!1}},s.getSafeJson=c,s.getJsonSize=function(e){(0,n.assertStruct)(e,s.JsonStruct,"Invalid JSON value");const t=JSON.stringify(e);return(new TextEncoder).encode(t).byteLength},s.jsonrpc2="2.0",s.JsonRpcVersionStruct=(0,a.literal)(s.jsonrpc2),s.JsonRpcIdStruct=(0,a.nullable)((0,a.union)([(0,a.number)(),(0,a.string)()])),s.JsonRpcErrorStruct=(0,s.object)({code:(0,a.integer)(),message:(0,a.string)(),data:o(s.JsonStruct),stack:o((0,a.string)())}),s.JsonRpcParamsStruct=(0,a.union)([(0,a.record)((0,a.string)(),s.JsonStruct),(0,a.array)(s.JsonStruct)]),s.JsonRpcRequestStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,method:(0,a.string)(),params:o(s.JsonRpcParamsStruct)}),s.JsonRpcNotificationStruct=(0,s.object)({jsonrpc:s.JsonRpcVersionStruct,method:(0,a.string)(),params:o(s.JsonRpcParamsStruct)}),s.isJsonRpcNotification=function(e){return(0,a.is)(e,s.JsonRpcNotificationStruct)},s.assertIsJsonRpcNotification=function(e,t){(0,n.assertStruct)(e,s.JsonRpcNotificationStruct,"Invalid JSON-RPC notification",t)},s.isJsonRpcRequest=function(e){return(0,a.is)(e,s.JsonRpcRequestStruct)},s.assertIsJsonRpcRequest=function(e,t){(0,n.assertStruct)(e,s.JsonRpcRequestStruct,"Invalid JSON-RPC request",t)},s.PendingJsonRpcResponseStruct=(0,a.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,result:(0,a.optional)((0,a.unknown)()),error:(0,a.optional)(s.JsonRpcErrorStruct)}),s.JsonRpcSuccessStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,result:s.JsonStruct}),s.JsonRpcFailureStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,error:s.JsonRpcErrorStruct}),s.JsonRpcResponseStruct=(0,a.union)([s.JsonRpcSuccessStruct,s.JsonRpcFailureStruct]),s.isPendingJsonRpcResponse=function(e){return(0,a.is)(e,s.PendingJsonRpcResponseStruct)},s.assertIsPendingJsonRpcResponse=function(e,t){(0,n.assertStruct)(e,s.PendingJsonRpcResponseStruct,"Invalid pending JSON-RPC response",t)},s.isJsonRpcResponse=function(e){return(0,a.is)(e,s.JsonRpcResponseStruct)},s.assertIsJsonRpcResponse=function(e,t){(0,n.assertStruct)(e,s.JsonRpcResponseStruct,"Invalid JSON-RPC response",t)},s.isJsonRpcSuccess=function(e){return(0,a.is)(e,s.JsonRpcSuccessStruct)},s.assertIsJsonRpcSuccess=function(e,t){(0,n.assertStruct)(e,s.JsonRpcSuccessStruct,"Invalid JSON-RPC success response",t)},s.isJsonRpcFailure=function(e){return(0,a.is)(e,s.JsonRpcFailureStruct)},s.assertIsJsonRpcFailure=function(e,t){(0,n.assertStruct)(e,s.JsonRpcFailureStruct,"Invalid JSON-RPC failure response",t)},s.isJsonRpcError=function(e){return(0,a.is)(e,s.JsonRpcErrorStruct)},s.assertIsJsonRpcError=function(e,t){(0,n.assertStruct)(e,s.JsonRpcErrorStruct,"Invalid JSON-RPC error",t)},s.getJsonRpcIdValidator=function(e){const{permitEmptyString:t,permitFractions:s,permitNull:a}={permitEmptyString:!0,permitFractions:!1,permitNull:!0,...e};return e=>Boolean("number"==typeof e&&(s||Number.isInteger(e))||"string"==typeof e&&(t||e.length>0)||a&&null===e)}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/json.cjs"}],[1270,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/keyring.cjs"}],[1271,{debug:3910},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.createModuleLogger=s.createProjectLogger=void 0;const n=(0,a(e("debug")).default)("metamask");s.createProjectLogger=function(e){return n.extend(e)},s.createModuleLogger=function(e,t){return e.extend(t)}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/logging.cjs"}],[1272,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.calculateNumberSize=s.calculateStringSize=s.isASCII=s.isPlainObject=s.ESCAPE_CHARACTERS_REGEXP=s.JsonSize=s.getKnownPropertyNames=s.hasProperty=s.isObject=s.isNullOrUndefined=s.isNonEmptyArray=void 0,s.isNonEmptyArray=function(e){return Array.isArray(e)&&e.length>0},s.isNullOrUndefined=function(e){return null===e||e===undefined},s.isObject=function(e){return Boolean(e)&&"object"==typeof e&&!Array.isArray(e)};function a(e){return e.charCodeAt(0)<=127}s.hasProperty=(e,t)=>Object.hasOwnProperty.call(e,t),s.getKnownPropertyNames=function(e){return Object.getOwnPropertyNames(e)},function(e){e[e.Null=4]="Null",e[e.Comma=1]="Comma",e[e.Wrapper=1]="Wrapper",e[e.True=4]="True",e[e.False=5]="False",e[e.Quote=1]="Quote",e[e.Colon=1]="Colon",e[e.Date=24]="Date"}(s.JsonSize||(s.JsonSize={})),s.ESCAPE_CHARACTERS_REGEXP=/"|\\|\n|\r|\t/gu,s.isPlainObject=function(e){if("object"!=typeof e||null===e)return!1;try{let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}catch(e){return!1}},s.isASCII=a,s.calculateStringSize=function(e){return e.split("").reduce((e,t)=>a(t)?e+1:e+2,0)+(e.match(s.ESCAPE_CHARACTERS_REGEXP)??[]).length},s.calculateNumberSize=function(e){return e.toString().length}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/misc.cjs"}],[1273,{"./assert.cjs":1258,"./hex.cjs":1267},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.hexToBigInt=s.hexToNumber=s.bigIntToHex=s.numberToHex=void 0;const a=e("./assert.cjs"),n=e("./hex.cjs");s.numberToHex=e=>((0,a.assert)("number"==typeof e,"Value must be a number."),(0,a.assert)(e>=0,"Value must be a non-negative number."),(0,a.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToHex` instead."),(0,n.add0x)(e.toString(16)));s.bigIntToHex=e=>((0,a.assert)("bigint"==typeof e,"Value must be a bigint."),(0,a.assert)(e>=0,"Value must be a non-negative bigint."),(0,n.add0x)(e.toString(16)));s.hexToNumber=e=>{(0,n.assertIsHexString)(e);const t=parseInt(e,16);return(0,a.assert)(Number.isSafeInteger(t),"Value is not a safe integer. Use `hexToBigInt` instead."),t};s.hexToBigInt=e=>((0,n.assertIsHexString)(e),BigInt((0,n.add0x)(e)))}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/number.cjs"}],[1274,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/opaque.cjs"}],[1275,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createDeferredPromise=void 0,s.createDeferredPromise=function({suppressUnhandledRejection:e=!1}={}){let t,s;const a=new Promise((e,a)=>{t=e,s=a});return e&&a.catch(e=>{}),{promise:a,resolve:t,reject:s}}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/promise.cjs"}],[1276,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.timeSince=s.inMilliseconds=s.Duration=void 0,function(e){e[e.Millisecond=1]="Millisecond",e[e.Second=1e3]="Second",e[e.Minute=6e4]="Minute",e[e.Hour=36e5]="Hour",e[e.Day=864e5]="Day",e[e.Week=6048e5]="Week",e[e.Year=31536e6]="Year"}(s.Duration||(s.Duration={}));const a=(e,t)=>{if(!(e=>Number.isInteger(e)&&e>=0)(e))throw new Error(`"${t}" must be a non-negative integer. Received: "${e}".`)};s.inMilliseconds=function(e,t){return a(e,"count"),e*t},s.timeSince=function(e){return a(e,"timestamp"),Date.now()-e}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/time.cjs"}],[1277,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/transaction-types.cjs"}],[1278,{"./assert.cjs":1258,"@metamask/superstruct":2705,semver:5252},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.satisfiesVersionRange=s.gtRange=s.gtVersion=s.assertIsSemVerRange=s.assertIsSemVerVersion=s.isValidSemVerRange=s.isValidSemVerVersion=s.VersionRangeStruct=s.VersionStruct=void 0;const a=e("@metamask/superstruct"),n=e("semver"),r=e("./assert.cjs");s.VersionStruct=(0,a.refine)((0,a.string)(),"Version",e=>null!==(0,n.valid)(e)||`Expected SemVer version, got "${e}"`),s.VersionRangeStruct=(0,a.refine)((0,a.string)(),"Version range",e=>null!==(0,n.validRange)(e)||`Expected SemVer range, got "${e}"`),s.isValidSemVerVersion=function(e){return(0,a.is)(e,s.VersionStruct)},s.isValidSemVerRange=function(e){return(0,a.is)(e,s.VersionRangeStruct)},s.assertIsSemVerVersion=function(e){(0,r.assertStruct)(e,s.VersionStruct)},s.assertIsSemVerRange=function(e){(0,r.assertStruct)(e,s.VersionRangeStruct)},s.gtVersion=function(e,t){return(0,n.gt)(e,t)},s.gtRange=function(e,t){return(0,n.gtr)(e,t)},s.satisfiesVersionRange=function(e,t){return(0,n.satisfies)(e,t,{includePrerelease:!0})}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/versions.cjs"}]],[],{});